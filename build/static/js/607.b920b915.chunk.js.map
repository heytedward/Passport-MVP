{"version":3,"file":"static/js/607.b920b915.chunk.js","mappings":"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","sources":["components/NavBar.jsx","utils/stampImages.js","hooks/useStamps.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\n\nconst liquidBrand = keyframes`\n  0%, 100% { \n    background-position: 0% 50%; \n  }\n  50% { \n    background-position: 100% 50%; \n  }\n`;\n\nconst Nav = styled.nav`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(18, 18, 18, 0.95);\n  backdrop-filter: blur(20px);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  padding: 8px 0 max(8px, env(safe-area-inset-bottom));\n  z-index: 1000;\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3);\n`;\n\nconst NavContainer = styled.div`\n  max-width: 100%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  position: relative;\n  padding: 0 20px;\n`;\n\n\n\nconst NavItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 12px;\n  border-radius: 12px;\n  text-decoration: none;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  min-width: 60px;\n  min-height: 48px; /* Ensure 44px+ touch target */\n  color: ${({ $isActive }) => \n    $isActive ? '#FFB000' : 'rgba(250, 250, 250, 0.7)'};\n  \n  ${({ $isActive }) => $isActive && `\n    background: rgba(127, 63, 191, 0.15);\n    transform: translateY(-2px);\n  `}\n  \n  &:hover {\n    color: #FFB000;\n    background: rgba(76, 28, 140, 0.1);\n    transform: translateY(-1px);\n  }\n  \n  &:active::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    background: rgba(127, 63, 191, 0.3);\n    border-radius: 50%;\n    transform: translate(-50%, -50%);\n    animation: ripple 0.3s ease-out;\n  }\n`;\n\nconst IconContainer = styled.div`\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 4px;\n  position: relative;\n  \n  svg {\n    width: 22px;\n    height: 22px;\n    stroke-width: 2;\n    transition: all 0.2s ease;\n  }\n  \n  ${({ $isActive }) => $isActive && `\n    svg {\n      stroke-width: 2.5;\n      transform: scale(1.1);\n    }\n  `}\n`;\n\nconst Label = styled.span`\n  font-size: 11px;\n  font-weight: ${({ $isActive }) => $isActive ? '600' : '500'};\n  color: ${({ $isActive, theme }) => \n    $isActive ? theme.colors?.accent?.purple || '#7F3FBF' : 'rgba(255, 255, 255, 0.7)'};\n  transition: all 0.2s ease;\n  text-align: center;\n  line-height: 1.2;\n`;\n\nconst ActiveIndicator = styled.div`\n  position: absolute;\n  top: -2px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 4px;\n  height: 4px;\n  background: ${({ theme }) => theme.colors?.accent?.purple || '#7F3FBF'};\n  border-radius: 50%;\n  opacity: ${({ $isActive }) => $isActive ? 1 : 0};\n  transition: opacity 0.2s ease;\n`;\n\nconst ScanButtonContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n\n\nconst ScanButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 56px;\n  height: 56px;\n  background: linear-gradient(135deg, #4C1C8C 0%, #FFB000 100%);\n  border-radius: 18px;\n  text-decoration: none;\n  color: white;\n  font-size: 24px;\n  box-shadow: \n    0 8px 25px rgba(76, 28, 140, 0.4),\n    0 0 20px rgba(255, 176, 0, 0.3);\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.320, 1);\n  transform: translateY(-8px);\n  position: relative;\n  overflow: hidden;\n  \n  /* Brand shimmer */\n  &::before {\n    content: '';\n    position: absolute;\n    top: -50%;\n    left: -50%;\n    width: 200%;\n    height: 200%;\n    background: linear-gradient(45deg, \n      transparent 30%, \n      rgba(250,250,250,0.4) 50%, \n      transparent 70%\n    );\n    transform: rotate(45deg);\n    animation: ${liquidBrand} 3s linear infinite;\n  }\n  \n  &:hover {\n    transform: translateY(-12px) scale(1.1);\n    box-shadow: \n      0 12px 35px rgba(76, 28, 140, 0.6),\n      0 0 30px rgba(255, 176, 0, 0.5);\n  }\n  \n  &:active {\n    transform: translateY(-6px) scale(0.95);\n  }\n  \n  svg {\n    width: 40px;\n    height: 40px;\n    stroke-width: 2.5;\n  }\n`;\n\nconst NavBar = () => {\n  const location = useLocation();\n  \n  const navItems = [\n    { path: '/', icon: 'Home', label: 'Home' },\n    { path: '/passport', icon: 'Book', label: 'Passport' },\n    { path: '/closet', icon: 'Shirt', label: 'Closet' },\n    { path: '/profile', icon: 'User', label: 'Profile' }\n  ];\n  \n  const getIcon = (iconName, isActive) => {\n    const color = isActive ? '#7F3FBF' : 'rgba(255, 255, 250, 0.7)';\n    \n    switch (iconName) {\n      case 'Home':\n        return (\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke={color}>\n            <path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/>\n            <polyline points=\"9,22 9,12 15,12 15,22\"/>\n          </svg>\n        );\n      case 'Book':\n        return (\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke={color}>\n            <path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"/>\n            <path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"/>\n          </svg>\n        );\n      case 'Shirt':\n        return (\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke={color}>\n            <path d=\"M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z\"/>\n          </svg>\n        );\n      case 'User':\n        return (\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke={color}>\n            <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\n            <circle cx=\"12\" cy=\"7\" r=\"4\"/>\n          </svg>\n        );\n      default:\n        return null;\n    }\n  };\n  \n  return (\n    <Nav>\n      <NavContainer>\n        {navItems.slice(0, 2).map((item) => {\n          const isActive = location.pathname === item.path;\n          return (\n            <NavItem key={item.path} to={item.path} $isActive={isActive}>\n              <ActiveIndicator $isActive={isActive} />\n              <IconContainer $isActive={isActive}>\n                {getIcon(item.icon, isActive)}\n              </IconContainer>\n              <Label $isActive={isActive}>{item.label}</Label>\n            </NavItem>\n          );\n        })}\n        \n        <ScanButtonContainer>\n          <ScanButton to=\"/scan\" aria-label=\"Scan QR Code\">\n            <svg viewBox=\"0 0 1929.64 1459.22\" fill=\"currentColor\">\n              <g>\n                <path d=\"M965.35,380.63c-53.21,1.58-99.94-37.36-100.16-97.49-.2-54.36,38.41-99.68,100.16-100.14,55.99-.42,98.03,40.8,99.26,97.88,1.22,56.35-42.99,101.52-99.27,99.75Z\"/>\n                <path d=\"M966.46,439.05c47.18-2.32,98.18,37.36,98.17,98.68,0,55.27-41.86,99.73-99.63,98.75-60.67-1.03-99.14-42.83-99.9-97.4-.86-61.26,50.23-102.87,101.37-100.03Z\"/>\n                <path d=\"M236.74,262.16c4.24,.25,7.04-2.85,10.3-4.95,35.77-23.06,78.33-20.59,112.28,4.79,40.25,30.08,54.38,86.37,35.04,136.47-14.39,37.29-41.54,62.37-78.27,77.53-17.69,7.3-36.28,11.97-55.09,11.84-37.53-.26-71.65-11.49-100.36-36.96-28.13-24.95-43.88-56.5-51.22-92.84-11.23-55.55-1.27-108.45,21.14-159.34,23.73-53.88,60.05-98.07,107.56-132.82C284.89,31.68,337.56,12.12,394.65,3.7c29.15-4.3,58.57-4.72,87.59-1.92,48.25,4.66,94.63,17.27,137.57,40.86,66.42,36.48,115.74,89.41,149.97,156.48,21.05,41.23,34.11,85.05,39.19,131.26,3.15,28.68,5.46,57.46,3.87,86.17-2.65,48.19-11.14,95.48-25.31,141.79-27.17,88.79-71.22,168.99-123.39,245.11-37.17,54.23-77.54,106.01-120.45,155.83-30.53,35.45-61.47,70.51-93.43,104.72-23.31,24.95-46.07,50.49-69.42,75.41-70.8,75.55-143.47,149.3-217.8,221.35-30.3,29.37-61.18,58.3-93.28,85.83-13.53,11.6-28.74,14.4-45.38,11.63-16.21-2.71-27.3-20.35-23.7-36.76,1.96-8.91,6.27-16.77,11.15-24.44,17.42-27.41,37.62-52.79,57.51-78.36,57.5-73.89,115.36-147.49,173.21-221.11,48.68-61.95,96.29-124.71,142.59-188.46,55.87-76.92,109.09-155.58,153.83-239.6,32.46-60.96,59.52-124.21,76.27-191.5,8.52-34.21,13.5-68.98,13.22-104.18-.37-48.6-11.37-95.01-37.3-136.42-33.78-53.94-82.9-86.77-145.84-97.34-59.39-9.98-112.46,6.05-159.33,42.87-24.3,19.09-41.59,43.47-49.46,73.87-.44,1.72-1.16,3.41,.21,5.37Z\"/>\n                <path d=\"M1695.11,264.15c-3.87-22.28-12.68-40.21-25.49-56.03-31.54-38.96-73.39-60.6-122.15-68-76.02-11.54-139.34,14.6-190.01,70.76-29.32,32.5-44.49,72.67-51.91,115.55-10.35,59.8-1.62,118.08,14.96,175.64,20.57,71.42,52.55,137.82,89.39,202.03,52.52,91.52,113.86,177.08,177.14,261.33,54.59,72.67,110.97,143.95,167.02,215.48,47.73,60.91,95.63,121.69,141.96,183.68,9.97,13.33,19.6,26.96,27.71,41.55,5.95,10.71,8.2,21.92,3.05,33.67-5.14,11.73-13.86,18.21-26.95,19.23-16.72,1.3-30.31-3.95-43.08-15.07-82.91-72.22-159.38-151.09-236.49-229.24-33.47-33.93-65.79-69.06-98.59-103.68-31.86-33.64-63.52-67.51-94.03-102.36-35.26-40.27-70.04-80.95-103.23-123.02-37.15-47.08-71.74-95.89-102.59-147.23-36.79-61.24-65.49-126.16-84.5-195.23-15.29-55.58-21.92-112.14-19.43-169.67,4.56-105.31,40.12-197.82,115.47-273.1,53.73-53.67,119.21-85.11,194-95.75,92.53-13.17,179.85,2.43,257.42,56.57,75.73,52.85,123.95,124.99,138.04,216.96,7.33,47.83,3.27,95.62-23.74,138.08-25.55,40.17-61.92,64.11-109.97,69.79-41.07,4.85-77.82-6.27-110.35-30.22-45.3-33.36-64.26-94.2-43.97-145.77,16.74-42.55,57.05-69.78,101.87-68.7,16.18,.39,30.85,5.69,44.53,14.04,4.13,2.52,8.2,5.16,13.93,8.77Z\"/>\n              </g>\n            </svg>\n          </ScanButton>\n        </ScanButtonContainer>\n        \n        {navItems.slice(2).map((item) => {\n          const isActive = location.pathname === item.path;\n          return (\n            <NavItem key={item.path} to={item.path} $isActive={isActive}>\n              <ActiveIndicator $isActive={isActive} />\n              <IconContainer $isActive={isActive}>\n                {getIcon(item.icon, isActive)}\n              </IconContainer>\n              <Label $isActive={isActive}>{item.label}</Label>\n            </NavItem>\n          );\n        })}\n      </NavContainer>\n    </Nav>\n  );\n};\n\nexport default NavBar; ","/**\n * Stamp Images Configuration for Monarch Passport MVP\n * \n * This module contains stamp image configurations and URLs\n * to avoid hardcoded base64 data in main code files.\n */\n\n// Stamp image configurations\nexport const STAMP_IMAGES = {\n  first_item: {\n    id: 'first_item',\n    name: 'First Item',\n    description: 'Collect your first item',\n    imageUrl: '/Stamps/stamp_first_item.svg',\n    altText: 'First Item Stamp'\n  },\n  gm: {\n    id: 'gm',\n    name: 'Good Morning',\n    description: 'Complete your first daily quest',\n    imageUrl: '/Stamps/stamp_gm.svg',\n    altText: 'Good Morning Stamp'\n  },\n  master: {\n    id: 'master',\n    name: 'Master Collector',\n    description: 'Collect 10 unique items',\n    imageUrl: '/Stamps/stamp_master.svg',\n    altText: 'Master Collector Stamp'\n  },\n  passport: {\n    id: 'passport',\n    name: 'Passport Holder',\n    description: 'Unlock your digital passport',\n    imageUrl: '/Stamps/stamp_passport.svg',\n    altText: 'Passport Holder Stamp'\n  },\n  qr: {\n    id: 'qr',\n    name: 'QR Scanner',\n    description: 'Scan your first QR code',\n    imageUrl: '/Stamps/stamp_qr.svg',\n    altText: 'QR Scanner Stamp'\n  },\n  quest: {\n    id: 'quest',\n    name: 'Quest Master',\n    description: 'Complete 5 quests',\n    imageUrl: '/Stamps/stamp_quest.svg',\n    altText: 'Quest Master Stamp'\n  },\n  social: {\n    id: 'social',\n    name: 'Social Butterfly',\n    description: 'Connect with 3 friends',\n    imageUrl: '/Stamps/stamp_social.svg',\n    altText: 'Social Butterfly Stamp'\n  },\n  streak: {\n    id: 'streak',\n    name: 'Streak Keeper',\n    description: 'Maintain a 7-day streak',\n    imageUrl: '/Stamps/stamp_streak.svg',\n    altText: 'Streak Keeper Stamp'\n  },\n  style: {\n    id: 'style',\n    name: 'Style Icon',\n    description: 'Unlock 3 different themes',\n    imageUrl: '/Stamps/stamp_style.svg',\n    altText: 'Style Icon Stamp'\n  }\n};\n\n// Get stamp image by ID\nexport function getStampImage(stampId) {\n  return STAMP_IMAGES[stampId] || null;\n}\n\n// Get all stamp images\nexport function getAllStampImages() {\n  return Object.values(STAMP_IMAGES);\n}\n\n// Get stamp image URL\nexport function getStampImageUrl(stampId) {\n  const stamp = STAMP_IMAGES[stampId];\n  return stamp ? stamp.imageUrl : null;\n}\n\n// Get stamp image alt text\nexport function getStampImageAlt(stampId) {\n  const stamp = STAMP_IMAGES[stampId];\n  return stamp ? stamp.altText : 'Stamp';\n}\n\nexport default STAMP_IMAGES; ","import { useState, useEffect, useCallback } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useAuth } from './useAuth';\nimport { STAMP_IMAGES } from '../utils/stampImages';\n\n// Complete 9 stamps for perfect 3x3 grid\nexport const STAMPS = [\n  { \n    stamp_id: 'received_passport', \n    name: 'Received Passport', \n    description: 'Welcome to the Monarch family',\n    image: STAMP_IMAGES.passport.imageUrl,\n    category: 'milestone'\n  },\n  { \n    stamp_id: 'morning_gm', \n    name: 'GM', \n    description: 'Said GM to the community',\n    image: STAMP_IMAGES.gm.imageUrl,\n    category: 'social'\n  },\n  { \n    stamp_id: 'quest_completed', \n    name: 'Quest Master', \n    description: 'Completed your first quest',\n    image: STAMP_IMAGES.quest.imageUrl,\n    category: 'achievement'\n  },\n  { \n    stamp_id: 'qr_scanner', \n    name: 'QR Scanner Pro', \n    description: 'Scanned your first QR code',\n    image: STAMP_IMAGES.qr.imageUrl,\n    category: 'scan'\n  },\n  { \n    stamp_id: 'first_item', \n    name: 'First Item', \n    description: 'Scanned your first clothing item',\n    image: STAMP_IMAGES.first_item.imageUrl,\n    category: 'scan'\n  },\n  { \n    stamp_id: 'style_icon', \n    name: 'Style Icon', \n    description: 'Collected items from 3+ different categories',\n    image: STAMP_IMAGES.style.imageUrl,\n    category: 'collection'\n  },\n  { \n    stamp_id: 'social_share', \n    name: 'Social Butterfly', \n    description: 'Shared content on social media',\n    image: STAMP_IMAGES.social.imageUrl,\n    category: 'social'\n  },\n  { \n    stamp_id: 'streak_master', \n    name: 'Streak Master', \n    description: 'Maintained a 7-day login streak',\n    image: STAMP_IMAGES.streak.imageUrl,\n    category: 'dedication'\n  },\n  { \n    stamp_id: 'master_collector', \n    name: 'Master Collector', \n    description: 'Achieved elite collector status',\n    image: STAMP_IMAGES.master.imageUrl,\n    category: 'elite'\n  }\n];\n\nexport const useStamps = () => {\n  const { user } = useAuth();\n  const [userStamps, setUserStamps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Add debugging\n  useEffect(() => {\n    console.log('🔍 useStamps - User state:', user ? 'Authenticated' : 'Not authenticated');\n    console.log('🔍 useStamps - Loading state:', loading);\n    console.log('🔍 useStamps - Error state:', error);\n  }, [user, loading, error]);\n  \n  // Get stamps with unlock status\n  const stampsWithStatus = STAMPS.map(stamp => ({\n    ...stamp,\n    unlocked: userStamps.some(userStamp => userStamp.stamp_id === stamp.stamp_id),\n    earnedAt: userStamps.find(userStamp => userStamp.stamp_id === stamp.stamp_id)?.created_at\n  }));\n  \n  // Statistics\n  const unlockedCount = stampsWithStatus.filter(stamp => stamp.unlocked).length;\n  const totalCount = STAMPS.length;\n  const completionPercentage = Math.round((unlockedCount / totalCount) * 100);\n  \n  // Load user stamps from database\n  const loadUserStamps = useCallback(async () => {\n    console.log('🔍 loadUserStamps called - User ID:', user?.id);\n    \n    if (!user?.id) {\n      console.log('⚠️ No user ID found, setting empty stamps and loading false');\n      setUserStamps([]);\n      setLoading(false);\n      setError(null);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔍 Starting database query for user stamps...');\n\n      // Add timeout to prevent infinite loading\n      const timeoutPromise = new Promise((_, reject) => \n        setTimeout(() => reject(new Error('Database query timeout')), 8000)\n      );\n\n      const queryPromise = supabase\n        .from('user_stamps')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      const { data, error: fetchError } = await Promise.race([queryPromise, timeoutPromise]);\n\n      if (fetchError) throw fetchError;\n\n      setUserStamps(data || []);\n      console.log('✅ User stamps loaded successfully:', data?.length || 0, 'stamps');\n    } catch (err) {\n      console.error('❌ Error loading user stamps:', err);\n      setError(err.message);\n      // Set empty array on error so UI can still function\n      setUserStamps([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [user]);\n\n  // Check if user has a specific stamp\n  const hasStamp = useCallback((stampId) => {\n    return userStamps.some(stamp => stamp.stamp_id === stampId);\n  }, [userStamps]);\n\n  // Generic function to award a stamp\n  const awardStamp = useCallback(async (stampId, metadata = {}) => {\n    if (!user?.id) {\n      throw new Error('User must be logged in to earn stamps');\n    }\n\n    // Check if user already has this stamp\n    if (hasStamp(stampId)) {\n      console.log(`User already has stamp: ${stampId}`);\n      return { success: true, alreadyEarned: true };\n    }\n\n    try {\n      const { data, error: insertError } = await supabase\n        .from('user_stamps')\n        .insert([{\n          user_id: user.id,\n          stamp_id: stampId,\n          metadata,\n          created_at: new Date().toISOString()\n        }])\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n\n      // Update local state\n      setUserStamps(prev => [data, ...prev]);\n\n      // Check if this was the 8th stamp (trigger Master Collector)\n      const newUnlockedCount = userStamps.length + 1;\n      if (newUnlockedCount === 8 && !hasStamp('master_collector')) {\n        // Award Master Collector stamp\n        setTimeout(() => {\n          awardMasterStamp();\n        }, 1000);\n      }\n\n      return { success: true, data, alreadyEarned: false };\n    } catch (err) {\n      console.error(`Error awarding stamp ${stampId}:`, err);\n      throw err;\n    }\n  }, [user?.id, hasStamp, userStamps.length]);\n\n  // Specific stamp award functions\n  const awardPassportStamp = useCallback(async () => {\n    return awardStamp('received_passport', { \n      trigger: 'first_login',\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardGMStamp = useCallback(async () => {\n    return awardStamp('morning_gm', { \n      trigger: 'daily_gm_quest',\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardQuestStamp = useCallback(async (questType = 'general') => {\n    return awardStamp('quest_completed', { \n      trigger: 'quest_completion',\n      quest_type: questType,\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardQRStamp = useCallback(async () => {\n    return awardStamp('qr_scanner', { \n      trigger: 'first_qr_scan',\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardFirstItemStamp = useCallback(async (itemType = 'clothing') => {\n    return awardStamp('first_item', { \n      trigger: 'first_item_scan',\n      item_type: itemType,\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardSocialStamp = useCallback(async (platform = 'instagram') => {\n    return awardStamp('social_share', { \n      trigger: 'social_sharing',\n      platform,\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardStreakStamp = useCallback(async (streakDays = 7) => {\n    return awardStamp('streak_master', { \n      trigger: 'login_streak',\n      streak_days: streakDays,\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardStyleStamp = useCallback(async (categoriesCount = 3) => {\n    return awardStamp('style_icon', { \n      trigger: 'style_diversity',\n      categories_collected: categoriesCount,\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  const awardMasterStamp = useCallback(async () => {\n    return awardStamp('master_collector', { \n      trigger: 'achievement_milestone',\n      stamps_count: 8,\n      timestamp: new Date().toISOString()\n    });\n  }, [awardStamp]);\n\n  // Load stamps when user authentication changes\n  useEffect(() => {\n    console.log('🔍 useStamps useEffect triggered - User ID:', user?.id);\n    // Only load stamps if we have finished the initial auth check\n    if (user?.id || user === null) {\n      loadUserStamps();\n    }\n  }, [user?.id, loadUserStamps]);\n\n  // Add a maximum loading timeout to prevent infinite loading\n  useEffect(() => {\n    const maxLoadingTimeout = setTimeout(() => {\n      if (loading) {\n        console.warn('⚠️ Maximum loading time reached, forcing loading to false');\n        setLoading(false);\n        setError('Loading timeout - please refresh the page');\n      }\n    }, 10000); // 10 second maximum loading time\n\n    return () => clearTimeout(maxLoadingTimeout);\n  }, [loading]);\n\n  // Real-time subscription for stamp updates (disabled to prevent conflicts)\n  useEffect(() => {\n    if (!user?.id) return;\n\n    // Temporarily disable real-time subscriptions to prevent conflicts\n    // const subscription = supabase\n    //   .channel('user_stamps_changes')\n    //   .on('postgres_changes', \n    //     { \n    //       event: 'INSERT', \n    //       schema: 'public', \n    //       table: 'user_stamps',\n    //       filter: `user_id=eq.${user.id}`\n    //     }, \n    //     (payload) => {\n    //       setUserStamps(prev => [payload.new, ...prev]);\n    //     }\n    //   )\n    //   .subscribe();\n\n    // return () => {\n    //   subscription.unsubscribe();\n    // };\n  }, [user?.id]);\n\n  return {\n    // Data\n    stamps: stampsWithStatus,\n    userStamps,\n    \n    // Statistics\n    unlockedCount,\n    totalCount,\n    completionPercentage,\n    \n    // State\n    loading,\n    error,\n    \n    // Functions\n    hasStamp,\n    loadUserStamps,\n    refreshStamps: loadUserStamps, // Add alias for manual refresh\n    \n    // Award functions\n    awardPassportStamp,\n    awardGMStamp,\n    awardQuestStamp,\n    awardQRStamp,\n    awardFirstItemStamp,\n    awardSocialStamp,\n    awardStreakStamp,\n    awardStyleStamp,\n    awardMasterStamp\n  };\n}; "],"names":["liquidBrand","keyframes","_templateObject","_taggedTemplateLiteral","Nav","styled","nav","_templateObject2","NavContainer","div","_templateObject3","NavItem","Link","_templateObject4","_ref","$isActive","_ref2","IconContainer","_templateObject5","_ref3","Label","span","_templateObject6","_ref4","_ref5","_theme$colors","_theme$colors$accent","theme","colors","accent","purple","ActiveIndicator","_templateObject7","_ref6","_theme$colors2","_theme$colors2$accent","_ref7","ScanButtonContainer","_templateObject8","ScanButton","_templateObject9","NavBar","location","useLocation","navItems","path","icon","label","getIcon","iconName","isActive","color","_jsxs","viewBox","fill","stroke","children","_jsx","d","points","cx","cy","r","slice","map","item","pathname","to","STAMP_IMAGES","first_item","id","name","description","imageUrl","altText","gm","master","passport","qr","quest","social","streak","style","STAMPS","stamp_id","image","category","useStamps","user","useAuth","userStamps","setUserStamps","useState","loading","setLoading","error","setError","useEffect","console","log","stampsWithStatus","stamp","_userStamps$find","_objectSpread","unlocked","some","userStamp","earnedAt","find","created_at","unlockedCount","filter","length","totalCount","completionPercentage","Math","round","loadUserStamps","useCallback","async","timeoutPromise","Promise","_","reject","setTimeout","Error","queryPromise","supabase","from","select","eq","order","ascending","data","fetchError","race","err","message","hasStamp","stampId","awardStamp","metadata","arguments","undefined","concat","success","alreadyEarned","insertError","insert","user_id","Date","toISOString","single","prev","awardMasterStamp","awardPassportStamp","trigger","timestamp","awardGMStamp","awardQuestStamp","quest_type","awardQRStamp","awardFirstItemStamp","item_type","awardSocialStamp","platform","awardStreakStamp","streak_days","awardStyleStamp","categories_collected","stamps_count","maxLoadingTimeout","warn","clearTimeout","stamps","refreshStamps"],"sourceRoot":""}