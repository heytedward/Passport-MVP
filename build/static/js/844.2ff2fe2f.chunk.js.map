{"version":3,"file":"static/js/844.2ff2fe2f.chunk.js","mappings":"mNAOA,MAAMA,EAAc,CAClBC,UAAW,YACXC,KAAM,OACNC,OAAQ,SACRC,UAAW,aAIPC,EAAiB,CACrB,CAACL,EAAYC,WAAY,GACzB,CAACD,EAAYE,MAAO,CAACF,EAAYC,WACjC,CAACD,EAAYG,QAAS,CAACH,EAAYE,KAAMF,EAAYC,WACrD,CAACD,EAAYI,WAAY,CAACJ,EAAYG,OAAQH,EAAYE,KAAMF,EAAYC,YAIxEK,EAAmB,CACvB,CAACN,EAAYC,WAAY,CACvB,yBACA,yBACA,oBACA,yBACA,wBACA,0BACA,2BAEF,CAACD,EAAYE,MAAO,CAClB,qBACA,wBACA,oBACA,sBACA,sBACA,yBAEF,CAACF,EAAYG,QAAS,CACpB,sBACA,sBACA,mBACA,uBACA,uBACA,wBACA,wBACA,oBACA,yBAEF,CAACH,EAAYI,WAAY,CACvB,gBACA,0BACA,0BACA,2BACA,wBACA,2BAKEG,EAAe,CACnB,CAACP,EAAYC,WAAY,CAAEO,KAAM,YAAaC,MAAO,eAAMC,YAAa,gBACxE,CAACV,EAAYE,MAAO,CAAEM,KAAM,OAAQC,MAAO,eAAMC,YAAa,aAC9D,CAACV,EAAYG,QAAS,CAAEK,KAAM,SAAUC,MAAO,eAAMC,YAAa,SAClE,CAACV,EAAYI,WAAY,CAAEI,KAAM,YAAaC,MAAO,eAAMC,YAAa,gBA4B7DC,EAAe,CAE1B,eAAMC,CAAUC,EAAQC,GACtB,IAEE,MAAMC,EA7BYF,IACjBA,GAA4B,kBAAXA,EAKJ,kEAGHG,KAAKH,IAFF,YAEwBG,KAAKH,GAIxC,CAAEI,SAAS,GAHT,CAAEA,SAAS,EAAOC,MAAO,uDARzB,CAAED,SAAS,EAAOC,MAAO,0BA2BLC,CAAeN,GACxC,IAAKE,EAAiBE,QACpB,MAAO,CAAEA,SAAS,EAAOC,MAAOH,EAAiBG,OAGnD,MAAME,EAlBUN,IACfO,OAAOC,OAAOtB,GAAauB,SAAST,GAGlC,CAAEG,SAAS,GAFT,CAAEA,SAAS,EAAOC,MAAM,iCAADM,OAAmCH,OAAOC,OAAOtB,GAAayB,KAAK,QAgBxEC,CAAaZ,GACpC,IAAKM,EAAeH,QAClB,MAAO,CAAEA,SAAS,EAAOC,MAAOE,EAAeF,OAIjD,MAAM,MAAEA,SAAgBS,EAAAA,EACrBC,KAAK,iBACLC,OAAO,CAAEf,SACTgB,GAAG,KAAMjB,GAEZ,GAAIK,EAEF,OADAa,QAAQb,MAAM,kBAAmBA,GAC1B,CAAED,SAAS,EAAOC,MAAO,8BAIlCc,EAAAA,GAAiBC,wBAAwB,SAAS,GAADT,OAAKV,EAAI,mBAAmB,CAC3EoB,aAAcrB,EACdsB,QAASrB,EACTsB,OAAQ,oBAGV,MAAMC,EAAc9B,EAAaO,GAGjC,OAFAiB,QAAQO,IAAI,eAADd,OAAWX,EAAM,sBAAAW,OAAqBa,EAAY5B,MAAK,KAAAe,OAAIa,EAAY7B,KAAI,MAAAgB,OAAKa,EAAY3B,YAAW,MAE3G,CACLO,SAAS,EACTsB,QAAQ,sCAADf,OAAwCa,EAAY5B,MAAK,KAAAe,OAAIa,EAAY7B,MAChFM,OACAuB,cAGJ,CAAE,MAAOnB,GAEP,OADAa,QAAQb,MAAM,0BAA2BA,GAClC,CAAED,SAAS,EAAOC,MAAOA,EAAMqB,QACxC,CACF,EAGA,oBAAMC,CAAe3B,GACnB,OAAO4B,KAAK7B,UAAUC,EAAQb,EAAYI,UAC5C,EAGA,mBAAMsC,CAAc7B,GAClB,OAAO4B,KAAK7B,UAAUC,EAAQb,EAAYE,KAC5C,EAGA,iBAAMyC,CAAY9B,GAChB,OAAO4B,KAAK7B,UAAUC,EAAQb,EAAYC,UAC5C,EAGA,sBAAM2C,CAAiB/B,GACrB,IACE,MAAM,KAAEgC,EAAI,MAAE3B,SAAgBS,EAAAA,EAC3BC,KAAK,iBACLkB,OAAO,oCACPhB,GAAG,KAAMjB,GACTkC,SAEH,GAAI7B,EACF,MAAO,CAAED,SAAS,EAAOC,MAAO,+BAGlC,MAAMJ,EAAO+B,EAAK/B,MAAQd,EAAYC,UAGtC,MAAO,CACLgB,SAAS,EACTJ,SACAC,OACAuB,YANkB9B,EAAaO,GAO/BkC,QAASlC,IAASd,EAAYC,UAC9BgD,YAAanC,IAASd,EAAYE,KAClCgD,aAAcpC,IAASd,EAAYI,UACnC+C,SAAU,CACRC,MAAOP,EAAKO,MACZC,SAAUR,EAAKS,UACfC,SAAUV,EAAKU,UAIrB,CAAE,MAAOrC,GAEP,OADAa,QAAQb,MAAM,sBAAuBA,GAC9B,CAAED,SAAS,EAAOC,MAAOA,EAAMqB,QACxC,CACF,EAGA,kBAAMiB,GACJ,IACE,MAAM,KAAEX,EAAI,MAAE3B,SAAgBS,EAAAA,EAC3BC,KAAK,iBACLkB,OAAO,oDACPW,IAAI,OAAQzD,EAAYC,WACxByD,MAAM,OAAQ,CAAEC,WAAW,IAE9B,GAAIzC,EACF,MAAO,CAAED,SAAS,EAAOC,MAAO,0BAQlC,MAAO,CAAED,SAAS,EAAM2C,OALTf,EAAKgB,IAAIC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBD,GAAI,IACPzB,YAAa9B,EAAauD,EAAKhD,MAAQd,EAAYC,cAKvD,CAAE,MAAOiB,GAEP,OADAa,QAAQb,MAAM,oBAAqBA,GAC5B,CAAED,SAAS,EAAOC,MAAOA,EAAMqB,QACxC,CACF,EAGA,mBAAMyB,GACJ,IACE,MAAM,KAAEnB,EAAI,MAAE3B,SAAgBS,EAAAA,EAC3BC,KAAK,iBACLkB,OAAO,QAEV,GAAI5B,EACF,MAAO,CAAED,SAAS,EAAOC,MAAO,+BAGlC,MAAM+C,EAAQ,CACZC,MAAOrB,EAAKsB,OACZC,UAAW,EACXC,KAAM,EACNC,OAAQ,EACRC,UAAW,GAQb,OALA1B,EAAK2B,QAAQV,IACX,MAAMhD,EAAOgD,EAAKhD,MAAQd,EAAYC,UACtCgE,EAAMnD,OAGD,CAAEG,SAAS,EAAMgD,QAE1B,CAAE,MAAO/C,GAEP,OADAa,QAAQb,MAAM,qBAAsBA,GAC7B,CAAED,SAAS,EAAOC,MAAOA,EAAMqB,QACxC,CACF,EAGAkC,aAAAA,CAAcC,EAAUC,GACtB,MAAMC,EAAkBnC,KAAKoC,mBAAmBH,GAChD,OAAOE,EAAgBrD,SAASoD,IAAeC,EAAgBrD,SAAS,gBAC1E,EAGAsD,kBAAAA,CAAmB/D,GACjB,MAAMgE,EAAc,IAAIC,KAGEzE,EAAiBQ,IAAS,IAClC0D,QAAQQ,GAAQF,EAAYG,IAAID,IASlD,OANuB3E,EAAeS,IAAS,IAChC0D,QAAQU,KACQ5E,EAAiB4E,IAAkB,IAC3CV,QAAQQ,GAAQF,EAAYG,IAAID,MAGhDG,MAAMvD,KAAKkD,EACpB,EAGAM,iBAAgBA,IACP/E,EAITgF,eAAevE,GACNP,EAAaO,IAASP,EAAaP,EAAYC,WAIxDqF,SAAQA,IACCtF,GAKEuF,EAAa,CAExBC,OAAYlB,MAACzD,GACJF,EAAaC,UAAUC,EAAQb,EAAYG,QAIpDqF,UAAejB,MAAC1D,GACPF,EAAaC,UAAUC,EAAQb,EAAYI,WAIpDoF,KAAUnB,MAACxD,GACFF,EAAaC,UAAUC,EAAQb,EAAYE,MAIpDsF,OAAYC,MAAC5E,GACJF,EAAaC,UAAUC,EAAQb,EAAYC,WAIpDuF,MAAWE,MAAC7E,GACHF,EAAaiC,iBAAiB/B,GAIvC2E,KAAUG,SACDhF,EAAa6C,eAItBgC,MAAWvB,SACFtD,EAAaqD,iB,6CCnUxB,MAAM4B,EAAgBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kNAU1BC,EAAcJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uIAKHG,GAA0B,YAAjBA,EAAMC,OAAuB,UAA6B,UAAjBD,EAAMC,OAAqB,UAAY,WAG9GC,EAAYR,EAAAA,GAAOS,GAAEC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,wEAMrBQ,EAAaX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8IAGlBG,GAA0B,YAAjBA,EAAMC,OAAuB,UAA6B,UAAjBD,EAAMC,OAAqB,UAAY,WAK9FM,EAASb,EAAAA,GAAOc,OAAMC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+aAuBtBa,EAAkBhB,EAAAA,GAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,qIAKlBG,GAA0B,YAAjBA,EAAMC,OAAuB,UAA6B,UAAjBD,EAAMC,OAAqB,UAAY,WA+OzG,EA3O+BW,KAC7B,MAAM,KAAEjD,EAAI,QAAEkD,EAASC,QAASC,IAAgBC,EAAAA,EAAAA,MACzCC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,CAAC,IACzCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,QAE7CK,EAAUnC,MAAOoC,EAAUC,KAC/BR,EAAeS,IAAI/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACd+D,GAAI,IACP,CAACF,GAAW,CAAExB,OAAQ,UAAW7D,QAAS,sBAG5C,IACE,MAAMwF,QAAeF,IAKrB,OAJAR,EAAeS,IAAI/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACd+D,GAAI,IACP,CAACF,GAAW,CAAExB,OAAQ,UAAW7D,QAASwF,OAErC,CACT,CAAE,MAAO7G,GAKP,OAJAmG,EAAeS,IAAI/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACd+D,GAAI,IACP,CAACF,GAAW,CAAExB,OAAQ,QAAS7D,QAASrB,EAAMqB,aAEzC,CACT,GAGIyF,EAAsBxC,UAC1B,MAAM,KAAE3C,EAAI,MAAE3B,SAAgBS,EAAAA,EAASC,KAAK,iBAAiBkB,OAAO,SAASmF,MAAM,GACnF,GAAI/G,EAAO,MAAMA,EACjB,MAAM,iCAANM,QAA4C,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMsB,SAAU,EAAC,eAGrD+D,EAAqB1C,UACzB,MAAQ3C,MAAM,QAAEsF,GAAS,MAAEjH,SAAgBS,EAAAA,EAASyG,KAAKC,aACzD,GAAInH,EAAO,MAAMA,EACjB,OAAOiH,EAAO,uBAAA3G,OAA0B2G,EAAQrE,KAAKV,OAAU,qBAG3DkF,EAAqB9C,UACzB,MAAM+C,EAAS,CAAC,gBAAiB,UAAW,cAAe,gBAAiB,kBACtEC,EAAU,GAEhB,IAAK,MAAMC,KAASF,EAClB,IACE,MAAM,KAAE1F,EAAI,MAAE3B,SAAgBS,EAAAA,EAASC,KAAK6G,GAAO3F,OAAO,KAAKmF,MAAM,GACjE/G,EACFsH,EAAQE,KAAK,GAADlH,OAAIiH,EAAK,aAAAjH,OAAON,EAAMqB,UAElCiG,EAAQE,KAAK,GAADlH,OAAIiH,EAAK,uBAEzB,CAAE,MAAOE,GACPH,EAAQE,KAAK,GAADlH,OAAIiH,EAAK,aAAAjH,OAAOmH,EAAIpG,SAClC,CAGF,OAAOiG,EAAQ/G,KAAK,OAGhBmH,EAAuBpD,UAC3B,MAAQ3C,KAAMgG,EAAU3H,MAAO4H,SAAwBnH,EAAAA,EACpDC,KAAK,iBACLkB,OAAO,aACPmF,MAAM,IAEDpF,KAAMkG,EAAS7H,MAAO8H,SAAuBrH,EAAAA,EAClDC,KAAK,WACLkB,OAAO,mBACPmF,MAAM,GAET,IAAIF,EAAS,GAab,OAXEA,GADEe,EACI,6BAAAtH,OAA4BsH,EAAcvG,QAAO,MAEjD,mCAAAf,QAA0C,OAARqH,QAAQ,IAARA,OAAQ,EAARA,EAAU1E,SAAU,EAAC,eAI7D4D,GADEiB,EACI,uBAAAxH,OAAsBwH,EAAazG,QAAO,MAE1C,6BAAAf,QAAmC,OAAPuH,QAAO,IAAPA,OAAO,EAAPA,EAAS5E,SAAU,EAAC,cAGjD4D,GAGHkB,EAAkBzD,UACtB,IAAK1B,EACH,MAAO,wBAGT,MAAQjB,KAAMmE,EAAO,MAAE9F,SAAgBS,EAAAA,EACpCC,KAAK,iBACLkB,OAAO,KACPhB,GAAG,KAAMgC,EAAKoF,IACdnG,SAEH,GAAI7B,EAAO,MAAMA,EACjB,MAAM,mBAANM,OAA0BwF,EAAQ5D,MAAK,YAAA5B,OAAWwF,EAAQmC,cAAa,MAGnEC,EAAc5D,UAClB,MAAQ3C,KAAMkG,EAAO,MAAE7H,SAAgBS,EAAAA,EACpCC,KAAK,WACLkB,OAAO,qCACPmF,MAAM,IAET,GAAI/G,EAAO,MAAMA,EACjB,MAAM,SAANM,QAAuB,OAAPuH,QAAO,IAAPA,OAAO,EAAPA,EAAS5E,SAAU,EAAC,eAAA3C,OAAqB,OAAPuH,QAAO,IAAPA,OAAO,EAAPA,EAASlF,IAAIwF,GAAC,KAAA7H,OAAS6H,EAAE7I,KAAI,MAAAgB,OAAK6H,EAAEC,SAAQ,MAAA9H,OAAK6H,EAAEE,OAAM,MAAK9H,KAAK,QAGjH+H,EAAiBhE,UACrB,IAAK1B,EACH,MAAO,wBAGT,MAAQjB,KAAM4G,EAAM,MAAEvI,SAAgBS,EAAAA,EACnCC,KAAK,eACLkB,OAAO,KACPhB,GAAG,UAAWgC,EAAKoF,IACnBxF,MAAM,cAAe,CAAEC,WAAW,IAErC,GAAIzC,EAAO,MAAMA,EACjB,MAAM,gBAANM,QAA6B,OAANiI,QAAM,IAANA,OAAM,EAANA,EAAQtF,SAAU,EAAC,WAGtCuF,EAAelE,SACZ,IAAImE,QAASC,IAClB,MAAMC,EAAUlI,EAAAA,EACbkI,QAAQ,gBACRC,GAAG,mBACF,CAAEC,MAAO,SAAUC,OAAQ,SAAUvB,MAAO,iBAC3CwB,IACCL,EAAQ,oCAGXM,YAGHC,WAAW,KACTN,EAAQO,cACRR,EAAQ,4DACP,OA0CP,OARAS,EAAAA,EAAAA,WAAU,KAEHnD,IACHS,EAAQ,mBAAoBK,GAC5BL,EAAQ,iBAAkBO,KAE3B,CAAChB,KAGFoD,EAAAA,EAAAA,MAAC1E,EAAa,CAAA2E,SAAA,EACZC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,MAAO,UAAWC,aAAc,QAASJ,SAAC,2CAIvDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEE,aAAc,QAASJ,SAAA,EACnCC,EAAAA,EAAAA,KAAC9D,EAAM,CAACkE,QA7CMpF,UAClBgC,GAAW,GACXE,EAAiB,WAEjB,MAAMmD,EAAQ,CACZ,CAAErK,KAAM,mBAAoBsK,GAAI9C,GAChC,CAAExH,KAAM,iBAAkBsK,GAAI5C,GAC9B,CAAE1H,KAAM,kBAAmBsK,GAAIxC,GAC/B,CAAE9H,KAAM,qBAAsBsK,GAAIlC,GAClC,CAAEpI,KAAM,eAAgBsK,GAAI7B,GAC5B,CAAEzI,KAAM,UAAWsK,GAAI1B,GACvB,CAAE5I,KAAM,cAAesK,GAAItB,GAC3B,CAAEhJ,KAAM,YAAasK,GAAIpB,IAG3B,IAAIqB,EAAc,EAClB,IAAK,MAAM/J,KAAQ6J,EAAO,OACFlD,EAAQ3G,EAAKR,KAAMQ,EAAK8J,KACjCC,GACf,CAEArD,EAAiBqD,IAAgBF,EAAM1G,OAAS,UAAY,SAC5DqD,GAAW,IAuBuBwD,SAAUzD,EAAQgD,SAC7ChD,EAAU,mBAAqB,mBAElCiD,EAAAA,EAAAA,KAAC9D,EAAM,CAACkE,QAvBOK,KACnB5D,EAAe,CAAC,GAChBK,EAAiB,SAqBkBsD,SAAUzD,EAAQgD,SAAC,sBAKpDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEE,aAAc,OAAQO,QAAS,OAAQC,WAAY,kBAAmBC,aAAc,OAAQb,SAAA,EACxGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBAAqB,IAAErD,EAAc,aAAepD,EAAI,kBAAAtC,OAAqBsC,EAAKV,MAAK,KAAM,qBACrGoH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAiB,IAAEvD,EAAO,iBAAAxF,OAAoBwF,EAAQmC,cAAa,KAAM,gBAGlF9H,OAAOgK,QAAQjE,GAAavD,IAAIyH,IAAA,IAAE1D,EAAUG,GAAOuD,EAAA,OAClDhB,EAAAA,EAAAA,MAACrE,EAAW,CAAgBG,OAAQ2B,EAAO3B,OAAOmE,SAAA,EAChDD,EAAAA,EAAAA,MAACjE,EAAS,CAAAkE,SAAA,EACRC,EAAAA,EAAAA,KAAC3D,EAAe,CAACT,OAAQ2B,EAAO3B,SAC/BwB,MAEH4C,EAAAA,EAAAA,KAAChE,EAAU,CAACJ,OAAQ2B,EAAO3B,OAAOmE,SAC/BxC,EAAOxF,YANMqF,KAWnBvG,OAAOkK,KAAKnE,GAAajD,OAAS,IACjCmG,EAAAA,EAAAA,MAACrE,EAAW,CAACG,OAAQqB,EAAc8C,SAAA,EACjCD,EAAAA,EAAAA,MAACjE,EAAS,CAAAkE,SAAA,EACRC,EAAAA,EAAAA,KAAC3D,EAAe,CAACT,OAAQqB,IAAiB,qBAG5C6C,EAAAA,EAAAA,MAAC9D,EAAU,CAACJ,OAAQqB,EAAc8C,SAAA,CACb,YAAlB9C,GAA+B,2BACb,UAAlBA,GAA6B,qDACX,YAAlBA,GAA+B,wC,oDClS5C,MAAM+D,EAAqB3F,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAM/ByF,EAAgB5F,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kIAO1B0F,GAAe7F,EAAAA,EAAAA,IAAO8F,EAAAA,EAAP9F,CAAiBU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,0EAMhC4F,EAAuB/F,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wGAMvBsF,IAAgB,IAAf,MAAEO,GAAOP,EACtB,OAAQO,GACN,IAAK,WAAY,MAAO,2CACxB,IAAK,OAAQ,MAAO,2CACpB,IAAK,SAAU,MAAO,2CAEtB,QAAS,MAAO,8CAKhBC,EAAcjG,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4FAGnB+F,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,OAAOC,OAIxCC,EAAcvG,EAAAA,GAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,sGAEnBqG,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAAKL,EAAMC,OAAOK,KAAKC,YAKtCC,EAAY3G,EAAAA,GAAOC,IAAG2G,IAAAA,GAAAzG,EAAAA,EAAAA,GAAA,qDAKtB0G,EAAY7G,EAAAA,GAAOC,IAAG6G,IAAAA,GAAA3G,EAAAA,EAAAA,GAAA,6HAIZ4G,IAAmB,IAAlB,SAAEC,GAAUD,EACzB,OAAQC,GACN,IAAK,OAAQ,MAAO,yBACpB,IAAK,SAAU,MAAO,yBACtB,IAAK,MAAO,MAAO,0BACnB,QAAS,MAAO,6BAGKC,IAAmB,IAAlB,SAAED,GAAUC,EACpC,OAAQD,GACN,IAAK,OAAQ,MAAO,UACpB,IAAK,SAAU,MAAO,UACtB,IAAK,MAAO,MAAO,UACnB,QAAS,MAAO,aAKhBE,GAAclH,EAAAA,GAAOC,IAAGkH,IAAAA,GAAAhH,EAAAA,EAAAA,GAAA,iHAOxBiH,GAAYpH,EAAAA,GAAOC,IAAGoH,IAAAA,GAAAlH,EAAAA,EAAAA,GAAA,8CAEjBmH,IAAA,IAAC,MAAEnB,GAAOmB,EAAA,OAAKnB,EAAMC,OAAOK,KAAKc,UAGtCC,GAAYxH,EAAAA,GAAOC,IAAGwH,IAAAA,GAAAtH,EAAAA,EAAAA,GAAA,8CAEjBuH,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OAAKvB,EAAMC,OAAOK,KAAKC,YAGtCiB,GAAY3H,EAAAA,GAAOC,IAAG2H,IAAAA,GAAAzH,EAAAA,EAAAA,GAAA,qEAEjB0H,IAAA,IAAC,MAAE1B,GAAO0B,EAAA,OAAK1B,EAAMC,OAAOK,KAAKC,YAItCoB,GAAgB9H,EAAAA,GAAOC,IAAG8H,IAAAA,GAAA5H,EAAAA,EAAAA,GAAA,+DAM1Ba,GAAkBhB,EAAAA,GAAOC,IAAG+H,IAAAA,GAAA7H,EAAAA,EAAAA,GAAA,wIAKlB8H,IAAA,IAAC,OAAE1H,GAAQ0H,EAAA,MAAgB,WAAX1H,EAAsB,UAAY,YA4MlE,GAxM0B2H,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC9B,MAAOC,EAAgBC,IAAqB7H,EAAAA,EAAAA,UAAS,OAC9C8H,EAAWC,IAAgB/H,EAAAA,EAAAA,UAAS,OACpCL,EAASqI,IAAchI,EAAAA,EAAAA,WAAS,IAChCiI,EAAiBC,IAAsBlI,EAAAA,EAAAA,UAAS,OAEvD+C,EAAAA,EAAAA,WAAU,KACRoF,IAGA,MAAMC,EAAWC,YAAYF,EAAkB,KAG/C,OAFAD,EAAmBE,GAEZ,KACDA,GAAUE,cAAcF,KAE7B,IAEH,MAAMD,EAAmBjK,UACvB,IACE8J,GAAW,GAGX,MAAMlJ,EAASpE,EAAAA,GAAiB6N,oBAChCV,EAAkB/I,GAGlB,MAAM0J,EAAQ9N,EAAAA,GAAiB+N,gBAC/BV,EAAaS,EAEf,CAAE,MAAO5O,GACPa,QAAQb,MAAM,+BAAgCA,EAChD,CAAC,QACCoO,GAAW,EACb,GA2BF,OAAIrI,GAEAuD,EAAAA,EAAAA,KAACgB,EAAkB,CAAAjB,UACjBC,EAAAA,EAAAA,KAACkB,EAAY,CAAAnB,UACXC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,uCAOXD,EAAAA,EAAAA,MAACkB,EAAkB,CAAAjB,SAAA,EACjBC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,MAAO,UAAWC,aAAc,QAASJ,SAAC,wBAKvDD,EAAAA,EAAAA,MAACoB,EAAY,CAACjB,MAAO,CAAEE,aAAc,QAASJ,SAAA,EAC5CC,EAAAA,EAAAA,KAACoB,EAAoB,CAACC,MAAqB,OAAdqD,QAAc,IAAdA,OAAc,EAAdA,EAAgBc,eAC7C1F,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAAW5F,SAAA,EACrFD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACsB,EAAW,CAACrB,MAAO,CAAEC,MA/BHmB,KAC3B,OAAQA,GACN,IAAK,WAAY,MAAO,UACxB,IAAK,OAAQ,MAAO,UACpB,IAAK,SAAU,MAAO,UACtB,IAAK,MAAO,MAAO,UACnB,QAAS,MAAO,YAyBmBuE,CAAkC,OAAdlB,QAAc,IAAdA,OAAc,EAAdA,EAAgBc,cAAezF,UAC/D,OAAd2E,QAAc,IAAdA,OAAc,EAAdA,EAAgBc,cAAe,aAElCxF,EAAAA,EAAAA,KAAC4B,EAAW,CAAA7B,SAAC,6BAEfD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAE4F,UAAW,SAAU9F,SAAA,EACjCC,EAAAA,EAAAA,KAACsB,EAAW,CAAAvB,UAAgB,OAAd2E,QAAc,IAAdA,GAAsB,QAARlB,EAAdkB,EAAgBoB,cAAM,IAAAtC,OAAR,EAAdA,EAAwB7J,SAAU,KAChDqG,EAAAA,EAAAA,KAAC4B,EAAW,CAAA7B,SAAC,4BAMnBD,EAAAA,EAAAA,MAACmB,EAAa,CAAAlB,SAAA,EAEZD,EAAAA,EAAAA,MAACoB,EAAY,CAAAnB,SAAA,EACXC,EAAAA,EAAAA,KAACsB,EAAW,CAAAvB,UAAW,OAAT6E,QAAS,IAATA,GAAuB,QAAdnB,EAATmB,EAAWmB,oBAAY,IAAAtC,OAAd,EAATA,EAAyBuC,aAAc,KACrDhG,EAAAA,EAAAA,KAAC4B,EAAW,CAAA7B,SAAC,oBACbD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEgG,UAAW,OAAQC,SAAU,UAAWnG,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,mBAAyB,OAAT6E,QAAS,IAATA,GAAuB,QAAdlB,EAATkB,EAAWmB,oBAAY,IAAArC,OAAd,EAATA,EAAyByC,eAAgB,MAC9DrG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,kBAAwB,OAAT6E,QAAS,IAATA,GAAuB,QAAdjB,EAATiB,EAAWmB,oBAAY,IAAApC,OAAd,EAATA,EAAyByC,cAAe,MAC5DtG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,0BAAgC,OAAT6E,QAAS,IAATA,GAAuB,QAAdhB,EAATgB,EAAWmB,oBAAY,IAAAnC,OAAd,EAATA,EAAyByC,sBAAuB,YAKhFvG,EAAAA,EAAAA,MAACoB,EAAY,CAAAnB,SAAA,EACXC,EAAAA,EAAAA,KAACsB,EAAW,CAAAvB,UAAW,OAAT6E,QAAS,IAATA,GAA4B,QAAnBf,EAATe,EAAW0B,yBAAiB,IAAAzC,OAAnB,EAATA,EAA8B0C,iBAAkB,KAC9DvG,EAAAA,EAAAA,KAAC4B,EAAW,CAAA7B,SAAC,qBACbD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEgG,UAAW,OAAQC,SAAU,UAAWnG,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,kBAAwB,OAAT6E,QAAS,IAATA,GAA4B,QAAnBd,EAATc,EAAW0B,yBAAiB,IAAAxC,OAAnB,EAATA,EAA8BsC,cAAe,MACjEtG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,oBAAkByG,KAAKC,OAAe,OAAT7B,QAAS,IAATA,GAA4B,QAAnBb,EAATa,EAAW0B,yBAAiB,IAAAvC,OAAnB,EAATA,EAA8B2C,mBAAoB,IAAO,IAAI,cAKnG5G,EAAAA,EAAAA,MAACoB,EAAY,CAAAnB,SAAA,EACXC,EAAAA,EAAAA,KAACsB,EAAW,CAAAvB,UAAgB,OAAd2E,QAAc,IAAdA,GAAuB,QAATV,EAAdU,EAAgBiC,eAAO,IAAA3C,OAAT,EAAdA,EAAyB4C,iBAAkB,KACzD5G,EAAAA,EAAAA,KAAC4B,EAAW,CAAA7B,SAAC,qBACbD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEgG,UAAW,OAAQC,SAAU,UAAWnG,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,2BAAsC,OAAd2E,QAAc,IAAdA,GAAuB,QAATT,EAAdS,EAAgBiC,eAAO,IAAA1C,OAAT,EAAdA,EAAyB4C,uBAAwB,MAC9E/G,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,sBAAiC,OAAd2E,QAAc,IAAdA,GAAuB,QAATR,EAAdQ,EAAgBiC,eAAO,IAAAzC,OAAT,EAAdA,EAAyB4C,kBAAmB,MACpEhH,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,kBAA6B,OAAd2E,QAAc,IAAdA,GAAuB,QAATP,EAAdO,EAAgBiC,eAAO,IAAAxC,OAAT,EAAdA,EAAyB4C,cAAe,YAKhEjH,EAAAA,EAAAA,MAACoB,EAAY,CAAAnB,SAAA,EACXD,EAAAA,EAAAA,MAACwB,EAAW,CAAAvB,SAAA,EACVC,EAAAA,EAAAA,KAAC3D,GAAe,CAACT,OAAO,WAAW,cAGrCoE,EAAAA,EAAAA,KAAC4B,EAAW,CAAA7B,SAAC,mBACbD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEgG,UAAW,OAAQC,SAAU,UAAWnG,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,sBAAkBC,EAAAA,EAAAA,KAAC3D,GAAe,CAACT,OAAO,WAAW,cAC1DkE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,iBAAaC,EAAAA,EAAAA,KAAC3D,GAAe,CAACT,OAAO,WAAW,cACrDkE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,mBAAeC,EAAAA,EAAAA,KAAC3D,GAAe,CAACT,OAAO,WAAW,uBAM7DkE,EAAAA,EAAAA,MAACoB,EAAY,CAAAnB,SAAA,EACXC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEE,aAAc,OAAQD,MAAO,WAAYH,SAAC,4BACvDC,EAAAA,EAAAA,KAACgC,EAAS,CAAAjC,UACO,OAAd2E,QAAc,IAAdA,GAAsB,QAARN,EAAdM,EAAgBoB,cAAM,IAAA1B,OAAR,EAAdA,EAAwBzK,QAAS,EAChC+K,EAAeoB,OAAOzM,IAAK2N,IACzBlH,SAAAA,EAAAA,MAACoC,EAAS,CAAgBG,SAAU2E,EAAM3E,SAAStC,SAAA,EACjDD,EAAAA,EAAAA,MAACyC,GAAW,CAAAxC,SAAA,EACVC,EAAAA,EAAAA,KAACyC,GAAS,CAAA1C,SAAEiH,EAAMC,QAClBjH,EAAAA,EAAAA,KAAC6C,GAAS,CAAA9C,UAzGDmH,EAyGmBF,EAAME,UAxGzC,IAAIC,KAAKD,GAAWE,wBA0GfpH,EAAAA,EAAAA,KAACgD,GAAS,CAAAjD,SACPsH,KAAKC,UAAUN,EAAM3O,KAAM,KAAM,MAEpC2H,EAAAA,EAAAA,KAACmD,GAAa,CAAApD,UACZC,EAAAA,EAAAA,KAACuH,EAAAA,EAAU,CACTC,KAAK,QACLpH,QAASA,KAAMqH,OA3HDC,EA2HwBV,EAAMtI,GA1H5DlH,EAAAA,GAAiBmQ,iBAAiBD,QAClCzC,IAF8ByC,OA2HkC3H,SACjD,oBAZWiH,EAAMtI,IAtGTwI,SAyHflH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAE4F,UAAW,SAAU3F,MAAO,UAAWQ,QAAS,QAASX,SAAC,oCAQ9ED,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEgG,UAAW,OAAQR,QAAS,OAAQmC,IAAK,QAAS7H,SAAA,EAC9DC,EAAAA,EAAAA,KAACuH,EAAAA,EAAU,CAACnH,QAAS6E,EAAiBlF,SAAC,kBAGvCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAU,CAACnH,QA1IIyH,KACpBrQ,EAAAA,GAAiBsQ,UACjB7C,KAwIuClF,SAAC,oBAMtCD,EAAAA,EAAAA,MAACoB,EAAY,CAACjB,MAAO,CAAEgG,UAAW,QAASlG,SAAA,EACzCC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEE,aAAc,OAAQD,MAAO,WAAYH,SAAC,kBACvDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEiG,SAAU,SAAU6B,WAAY,OAAQhI,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAAyB,KAAW,OAAT6E,QAAS,IAATA,GAAyB,QAAhBP,EAATO,EAAWoD,sBAAc,IAAA3D,OAAhB,EAATA,EAA2B4D,iBAAkB,MACrFnI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kCAAsC,KAAW,OAAT6E,QAAS,IAATA,GAA0B,QAAjBN,EAATM,EAAWsD,uBAAe,IAAA5D,OAAjB,EAATA,EAA4B6D,aAAc,MAC/FrI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,KAAW,OAAT6E,QAAS,IAATA,GAA0B,QAAjBL,EAATK,EAAWsD,uBAAe,IAAA3D,OAAjB,EAATA,EAA4B6D,cAAe,MAChFtI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,IAAW,OAAT6E,QAAS,IAATA,GAAe,QAANJ,EAATI,EAAWyD,YAAI,IAAA7D,GAAfA,EAAiB8D,MAAQzR,OAAOkK,KAAK6D,EAAUyD,KAAKC,OAAO3O,OAAS,MACvGmG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBAA4B,KAAW,OAAT6E,QAAS,IAATA,GAAe,QAANH,EAATG,EAAWyD,YAAI,IAAA5D,OAAN,EAATA,EAAiB8D,mBAAoB,e,qFCnT1F,MAAMC,GAAYnN,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4BAItBiN,IAAUpN,EAAAA,EAAAA,IAAO8F,EAAAA,EAAP9F,CAAiBK,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,sDAK3BkN,GAAerN,EAAAA,GAAOS,GAAEC,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,8HACbsF,IAAA,IAAC,MAAEU,GAAOV,EAAA,OAAKU,EAAMmH,WAAWC,WAAWC,SACjDtH,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOK,KAAKc,UAOtCkG,GAAOzN,EAAAA,GAAO0N,KAAI9M,KAAAA,IAAAT,EAAAA,EAAAA,GAAA,gHAQlBwN,GAAY3N,EAAAA,GAAOC,IAAGc,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,4FAOtByN,GAAQ5N,EAAAA,GAAO6N,MAAK5M,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,mEAEfqG,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAAKL,EAAMC,OAAOK,KAAKC,YAItCoH,GAAQ9N,EAAAA,GAAO+N,MAAKnH,KAAAA,IAAAzG,EAAAA,EAAAA,GAAA,0SAKf4G,IAAA,IAAC,MAAEZ,GAAOY,EAAA,OAAKZ,EAAMC,OAAOK,KAAKc,UAUtCyG,GAAShO,EAAAA,GAAO/C,OAAM6J,KAAAA,IAAA3G,EAAAA,EAAAA,GAAA,8TAKjB8G,IAAA,IAAC,MAAEd,GAAOc,EAAA,OAAKd,EAAMC,OAAOK,KAAKc,UAWtC0G,GAAcjO,EAAAA,GAAOC,IAAGkH,KAAAA,IAAAhH,EAAAA,EAAAA,GAAA,gEAMxB+N,GAAclO,EAAAA,GAAOc,OAAMuG,KAAAA,IAAAlH,EAAAA,EAAAA,GAAA,uXAuB3BgO,IAAenO,EAAAA,EAAAA,IAAOkO,GAAPlO,CAAmByH,KAAAA,IAAAtH,EAAAA,EAAAA,GAAA,uLASlCiO,IAAkBpO,EAAAA,EAAAA,IAAOkO,GAAPlO,CAAmB4H,KAAAA,IAAAzH,EAAAA,EAAAA,GAAA,uLASrCkO,IAAarO,EAAAA,EAAAA,IAAOkO,GAAPlO,CAAmB+H,KAAAA,IAAA5H,EAAAA,EAAAA,GAAA,uLAShCmO,IAAkBtO,EAAAA,EAAAA,IAAOkO,GAAPlO,CAAmBgI,KAAAA,IAAA7H,EAAAA,EAAAA,GAAA,uLASrCoO,GAAUvO,EAAAA,GAAOC,IAAGuO,KAAAA,IAAArO,EAAAA,EAAAA,GAAA,2HAMtBmH,IAAA,IAAC,KAAEsE,GAAMtE,EAAA,MAAc,YAATsE,GAAkB,uHAMhClE,IAAA,IAAC,KAAEkE,GAAMlE,EAAA,MAAc,UAATkE,GAAgB,qHAM9B/D,IAAA,IAAC,KAAE+D,GAAM/D,EAAA,MAAc,SAAT+D,GAAe,wHAO3B6C,GAAYzO,EAAAA,GAAOC,IAAGyO,KAAAA,IAAAvO,EAAAA,EAAAA,GAAA,+DAMtBwO,IAAY3O,EAAAA,EAAAA,IAAO8F,EAAAA,EAAP9F,CAAiB4O,KAAAA,IAAAzO,EAAAA,EAAAA,GAAA,uHAQ7B0O,GAAY7O,EAAAA,GAAOC,IAAG6O,KAAAA,IAAA3O,EAAAA,EAAAA,GAAA,8EAOtB4O,GAAY/O,EAAAA,GAAOC,IAAG+O,KAAAA,IAAA7O,EAAAA,EAAAA,GAAA,oMAQZ8H,IAAe,IAAd,KAAEhN,GAAMgN,EACrB,OAAQhN,GACN,IAAK,YAAa,MAAO,oDACzB,IAAK,SAAU,MAAO,oDACtB,IAAK,OAAQ,MAAO,oDACpB,QAAS,MAAO,uDAMhBgU,GAAcjP,EAAAA,GAAOC,IAAGiP,KAAAA,IAAA/O,EAAAA,EAAAA,GAAA,sBAIxBgP,GAAWnP,EAAAA,GAAOC,IAAGmP,KAAAA,IAAAjP,EAAAA,EAAAA,GAAA,wEAEhBkP,IAAA,IAAC,MAAElJ,GAAOkJ,EAAA,OAAKlJ,EAAMC,OAAOK,KAAKc,UAItC+H,GAAYtP,EAAAA,GAAOC,IAAGsP,KAAAA,IAAApP,EAAAA,EAAAA,GAAA,8CAEjBqP,IAAA,IAAC,MAAErJ,GAAOqJ,EAAA,OAAKrJ,EAAMC,OAAOK,KAAKC,YAGtC+I,GAAYzP,EAAAA,GAAOC,IAAGyP,KAAAA,IAAAvP,EAAAA,EAAAA,GAAA,+HAOtBwP,GAAW3P,EAAAA,GAAOC,IAAG2P,KAAAA,IAAAzP,EAAAA,EAAAA,GAAA,iKAQrB0P,GAAa7P,EAAAA,GAAOC,IAAG6P,KAAAA,IAAA3P,EAAAA,EAAAA,GAAA,mGAOvB4P,GAAY/P,EAAAA,GAAOC,IAAG+P,KAAAA,IAAA7P,EAAAA,EAAAA,GAAA,8CAEjB8P,IAAA,IAAC,MAAE9J,GAAO8J,EAAA,OAAK9J,EAAMC,OAAOK,KAAKC,YAGtCwJ,GAAiBlQ,EAAAA,GAAOC,IAAGkQ,KAAAA,IAAAhQ,EAAAA,EAAAA,GAAA,qHAgWjC,GAxVyBiQ,KACvB,MAAM,KAAEnS,IAASqD,EAAAA,EAAAA,MACVtG,EAAQqV,IAAa5O,EAAAA,EAAAA,UAAS,KAC9B6O,EAAcC,IAAmB9O,EAAAA,EAAAA,UAAS,WAC1C/E,EAAS8T,IAAc/O,EAAAA,EAAAA,UAAS,OAChCL,EAASqI,IAAchI,EAAAA,EAAAA,WAAS,IAChC1D,EAAQ0S,IAAahP,EAAAA,EAAAA,UAAS,KAC9BrD,EAAOsS,IAAYjP,EAAAA,EAAAA,UAAS,OAC5BkP,EAAaC,IAAkBnP,EAAAA,EAAAA,UAAS,KACxCoP,EAAYC,IAAiBrP,EAAAA,EAAAA,UAAS,MAGvCsP,GAAsB,OAAJ9S,QAAI,IAAJA,OAAI,EAAJA,EAAMhD,OAAQ,YAChC+V,EAAkBlW,EAAa8D,cAAcmS,EAAiB,wBAC7CjW,EAAa8D,cAAcmS,EAAiB,4BAEnEvM,EAAAA,EAAAA,WAAU,KACJwM,IACFC,IACAC,MAED,CAACF,IAEJ,MAAMC,EAAatR,UACjB8J,GAAW,GACX,IACE,MAAMvH,QAAepH,EAAa6C,eAC9BuE,EAAO9G,QACTqV,EAAUvO,EAAOnE,QAEjByS,EAAW,CAAE5E,KAAM,QAASnF,KAAMvE,EAAO7G,OAE7C,CAAE,MAAOA,GACPmV,EAAW,CAAE5E,KAAM,QAASnF,KAAM,yBACpC,CAAC,QACCgD,GAAW,EACb,GAGIyH,EAAYvR,UAChB,IACE,MAAMuC,QAAepH,EAAaqD,gBAC9B+D,EAAO9G,SACTsV,EAASxO,EAAO9D,MAEpB,CAAE,MAAO/C,GACPa,QAAQb,MAAM,wBAAyBA,EACzC,GAkCI8V,EAAuBxR,UAC3B,GAAK3E,EAAOoW,OAAZ,CAKA3H,GAAW,GACX+G,EAAW,MAEX,IACE,IAAItO,EACJ,OAAQmP,GACN,IAAK,SACHnP,QAAexC,EAAWjB,OAAOzD,GACjC,MACF,IAAK,YACHkH,QAAexC,EAAWhB,UAAU1D,GACpC,MACF,IAAK,OACHkH,QAAexC,EAAWlB,KAAKxD,GAC/B,MACF,IAAK,YACHkH,QAAexC,EAAWE,OAAO5E,GACjC,MACF,QACEkH,EAAS,CAAE9G,SAAS,EAAOC,MAAO,gBAGlC6G,EAAO9G,SACToV,EAAW,CACT5E,KAAM,UACNnF,KAAK,gCAAD9K,OAA6BuG,EAAO1F,YAAY5B,MAAK,KAAAe,OAAIuG,EAAO1F,YAAY7B,QAElF0V,EAAU,IACVY,IACAC,KAEAV,EAAW,CAAE5E,KAAM,QAASnF,KAAMvE,EAAO7G,OAE7C,CAAE,MAAOA,GACPmV,EAAW,CAAE5E,KAAM,QAASnF,KAAM,4BACpC,CAAC,QACCgD,GAAW,EACb,CAvCA,MAFE+G,EAAW,CAAE5E,KAAM,QAASnF,KAAM,4BAuEf,IAAD6K,EAAAC,EAAtB,OAAKP,GAeHvM,EAAAA,EAAAA,MAAC0I,GAAS,CAAAzI,SAAA,EAERD,EAAAA,EAAAA,MAAC2I,GAAO,CAAA1I,SAAA,EACNC,EAAAA,EAAAA,KAAC0I,GAAY,CAAA3I,SAAC,iCAEdD,EAAAA,EAAAA,MAACgJ,GAAI,CAAC+D,SA5HY7R,UAEtB,GADA8R,EAAEC,iBACG1W,EAAOoW,OAAZ,CAKA3H,GAAW,GACX+G,EAAW,MAEX,IACE,MAAMtO,QAAepH,EAAaC,UAAUC,EAAQsV,GAEhDpO,EAAO9G,SACToV,EAAW,CACT5E,KAAM,UACNnF,KAAK,gCAAD9K,OAA6BuG,EAAO1F,YAAY5B,MAAK,KAAAe,OAAIuG,EAAO1F,YAAY7B,QAElF0V,EAAU,IACVY,IACAC,KAEAV,EAAW,CAAE5E,KAAM,QAASnF,KAAMvE,EAAO7G,OAE7C,CAAE,MAAOA,GACPmV,EAAW,CAAE5E,KAAM,QAASnF,KAAM,4BACpC,CAAC,QACCgD,GAAW,EACb,CAvBA,MAFE+G,EAAW,CAAE5E,KAAM,QAASnF,KAAM,4BAyHA/B,SAAA,EAC9BD,EAAAA,EAAAA,MAACkJ,GAAS,CAAAjJ,SAAA,EACRC,EAAAA,EAAAA,KAACiJ,GAAK,CAAAlJ,SAAC,aACPC,EAAAA,EAAAA,KAACmJ,GAAK,CACJlC,KAAK,OACL+F,MAAO3W,EACP4W,SAAWH,GAAMpB,EAAUoB,EAAEI,OAAOF,OACpCG,YAAY,uCAIhBrN,EAAAA,EAAAA,MAACkJ,GAAS,CAAAjJ,SAAA,EACRC,EAAAA,EAAAA,KAACiJ,GAAK,CAAAlJ,SAAC,iBACPD,EAAAA,EAAAA,MAACuJ,GAAM,CACL2D,MAAOrB,EACPsB,SAAWH,GAAMlB,EAAgBkB,EAAEI,OAAOF,OAAOjN,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,SAAQjN,SAAC,iCACvBC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,YAAWjN,SAAC,0CAC1BC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,OAAMjN,SAAC,mCACrBC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,YAAWjN,SAAC,iDAI9BC,EAAAA,EAAAA,KAACuH,EAAAA,EAAU,CAACN,KAAK,SAASzG,SAAU/D,EAAQsD,SACzCtD,EAAU,kBAAoB,uBAInCqD,EAAAA,EAAAA,MAACwJ,GAAW,CAAAvJ,SAAA,EACVC,EAAAA,EAAAA,KAACwJ,GAAY,CACXpJ,QAASA,IAAMoM,EAAqB,UACpChM,SAAU/D,IAAYpG,EAAOoW,OAAO1M,SACrC,8BAIDC,EAAAA,EAAAA,KAACyJ,GAAe,CACdrJ,QAASA,IAAMoM,EAAqB,aACpChM,SAAU/D,IAAYpG,EAAOoW,OAAO1M,SACrC,iCAIDC,EAAAA,EAAAA,KAAC0J,GAAU,CACTtJ,QAASA,IAAMoM,EAAqB,QACpChM,SAAU/D,IAAYpG,EAAOoW,OAAO1M,SACrC,4BAIDC,EAAAA,EAAAA,KAAC2J,GAAe,CACdvJ,QAASA,IAAMoM,EAAqB,aACpChM,SAAU/D,IAAYpG,EAAOoW,OAAO1M,SACrC,mCAKFhI,IACCiI,EAAAA,EAAAA,KAAC4J,GAAO,CAAC3C,KAAMlP,EAAQkP,KAAKlH,SACzBhI,EAAQ+J,WAMfhC,EAAAA,EAAAA,MAAC2I,GAAO,CAAA1I,SAAA,EACNC,EAAAA,EAAAA,KAAC0I,GAAY,CAAA3I,SAAC,oCAEdD,EAAAA,EAAAA,MAACgJ,GAAI,CAAC+D,SAAWC,IAAQA,EAAEC,iBArHP/R,WACxB,GAAKgR,EAAYS,OAAjB,CAKA3H,GAAW,GACX+G,EAAW,MAEX,IACE,MAAMtO,QAAepH,EAAaiC,iBAAiB4T,GAE/CzO,EAAO9G,SACT0V,EAAc5O,GACdsO,EAAW,CAAE5E,KAAM,OAAQnF,KAAM,yCAEjC+J,EAAW,CAAE5E,KAAM,QAASnF,KAAMvE,EAAO7G,QACzCyV,EAAc,MAElB,CAAE,MAAOzV,GACPmV,EAAW,CAAE5E,KAAM,QAASnF,KAAM,gCAClCqK,EAAc,KAChB,CAAC,QACCrH,GAAW,EACb,CApBA,MAFE+G,EAAW,CAAE5E,KAAM,QAASnF,KAAM,qCAmHasL,IAAuBrN,SAAA,EAClED,EAAAA,EAAAA,MAACkJ,GAAS,CAAAjJ,SAAA,EACRC,EAAAA,EAAAA,KAACiJ,GAAK,CAAAlJ,SAAC,aACPC,EAAAA,EAAAA,KAACmJ,GAAK,CACJlC,KAAK,OACL+F,MAAOhB,EACPiB,SAAWH,GAAMb,EAAea,EAAEI,OAAOF,OACzCG,YAAY,+BAIhBnN,EAAAA,EAAAA,KAACuH,EAAAA,EAAU,CAACN,KAAK,SAASzG,SAAU/D,EAAQsD,SACzCtD,EAAU,cAAgB,oBAI9ByP,IACCpM,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEgG,UAAW,QAASlG,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAES,QAAS,OAAQC,WAAY,yBAA0BC,aAAc,OAAQb,SAAA,EACzFD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAiB,IAAEmM,EAAW7V,WAC3CyJ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAEmM,EAAWrU,YAAY5B,MAAM,IAAEiW,EAAWrU,YAAY7B,KAAK,KAAGkW,EAAWrU,YAAY3B,YAAY,QAC9H4J,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAAe,IAAEmM,EAAWvT,SAASC,OAAS,UAC3DkH,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAEmM,EAAWvT,SAASE,UAAYqT,EAAWvT,SAASI,UAAY,UAC7F+G,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAEmM,EAAW1T,QAAU,MAAQ,SAC9DsH,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,IAAEmM,EAAWzT,YAAc,MAAQ,SACtEqH,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAAwB,IAAEmM,EAAWxT,aAAe,MAAQ,iBAOhFe,IACCqG,EAAAA,EAAAA,MAAC2I,GAAO,CAAA1I,SAAA,EACNC,EAAAA,EAAAA,KAAC0I,GAAY,CAAA3I,SAAC,mCACdD,EAAAA,EAAAA,MAACgL,GAAS,CAAA/K,SAAA,EACRD,EAAAA,EAAAA,MAACkL,GAAQ,CAAAjL,SAAA,EACPC,EAAAA,EAAAA,KAACkL,GAAU,CAAAnL,SAAEtG,EAAMG,aACnBoG,EAAAA,EAAAA,KAACoL,GAAS,CAAArL,SAAC,+BAEbD,EAAAA,EAAAA,MAACkL,GAAQ,CAAAjL,SAAA,EACPC,EAAAA,EAAAA,KAACkL,GAAU,CAAAnL,SAAEtG,EAAMI,QACnBmG,EAAAA,EAAAA,KAACoL,GAAS,CAAArL,SAAC,0BAEbD,EAAAA,EAAAA,MAACkL,GAAQ,CAAAjL,SAAA,EACPC,EAAAA,EAAAA,KAACkL,GAAU,CAAAnL,SAAEtG,EAAMK,UACnBkG,EAAAA,EAAAA,KAACoL,GAAS,CAAArL,SAAC,4BAEbD,EAAAA,EAAAA,MAACkL,GAAQ,CAAAjL,SAAA,EACPC,EAAAA,EAAAA,KAACkL,GAAU,CAAAnL,SAAEtG,EAAMM,aACnBiG,EAAAA,EAAAA,KAACoL,GAAS,CAAArL,SAAC,+BAEbD,EAAAA,EAAAA,MAACkL,GAAQ,CAAAjL,SAAA,EACPC,EAAAA,EAAAA,KAACkL,GAAU,CAAAnL,SAAEtG,EAAMC,SACnBsG,EAAAA,EAAAA,KAACoL,GAAS,CAAArL,SAAC,iCAEbD,EAAAA,EAAAA,MAACkL,GAAQ,CAAAjL,SAAA,EACPC,EAAAA,EAAAA,KAACkL,GAAU,CAAAnL,SAAEtG,EAAMI,KAAOJ,EAAMK,OAASL,EAAMM,aAC/CiG,EAAAA,EAAAA,KAACoL,GAAS,CAAArL,SAAC,wCAOnBD,EAAAA,EAAAA,MAAC2I,GAAO,CAAA1I,SAAA,EACNC,EAAAA,EAAAA,KAAC0I,GAAY,CAAA3I,SAAC,4BAEbtD,GACCuD,EAAAA,EAAAA,KAACuL,GAAc,CAAAxL,SAAC,sBACI,IAAlB3G,EAAOO,QACTqG,EAAAA,EAAAA,KAAC4J,GAAO,CAAC3C,KAAK,OAAMlH,SAAC,4EAIrBC,EAAAA,EAAAA,KAAC8J,GAAS,CAAA/J,SACP3G,EAAOC,IAAKgU,IACXvN,EAAAA,EAAAA,MAACkK,GAAS,CAAAjK,SAAA,EACRD,EAAAA,EAAAA,MAACoK,GAAS,CAAAnK,SAAA,EACRD,EAAAA,EAAAA,MAACsK,GAAS,CAAC9T,KAAM+W,EAAM/W,KAAKyJ,SAAA,CACzBsN,EAAMxV,YAAY5B,MAAM,IAAEoX,EAAMxV,YAAY7B,SAE/C8J,EAAAA,EAAAA,MAACwK,GAAW,CAAAvK,SAAA,EACVC,EAAAA,EAAAA,KAACwK,GAAQ,CAAAzK,SAAEsN,EAAMxU,UAAYwU,EAAMtU,UAAY,kBAC/CiH,EAAAA,EAAAA,KAAC2K,GAAS,CAAA5K,SAAEsN,EAAMzU,OAAS,oBAG/BoH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEiG,SAAU,SAAUhG,MAAO,QAASH,SAC/C,IAAIoH,KAAKkG,EAAMC,YAAYC,yBAXhBF,EAAM3O,cAtK9BsB,EAAAA,EAAAA,KAACwI,GAAS,CAAAzI,UACRD,EAAAA,EAAAA,MAAC2I,GAAO,CAAA1I,SAAA,EACNC,EAAAA,EAAAA,KAAC0I,GAAY,CAAA3I,SAAC,gCACdD,EAAAA,EAAAA,MAAC8J,GAAO,CAAC3C,KAAK,QAAOlH,SAAA,CAAC,iGAEwB,QAA9B4M,EAAC5W,EAAaqW,UAAgB,IAAAO,OAAA,EAA7BA,EAA+B1W,MAAM,IAA+B,QAA9B2W,EAAC7W,EAAaqW,UAAgB,IAAAQ,OAAA,EAA7BA,EAA+B5W,cCk3CjG,GAzwDoBwX,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxB,MAAM,KAAEvU,IAASqD,EAAAA,EAAAA,MACX,MAAEmR,EAAK,QAAEvP,EAAO,WAAEwP,EAAU,eAAEC,EAAc,MAAEvU,EAAK,QAAEgD,EAAO,MAAE/F,EAAK,QAAE8B,GCTrDyV,MACtB,MAAM,KAAE3U,IAASqD,EAAAA,EAAAA,MACVmR,EAAOI,IAAYpR,EAAAA,EAAAA,UAAS,KAC5ByB,EAAS4P,IAAcrR,EAAAA,EAAAA,UAAS,KAChCiR,EAAYK,IAAiBtR,EAAAA,EAAAA,UAAS,KACtCkR,EAAgBK,IAAqBvR,EAAAA,EAAAA,UAAS,KAC9CrD,EAAOsS,IAAYjP,EAAAA,EAAAA,UAAS,CACjCwR,WAAY,EACZtI,WAAY,EACZuI,WAAY,EACZnG,YAAa,EACboG,YAAa,EACbC,iBAAkB,EAClBC,eAAgB,KAEXjS,EAASqI,IAAchI,EAAAA,EAAAA,WAAS,IAChCpG,EAAOiY,IAAY7R,EAAAA,EAAAA,UAAS,MAG7BtE,EAAyB,WAAX,OAAJc,QAAI,IAAJA,OAAI,EAAJA,EAAMhD,OAAmC,iBAAX,OAAJgD,QAAI,IAAJA,OAAI,EAAJA,EAAMhD,MAG1CsY,GAAaC,EAAAA,EAAAA,aAAY7T,UAC7B,GAAKxC,EAEL,IACE,MAAM,KAAEH,EAAI,MAAE3B,SAAgBS,EAAAA,EAC3BC,KAAK,iBACLkB,OAAO,6MAWPY,MAAM,aAAc,CAAEC,WAAW,IAEpC,GAAIzC,EAAO,MAAMA,EAEjB,MAAMoY,GAAqB,OAAJzW,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,IAAIC,IAAS,IAADyV,EACvC,MAAMC,EAAa1V,EAAK2V,eAAiB,GACnCC,EAAeF,EAAWrV,OAAS,EACvC,IAAIwN,KAAKX,KAAK2I,OAAOH,EAAW3V,IAAI+V,GAAK,IAAIjI,KAAKiI,EAAEC,kBAAoB,KAE1E,MAAO,CACL3Q,GAAIpF,EAAKoF,GACT1I,KAAMsD,EAAKR,WAAaQ,EAAKP,UAAY,eACzCH,MAAOU,EAAKV,MACZ0W,MAAOhW,EAAKqF,eAAiB,EAC7B4Q,OAAuB,QAAhBR,EAAAzV,EAAKkW,mBAAW,IAAAT,OAAA,EAAhBA,EAAkBpV,SAAU,EACnCiC,OAAsB,WAAdtC,EAAKhD,KAAoB,SAAW,SAC5CmZ,SAAUnW,EAAKgU,WACfoC,SAAUR,EACVlJ,WAAYgJ,EAAWW,OAAOP,GAAyB,SAApBA,EAAEQ,eAA0BjW,OAC/DkW,KAAMC,EAAQxW,EAAKqF,eAAiB,QAElC,GAENuP,EAASY,EACX,CAAE,MAAO3Q,GACP5G,QAAQb,MAAM,wBAAyByH,GACvCwQ,EAASxQ,EAAIpG,QACf,GACC,CAACS,IAGEuX,GAAelB,EAAAA,EAAAA,aAAY7T,UAC/B,GAAKxC,EAEL,IACE,MAAM,KAAEH,EAAI,MAAE3B,SAAgBS,EAAAA,EAC3BC,KAAK,WACLkB,OAAO,KACPY,MAAM,aAAc,CAAEC,WAAW,IAEpC,GAAIzC,EAAO,MAAMA,EAEjByX,EAAW9V,GAAQ,GACrB,CAAE,MAAO8F,GACP5G,QAAQb,MAAM,0BAA2ByH,GACzCwQ,EAASxQ,EAAIpG,QACf,GACC,CAACS,IAGEwX,GAAkBnB,EAAAA,EAAAA,aAAY7T,UAClC,GAAKxC,EAEL,IAEE,MAAQH,KAAM4X,EAAavZ,MAAO8H,SAAuBrH,EAAAA,EACtDC,KAAK,WACLkB,OAAO,uBAEV,GAAIkG,EAAc,MAAMA,EAGxB,MAAQnG,KAAM6X,EAAUxZ,MAAOyZ,SAAoBhZ,EAAAA,EAChDC,KAAK,iBACLkB,OAAO,YACPhB,GAAG,gBAAiB,QAEvB,GAAI6Y,EAAW,MAAMA,EAGrB,MAAMC,EAAgB,CAAC,EACZ,OAAXH,QAAW,IAAXA,GAAAA,EAAajW,QAAQqW,IACdD,EAAcC,EAAOvR,YACxBsR,EAAcC,EAAOvR,UAAY,CAC/B9I,KAAMqa,EAAOvR,SACbwR,QAASD,EAAOE,UAChBC,UAAW,EACXC,UAAW,EACXC,QAAS,IAGbN,EAAcC,EAAOvR,UAAU0R,cAIzB,OAARN,QAAQ,IAARA,GAAAA,EAAUlW,QAAQ2W,IAAS,IAADC,EACxB,MAAM9R,EAAwB,QAAhB8R,EAAGD,EAAKE,gBAAQ,IAAAD,OAAA,EAAbA,EAAe9R,SAC5BA,GAAYsR,EAActR,IAC5BsR,EAActR,GAAU2R,cAI5BrC,EAAcvX,OAAOC,OAAOsZ,GAC9B,CAAE,MAAOjS,GACP5G,QAAQb,MAAM,6BAA8ByH,GAC5CwQ,EAASxQ,EAAIpG,QACf,GACC,CAACS,IAGEsY,GAAsBjC,EAAAA,EAAAA,aAAY7T,UACtC,GAAKxC,EAEL,IACE,MAAM,KAAEH,EAAI,MAAE3B,SAAgBS,EAAAA,EAC3BC,KAAK,iBACLkB,OAAO,yIAOPY,MAAM,gBAAiB,CAAEC,WAAW,IACpCsE,MAAM,IAET,GAAI/G,EAAO,MAAMA,EAEjB,MAAMqa,GAAwB,OAAJ1Y,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,IAAI2X,IAAQ,IAAAC,EAAAC,EAAA,MAAK,CAC/CxS,GAAIsS,EAAStS,GACbpF,MAA4B,QAAtB2X,EAAAD,EAASG,qBAAa,IAAAF,OAAA,EAAtBA,EAAwBrY,SAA+B,QAA1BsY,EAAIF,EAASG,qBAAa,IAAAD,OAAA,EAAtBA,EAAwBnY,WAAY,UAC3EnB,OAAmC,SAA3BoZ,EAASpB,cAA2B,UACT,UAA3BoB,EAASpB,cAA4B,iBACV,aAA3BoB,EAASpB,cAA+B,WAAa,WAC7DS,OAAQW,EAASI,eACjBC,KAAMC,EAAcN,EAAS3B,eAC7BzT,OAAQoV,EAASO,aAAe,EAAI,UAAY,cAC3C,GAEPlD,EAAkB0C,EACpB,CAAE,MAAO5S,GACP5G,QAAQb,MAAM,kCAAmCyH,GACjDwQ,EAASxQ,EAAIpG,QACf,GACC,CAACS,IAGEgZ,GAAa3C,EAAAA,EAAAA,aAAY7T,UAC7B,GAAKxC,EAEL,IAEE,MAAQiZ,MAAOnD,SAAqBnX,EAAAA,EACjCC,KAAK,iBACLkB,OAAO,IAAK,CAAEmZ,MAAO,QAASC,MAAM,KAG/BD,MAAOzL,SAAqB7O,EAAAA,EACjCC,KAAK,iBACLkB,OAAO,IAAK,CAAEmZ,MAAO,QAASC,MAAM,IACpCpa,GAAG,gBAAiB,SAGfe,KAAMsZ,SAAoBxa,EAAAA,EAC/BC,KAAK,iBACLkB,OAAO,iBAEJiW,GAAsB,OAAToD,QAAS,IAATA,OAAS,EAATA,EAAWC,OAAO,CAACC,EAAKvY,IAASuY,GAAOvY,EAAKqF,eAAiB,GAAI,KAAM,EAGrFmT,EAAe,IAAI3K,KACzB2K,EAAaC,QAAQD,EAAaE,UAAY,GAE9C,MAAQP,MAAOrJ,SAAsBjR,EAAAA,EAClCC,KAAK,iBACLkB,OAAO,UAAW,CAAEmZ,MAAO,QAASC,MAAM,IAC1CO,IAAI,gBAAiBH,EAAaI,eAG/BC,EAAQ,IAAIhL,KAClBgL,EAAMC,SAAS,EAAG,EAAG,EAAG,GAExB,MAAQX,MAAOhD,SAA2BtX,EAAAA,EACvCC,KAAK,iBACLkB,OAAO,UAAW,CAAEmZ,MAAO,QAASC,MAAM,IAC1CO,IAAI,gBAAiBE,EAAMD,gBAGtBT,MAAOY,SAA0Blb,EAAAA,EACtCC,KAAK,iBACLkB,OAAO,IAAK,CAAEmZ,MAAO,QAASC,MAAM,IACpCpa,GAAG,gBAAiB,QACpBgb,GAAG,eAAgB,GAEhB9D,EAAcxI,EAAa,EAAKqM,EAAkBrM,EAAc,IAAM,GAGpEyL,MAAOc,SAAyBpb,EAAAA,EACrCC,KAAK,eACLkB,OAAO,UAAW,CAAEmZ,MAAO,QAASC,MAAM,IAEvChD,EAAiBJ,EAAa,EAAKiE,EAAiBjE,EAAc,IAAM,EAE9EvC,EAAS,CACPuC,WAAYA,GAAc,EAC1BtI,WAAYA,GAAc,EAC1BuI,aACAnG,YAAaA,GAAe,EAC5BoG,YAAahI,KAAKC,MAAM+H,GACxBC,iBAAkBA,GAAoB,EACtCC,eAAgBlI,KAAKC,MAAMiI,IAG/B,CAAE,MAAOvQ,GACP5G,QAAQb,MAAM,wBAAyByH,GACvCwQ,EAASxQ,EAAIpG,QACf,GACC,CAACS,IAGEsX,EAAWR,GACXA,GAAS,IAAa,WACtBA,GAAS,IAAa,OACtBA,GAAS,IAAa,SACnB,SAGHgC,EAAiBkB,IACrB,MAAMC,EAAM,IAAItL,KACVuL,EAAe,IAAIvL,KAAKqL,GACxBG,EAAgBnM,KAAKoM,OAAOH,EAAMC,GAAY,KAEpD,GAAIC,EAAgB,EAAG,MAAO,WAC9B,GAAIA,EAAgB,GAAI,MAAM,GAAN3b,OAAU2b,EAAa,YAE/C,MAAME,EAAcrM,KAAKoM,MAAMD,EAAgB,IAC/C,GAAIE,EAAc,GAAI,MAAM,GAAN7b,OAAU6b,EAAW,SAAA7b,OAAQ6b,EAAc,EAAI,IAAM,GAAE,QAE7E,MAAMC,EAAatM,KAAKoM,MAAMC,EAAc,IAC5C,MAAM,GAAN7b,OAAU8b,EAAU,QAAA9b,OAAO8b,EAAa,EAAI,IAAM,GAAE,SAIhDC,GAAgBlE,EAAAA,EAAAA,aAAY7T,UAChC,GAAKxC,EAEL,IACEsM,GAAW,SACL3F,QAAQ6T,IAAI,CAChBpE,IACAmB,IACAC,IACAc,IACAU,KAEJ,CAAE,MAAOrT,GACP5G,QAAQb,MAAM,4BAA6ByH,GAC3CwQ,EAASxQ,EAAIpG,QACf,CAAC,QACC+M,GAAW,EACb,GACC,CAACtM,EAASoW,EAAYmB,EAAcC,EAAiBc,EAAqBU,IAO7E,OAJA3R,EAAAA,EAAAA,WAAU,KACRkT,KACC,CAACA,IAEG,CACLjF,QACAvP,UACAwP,aACAC,iBACAvU,QACAgD,UACA/F,QACA8B,UACAya,YAAaF,IDzSwE9E,IAChFiF,EAAWC,IAAgBrW,EAAAA,EAAAA,UAAS,cACpCsW,EAAWC,IAAgBvW,EAAAA,EAAAA,UAAS,KACpCwW,EAAaC,IAAkBzW,EAAAA,EAAAA,WAAS,IAGxC0W,EAAuBC,IAA4B3W,EAAAA,EAAAA,WAAS,IAC5D4W,EAAkBC,IAAuB7W,EAAAA,EAAAA,WAAS,IAClD8W,EAAqBC,IAA0B/W,EAAAA,EAAAA,WAAS,IACxDgX,EAAsBC,IAA2BjX,EAAAA,EAAAA,WAAS,IAC1DkX,EAAcC,IAAmBnX,EAAAA,EAAAA,UAAS,OAG1CoX,EAAWC,IAAgBrX,EAAAA,EAAAA,UAAS,CACzC9G,KAAM,GACN8I,SAAU,GACVC,OAAQ,SACRqV,YAAa,EACbC,OAAQ,iBAEHC,EAASC,IAAczX,EAAAA,EAAAA,UAAS,CACrC9G,KAAM,GACN4C,MAAO,GACPiX,KAAM,SACNP,MAAO,EACPC,MAAO,KAEFiF,EAAaC,IAAkB3X,EAAAA,EAAAA,UAAS,IACxC4X,EAAYC,IAAiB7X,EAAAA,EAAAA,UAAS,IAgCvC8X,EAAgB,CACpB,CAAElW,GAAI,EAAG1I,KAAM,qBAAsBiR,KAAM,SAAU4N,QAAQ,EAAM3e,YAAa,mDAChF,CAAEwI,GAAI,EAAG1I,KAAM,uBAAwBiR,KAAM,WAAY4N,QAAQ,EAAM3e,YAAa,yBAA0B4e,QAAS,IAAI3N,KAAKA,KAAKsL,MAAQ,SAC7I,CAAE/T,GAAI,EAAG1I,KAAM,uBAAwBiR,KAAM,QAAS4N,QAAQ,EAAO3e,YAAa,wCAClF,CAAEwI,GAAI,EAAG1I,KAAM,iBAAkBiR,KAAM,UAAW4N,QAAQ,EAAM3e,YAAa,uCAwB/E2J,EAAAA,EAAAA,WAAU,KAERwT,EAAauB,IACZ,IAGH,MAAMG,EAAW,CACf,CAAErW,GAAI,YAAasW,KAAM,eAAM9L,MAAO,aACtC,CAAExK,GAAI,YAAasW,KAAM,eAAM9L,MAAO,aACtC,CAAExK,GAAI,QAASsW,KAAM,eAAM9L,MAAO,SAClC,CAAExK,GAAI,mBAAoBsW,KAAM,eAAM9L,MAAO,oBAC7C,CAAExK,GAAI,UAAWsW,KAAM,eAAM9L,MAAO,WACpC,CAAExK,GAAI,aAAcsW,KAAM,eAAM9L,MAAO,cACvC,CAAExK,GAAI,YAAasW,KAAM,eAAM9L,MAAO,aACtC,CAAExK,GAAI,WAAYsW,KAAM,eAAM9L,MAAO,YACrC,CAAExK,GAAI,aAAcsW,KAAM,eAAM9L,MAAO,oBAInC+L,EAAkBC,IACtB7B,EAAa/V,GACXA,EAAKjE,IAAI8b,GACPA,EAASzW,KAAOwW,GAAU3b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjB4b,GAAQ,IAAEN,QAASM,EAASN,SACjCM,KAKJC,EAAkBC,IAEtB9d,QAAQO,IAAI,mBAAoBud,IAuC5BC,EAAgBxH,EAAM6B,OAAOrW,GACjCA,EAAKtD,KAAKuf,cAAcxe,SAAS2d,EAAWa,gBAC5Cjc,EAAKV,MAAM2c,cAAcxe,SAAS2d,EAAWa,gBAIzCC,EAAYC,OAAOC,YAAc,KAEvC,OACE5V,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACV0V,UAAW,QACXhV,WAAY,oDACZT,MAAO,UACP0I,WAAY,4BACZgN,SAAU,YACV7V,SAAA,EAEEyV,IACAxV,EAAAA,EAAAA,KAAA,UACEC,MAAO,CACLwF,QAAS,QACTmQ,SAAU,QACVC,IAAK,OACLC,KAAM,OACNC,OAAQ,GACRpV,WAAY,yBACZqV,OAAQ,OACR9V,MAAO,QACPQ,QAAS,SACTE,aAAc,MACdsF,SAAU,SACV+P,OAAQ,WAEV7V,QAASA,IAAMmT,GAAgBD,GAAavT,SAC7C,YAMHD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACV2V,SAAU,QACVE,KAAM,EACND,IAAK,EACLK,OAAQ,QACRC,MAAO,QACPxV,WAAY,8EACZyV,eAAgB,aAChBC,YAAa,mCACbN,OAAQ,GACRO,UAAWhD,GAAekC,EAAY,gBAAkB,oBACxDe,WAAY,uBACZxW,SAAA,EAGAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVS,QAAS,OACTmF,UAAW,SACX2Q,aAAc,oCACdzW,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZ9V,WAAY,oDACZ+V,qBAAsB,OACtBC,oBAAqB,cACrBC,OAAQ,GACR7W,SAAC,mBACHC,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CACRC,MAAO,UACPgG,SAAU,SACVD,UAAW,UACXlG,SAAC,uBAILD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAES,QAAS,QAASX,SAAA,CAC7BgV,EAAS1b,IAAKwd,IACb/W,EAAAA,EAAAA,MAAA,UAEEM,QAASA,KACP+S,EAAa0D,EAAKnY,IACb8W,GAAWjC,GAAe,IAEjCtT,MAAO,CACLwF,QAAS,OACTE,WAAY,SACZiC,IAAK,OACLlH,QAAS,OACTyV,MAAO,OACPxV,WAAYuS,IAAc2D,EAAKnY,GAAK,yBAA2B,OAC/DsX,OAAQ,OACR9V,MAAOgT,IAAc2D,EAAKnY,GAAK,UAAY,UAC3CoY,eAAgB,OAChBlW,aAAc,OACdT,aAAc,SACd8V,OAAQ,UACRM,WAAY,gBACZrQ,SAAU,OACV6Q,WAAY7D,IAAc2D,EAAKnY,GAAK,oBAAsB,QAC1DqB,SAAA,EAEFC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACiG,SAAU,UAAUnG,SAAE8W,EAAK7B,QACzChV,EAAAA,EAAAA,KAAA,QAAAD,SAAO8W,EAAK3N,UAxBP2N,EAAKnY,MA6BdoB,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACgG,UAAW,OAAQ+Q,WAAY,OAAQC,UAAW,sCAAsClX,SAAA,EACnGC,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CACbU,WAAY,oDACZT,MAAO,QACP8V,OAAQ,OACRpV,aAAc,MACdF,QAAS,iBACT+V,WAAY,MACZR,OAAQ,UACRE,MAAO,OACPhW,aAAc,UACdJ,SAAC,iCAGHC,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CACbU,WAAY,oDACZT,MAAO,QACP8V,OAAQ,OACRpV,aAAc,MACdF,QAAS,iBACT+V,WAAY,MACZR,OAAQ,UACRE,MAAO,QACPpW,SAAC,yCAOPC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACV2V,SAAU,WACVsB,OAAQ,EACRpB,KAAM,EACNqB,MAAO,EACPzW,QAAS,OACTuW,UAAW,sCACXlX,UACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQE,WAAY,SAAUiC,IAAK,WAAW7H,SAAA,EAClEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVkW,MAAO,OACPD,OAAQ,OACRvV,WAAY,oDACZC,aAAc,MACd6E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB+Q,WAAY,OACZ1W,SAAC,OAGHD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,QAASuW,WAAY,MAAOvQ,SAAU,UAAUnG,SAAC,gBACrEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,kCAO5DD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVmX,WAAY5B,EAAY,QAAU,IAClC9U,QAAS,UACTX,SAAA,EAEAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZxF,aAAc,OACdkX,cAAe,OACfb,aAAc,qCACdc,SAAU,OACV1P,IAAK,QACL7H,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,OACVuQ,WAAY,MACZvW,MAAO,UACP0W,OAAQ,GACR7W,UAC6C,QAA5C0N,EAAAsH,EAASwC,KAAKV,GAAQA,EAAKnY,KAAOwU,UAAU,IAAAzF,OAAA,EAA5CA,EAA8CvE,QAAS,eAE1DpJ,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACTE,WAAY,SACZiC,IAAK,QACL7H,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAC4F,UAAW,SAAS9F,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,QAASuW,WAAY,OAAO1W,SAAC,oBACjDC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,gCAEtDC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVkW,MAAO,OACPD,OAAQ,OACRvV,WAAY,oDACZC,aAAc,MACd6E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB+Q,WAAY,MACZvQ,SAAU,UACVnG,SAAC,YAKQ,cAAdmT,IACCpT,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEED,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACT+R,oBAAqB,uCACrB5P,IAAK,SACLzH,aAAc,QACdJ,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACT0V,eAAgB,aAChBqB,UAAW,mCACX1X,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZxF,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXC,MAAO,UACPgG,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,uBACHC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACiG,SAAU,UAAUnG,SAAC,qBAErCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,SAAEtG,EAAMie,iBAAmB,KAC7B1X,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVhG,MAAO,WACPH,SAAC,4BAGLD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACT0V,eAAgB,aAChBqB,UAAW,mCACX1X,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZxF,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXC,MAAO,UACPgG,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,qBACHC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACiG,SAAU,UAAUnG,SAAC,qBAErCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,SAAEtG,EAAMke,gBAAkB,KAC5B3X,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVhG,MAAO,WACPH,SAAC,4BAGLD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACT0V,eAAgB,aAChBqB,UAAW,mCACX1X,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZxF,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXC,MAAO,UACPgG,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,kBACHC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACiG,SAAU,UAAUnG,SAAC,qBAErCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,UAAmB,QAAjB2N,EAAAjU,EAAM2O,mBAAW,IAAAsF,OAAA,EAAjBA,EAAmBtG,mBAAoB,OAC3CpH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVhG,MAAO,WACPH,SAAC,2BAGLD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACT0V,eAAgB,aAChBqB,UAAW,mCACX1X,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZxF,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXC,MAAO,UACPgG,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,kBACHC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACiG,SAAU,UAAUnG,SAAC,eAErCD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACViG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,SAAA,CAAEtG,EAAM+U,aAAe,EAAE,QAC3BxO,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVhG,MAAO,WACPH,SAAC,wBAKPD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,SAAC,uBACHC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwF,QAAS,OAAQ+R,oBAAqB,uCAAwC5P,IAAK,UAAU7H,SACvGqT,EAAU/Z,IAAK8b,IACdrV,EAAAA,EAAAA,MAAA,OAAuBG,MAAO,CAACU,WAAY,4BAA6BqV,OAAQ,qCAAsCpV,aAAc,OAAQF,QAAS,UAAUX,SAAA,EAC7JD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUxF,aAAc,QAAQJ,SAAA,EACzGC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAAS0W,OAAQ,GAAG7W,SAAEoV,EAASnf,QAClDgK,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVO,MAAO,OACPD,OAAQ,OACRtV,aAAc,OACdqV,OAAQ,UACRM,WAAY,gBACZ5V,WAAYwU,EAASN,OAAS,UAAY,QAE5CzU,QAASA,IAAM6U,EAAeE,EAASzW,IAAIqB,UAE3CC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVC,IAAK,MACLC,KAAM,MACNK,MAAO,OACPD,OAAQ,OACRvV,WAAY,QACZC,aAAc,MACd2V,WAAY,gBACZD,UAAWnB,EAASN,OAAS,mBAAqB,yBAK1D7U,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAACC,MAAO,UAAWgG,SAAU,SAAU/F,aAAc,QAAQJ,SAAEoV,EAASjf,cACjFif,EAASL,UACRhV,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACU,WAAY,qBAAsBC,aAAc,MAAOF,QAAS,OAAQmF,UAAW,SAAU1F,aAAc,QAAQJ,SAAA,EAC9HC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAW0I,WAAY,YAAa1C,SAAU,SAAUuQ,WAAY,OAAO1W,SAAC,iBAGhGC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,yCAGxDC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwW,WAAY,MAAOvW,MAAOiV,EAASN,OAAS,UAAY,WAAW9U,SAC7EoV,EAASN,OAAS,gBAAa,sBAxC1BM,EAASzW,WAgDzBoB,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,SAAC,0BACHC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAC2X,UAAW,QAAQ7X,UAC9BD,EAAAA,EAAAA,MAAA,SAAOG,MAAO,CACZkW,MAAO,OACP0B,eAAgB,YAChB9X,SAAA,EACAC,EAAAA,EAAAA,KAAA,SAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTU,WAAY,yBACZD,QAAS,OACTmF,UAAW,OACX4Q,WAAY,MACZvW,MAAO,UACPsW,aAAc,sCACdzW,SAAC,UACHC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTU,WAAY,yBACZD,QAAS,OACTmF,UAAW,OACX4Q,WAAY,MACZvW,MAAO,UACPsW,aAAc,sCACdzW,SAAC,YACHC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTU,WAAY,yBACZD,QAAS,OACTmF,UAAW,OACX4Q,WAAY,MACZvW,MAAO,UACPsW,aAAc,sCACdzW,SAAC,YACHC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTU,WAAY,yBACZD,QAAS,OACTmF,UAAW,OACX4Q,WAAY,MACZvW,MAAO,UACPsW,aAAc,sCACdzW,SAAC,UACHC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTU,WAAY,yBACZD,QAAS,OACTmF,UAAW,OACX4Q,WAAY,MACZvW,MAAO,UACPsW,aAAc,sCACdzW,SAAC,iBAGPC,EAAAA,EAAAA,KAAA,SAAAD,SACGiO,EAAe3U,IAAK2X,IACnBlR,EAAAA,EAAAA,MAAA,MAAsBG,MAAO,CAC3BsW,WAAY,wBACZxW,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTS,QAAS,OACT8V,aAAc,uCACdzW,SAAEiR,EAAS1X,QACb0G,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTS,QAAS,OACT8V,aAAc,uCACdzW,SAAEiR,EAASpZ,UACboI,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTS,QAAS,OACT8V,aAAc,uCACdzW,SAAEiR,EAASX,UACbrQ,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTS,QAAS,OACT8V,aAAc,sCACdtW,MAAO,WACPH,SAAEiR,EAASK,QACbrR,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTS,QAAS,OACT8V,aAAc,uCACdzW,UACAC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXS,QAAS,kBACTE,aAAc,OACdsF,SAAU,SACVuQ,WAAY,MACZ9V,WAAgC,YAApBqQ,EAASpV,OAAuB,yBACZ,WAApBoV,EAASpV,OAAsB,yBAC/B,0BACZsE,MAA2B,YAApB8Q,EAASpV,OAAuB,UACZ,WAApBoV,EAASpV,OAAsB,UAC/B,WACPmE,SACCiR,EAASpV,OAAOkc,oBApCd9G,EAAStS,kBAiDjB,UAAdwU,IACCpT,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUxF,aAAc,SAAUmX,SAAU,OAAQ1P,IAAK,QAAQ7H,SAAA,EAC1IC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,KACdJ,SAAC,qBACHC,EAAAA,EAAAA,KAAA,UACEC,MAAO,CACLU,WAAY,oDACZT,MAAO,QACP8V,OAAQ,oBACRpV,aAAc,MACdF,QAAS,iBACT+V,WAAY,MACZR,OAAQ,UACRM,WAAY,gBACZrQ,SAAU,QAEZ9F,QAASA,IAAMuT,GAAoB,GAAM5T,SAC1C,iBAKHC,EAAAA,EAAAA,KAAA,SACEiH,KAAK,OACLkG,YAAY,mCACZlN,MAAO,CACLkW,MAAO,OACPxV,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,OACV/F,aAAc,UAEhB6M,MAAO0H,EACPzH,SAAWH,GAAM6H,EAAc7H,EAAEI,OAAOF,UAG1ChN,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwF,QAAS,OAAQsS,cAAe,SAAUnQ,IAAK,QAAQ7H,SACjEuV,EAAcjc,IAAKC,IAClBwG,EAAAA,EAAAA,MAAA,OAAmBG,MAAO,CACxBU,WAAY,4BACZqV,OAAQ,sCACRpV,aAAc,OACdF,QAAS,OACT+E,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZsQ,OAAQ,UACRM,WAAY,wBAEdnW,QAASA,KACP6T,EAAgB3a,GAChBya,GAAwB,IAE1BiE,aAAelL,GAAMA,EAAEI,OAAOjN,MAAMU,WAAa,2BACjDsX,aAAenL,GAAMA,EAAEI,OAAOjN,MAAMU,WAAa,4BAA4BZ,SAAA,EAE3ED,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQE,WAAY,SAAUiC,IAAK,OAAQsQ,KAAM,GAAGnY,SAAA,EACxEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVkW,MAAO,OACPD,OAAQ,OACRvV,WAAY,oDACZC,aAAc,MACd6E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBxF,MAAO,QACPuW,WAAY,OACZ1W,SACCzG,EAAKtD,KAAKmiB,OAAO,MAEpBrY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,QAASuW,WAAY,OAAO1W,SAAEzG,EAAKtD,QACvDgK,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAEzG,EAAKV,SAC1DkH,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACiG,SAAU,SAAUhG,MAAO,UAAWuF,QAAS,OAAQmC,IAAK,QAAQ7H,SAAA,EAC/ED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAOzG,EAAKgW,MAAM,aAClBxP,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAOzG,EAAKiW,MAAM,aAClBvP,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXS,QAAS,gBACTE,aAAc,MACdD,WAA0B,aAAdrH,EAAKuW,KAAsB,0BACd,SAAdvW,EAAKuW,KAAkB,0BACT,WAAdvW,EAAKuW,KAAoB,2BAA6B,0BACjE3P,MAAqB,aAAd5G,EAAKuW,KAAsB,UACb,SAAdvW,EAAKuW,KAAkB,UACT,WAAdvW,EAAKuW,KAAoB,UAAY,WAC5C9P,SACCzG,EAAKuW,KAAKiI,0BAKnBhY,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQmC,IAAK,UAAU7H,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,UACEC,MAAO,CACLU,WAAY,UACZT,MAAO,OACP8V,OAAQ,OACRpV,aAAc,MACdF,QAAS,cACTwF,SAAU,SACVuQ,WAAY,MACZR,OAAQ,WAEV7V,QAAU0M,IACRA,EAAEsL,kBACFnE,EAAgB3a,GAChBua,GAAuB,IACvB9T,SACH,iBAGDC,EAAAA,EAAAA,KAAA,UACEC,MAAO,CACLU,WAA4B,WAAhBrH,EAAKsC,OAAsB,UAAY,UACnDsE,MAAO,QACP8V,OAAQ,OACRpV,aAAc,MACdF,QAAS,cACTwF,SAAU,SACVuQ,WAAY,MACZR,OAAQ,WAEV7V,QAAU0M,GAAMA,EAAEsL,kBAAkBrY,SAEnB,WAAhBzG,EAAKsC,OAAsB,QAAU,aAtFlCtC,EAAKoF,UAgGR,eAAdwU,IACCpT,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEED,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,SACdsF,QAAS,OACTE,WAAY,SACZiC,IAAK,UACL7H,SAAC,sCAGHC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwF,QAAS,OAAQ+R,oBAAqB,uCAAwC5P,IAAK,UAAU7H,SACvGgO,EAAW4B,OAAO7Q,GAAY,CAAC,UAAW,OAAQ,UAAW,cAAe,YAAY/H,SAAS+H,EAAS9I,OAAOqD,IAAKyF,IAAQ,IAAAuZ,EAAA,OAC7HvY,EAAAA,EAAAA,MAAA,OAAyBG,MAAO,CAC9BU,WAAY,4BACZqV,OAAQ,sCACRpV,aAAc,OACdF,QAAS,UACTX,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUxF,aAAc,QAAQJ,SAAA,EACzGC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAAS0W,OAAQ,EAAG0B,cAAe,cAAcvY,SAAEjB,EAAS9I,QAC/EgK,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVO,MAAO,OACPD,OAAQ,OACRtV,aAAc,OACdqV,OAAQ,UACRM,WAAY,gBACZ5V,WAAY7B,EAASwR,QAAU,UAAY,QAE7ClQ,QAASA,IAAMgV,EAAetW,EAAS9I,MAAM+J,UAE7CC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVC,IAAK,MACLC,KAAM,MACNK,MAAO,OACPD,OAAQ,OACRvV,WAAY,QACZC,aAAc,MACd2V,WAAY,gBACZD,UAAWxX,EAASwR,QAAU,mBAAqB,yBAK3DxQ,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQsS,cAAe,SAAUnQ,IAAK,SAAU1B,SAAU,UAAUnG,SAAA,EACxFD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,iBAAiB3F,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,YACjCC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,UAAWuW,WAAY,OAAO1W,SAAEjB,EAAS0R,gBAEhE1Q,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,iBAAiB3F,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,YACjCC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,UAAWuW,WAAY,OAAO1W,SAAEjB,EAAS2R,gBAEhE3Q,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,iBAAiB3F,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,cACjCD,EAAAA,EAAAA,MAAA,QAAMG,MAAO,CAACC,MAAO,UAAWuW,WAAY,OAAO1W,SAAA,CAAC,IAAkB,QAAjBsY,EAACvZ,EAAS4R,eAAO,IAAA2H,OAAA,EAAhBA,EAAkBjR,2BAG5EpH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVgG,UAAW,OACXC,SAAU,SACVuQ,WAAY,MACZvW,MAAOpB,EAASwR,QAAU,UAAY,WACtCvQ,SACCjB,EAASwR,QAAU,iBAAc,sBAvD5BxR,EAAS9I,cA+DzB8J,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,SACdsF,QAAS,OACTE,WAAY,SACZiC,IAAK,UACL7H,SAAC,qCAGHC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwF,QAAS,OAAQ+R,oBAAqB,uCAAwC5P,IAAK,UAAU7H,SACvGgO,EAAW4B,OAAO7Q,GAAY,CAAC,SAAU,UAAU/H,SAAS+H,EAAS9I,OAAOqD,IAAKyF,IAAQ,IAAAyZ,EAAA,OACxFzY,EAAAA,EAAAA,MAAA,OAAyBG,MAAO,CAC9BU,WAAY,4BACZqV,OAAQ,sCACRpV,aAAc,OACdF,QAAS,UACTX,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUxF,aAAc,QAAQJ,SAAA,EACzGC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAAS0W,OAAQ,EAAG0B,cAAe,cAAcvY,SAAEjB,EAAS9I,QAC/EgK,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVO,MAAO,OACPD,OAAQ,OACRtV,aAAc,OACdqV,OAAQ,UACRM,WAAY,gBACZ5V,WAAY7B,EAASwR,QAAU,UAAY,QAE7ClQ,QAASA,IAAMgV,EAAetW,EAAS9I,MAAM+J,UAE7CC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVC,IAAK,MACLC,KAAM,MACNK,MAAO,OACPD,OAAQ,OACRvV,WAAY,QACZC,aAAc,MACd2V,WAAY,gBACZD,UAAWxX,EAASwR,QAAU,mBAAqB,yBAK3DxQ,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQsS,cAAe,SAAUnQ,IAAK,SAAU1B,SAAU,UAAUnG,SAAA,EACxFD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,iBAAiB3F,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,YACjCC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,UAAWuW,WAAY,OAAO1W,SAAEjB,EAAS0R,gBAEhE1Q,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,iBAAiB3F,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,YACjCC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,UAAWuW,WAAY,OAAO1W,SAAEjB,EAAS2R,gBAEhE3Q,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,iBAAiB3F,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,cACjCD,EAAAA,EAAAA,MAAA,QAAMG,MAAO,CAACC,MAAO,UAAWuW,WAAY,OAAO1W,SAAA,CAAC,IAAkB,QAAjBwY,EAACzZ,EAAS4R,eAAO,IAAA6H,OAAA,EAAhBA,EAAkBnR,2BAG5EpH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVgG,UAAW,OACXC,SAAU,SACVuQ,WAAY,MACZvW,MAAOpB,EAASwR,QAAU,UAAY,WACtCvQ,SACCjB,EAASwR,QAAU,iBAAc,sBAvD5BxR,EAAS9I,gBAiEd,qBAAdkd,IACClT,EAAAA,EAAAA,KAACyL,GAAgB,IAIJ,YAAdyH,IACCpT,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUxF,aAAc,UAAUJ,SAAA,EAC3GC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,KACdJ,SAAC,uBACHC,EAAAA,EAAAA,KAAA,UACEC,MAAO,CACLU,WAAY,oDACZT,MAAO,QACP8V,OAAQ,oBACRpV,aAAc,MACdF,QAAS,iBACT+V,WAAY,MACZR,OAAQ,UACRM,WAAY,gBACZrQ,SAAU,QAEZ9F,QAASA,IAAMqT,GAAyB,GAAM1T,SAC/C,0BAKHC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwF,QAAS,OAAQsS,cAAe,SAAUnQ,IAAK,QAAQ7H,SACjEqT,EAAU/Z,IAAKgX,IACdvQ,EAAAA,EAAAA,MAAA,OAAqBG,MAAO,CAC1BU,WAAY,4BACZqV,OAAQ,sCACRpV,aAAc,OACdF,QAAS,OACT+E,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UACZ5F,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,QAASuW,WAAY,OAAO1W,SAAEsQ,EAAOra,QACzDgK,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAEsQ,EAAOna,eAC5D4J,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACiG,SAAU,SAAUhG,MAAO,UAAW+F,UAAW,UAAUlG,SAAA,CAAC,SAChEsQ,EAAOpJ,KAAK,yCAGvBnH,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQE,WAAY,SAAUiC,IAAK,QAAQ7H,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXS,QAAS,kBACTE,aAAc,OACdsF,SAAU,SACVuQ,WAAY,MACZ9V,WAAY0P,EAAOwE,OAAS,yBAA2B,yBACvD3U,MAAOmQ,EAAOwE,OAAS,UAAY,WACnC9U,SACCsQ,EAAOwE,OAAS,SAAW,cAE9B7U,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CACbU,WAAY,OACZqV,OAAQ,OACR9V,MAAO,UACP+V,OAAQ,UACRQ,WAAY,OACZ1W,SAAC,cAjCGsQ,EAAO3R,UA4CV,cAAdwU,IACCpT,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVwF,QAAS,OACT+R,oBAAqB,uCACrB5P,IAAK,SACLzH,aAAc,QACdJ,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACT0V,eAAgB,aAChBqB,UAAW,mCACX1X,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,UAAkB,QAAhB4N,EAAAlU,EAAM6U,kBAAU,IAAAX,OAAA,EAAhBA,EAAkBvG,mBAAoB,OAC1CpH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVC,MAAO,UACPgG,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,oBAELD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACT0V,eAAgB,aAChBqB,UAAW,mCACX1X,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,UAAkB,QAAhB6N,EAAAnU,EAAMuM,kBAAU,IAAA4H,OAAA,EAAhBA,EAAkBxG,mBAAoB,OAC1CpH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVC,MAAO,UACPgG,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,oBAELD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACT0V,eAAgB,aAChBqB,UAAW,mCACX1X,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,UAAkB,QAAhB8N,EAAApU,EAAM8U,kBAAU,IAAAV,OAAA,EAAhBA,EAAkBzG,mBAAoB,OAC1CpH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVC,MAAO,UACPgG,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,uBAIPD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,SAAC,yBACHC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwF,QAAS,OAAQsS,cAAe,SAAUnQ,IAAK,QAAQ7H,SACjEgO,EAAW1U,IAAKyF,IAAQ,IAAA0Z,EAAA,OACvB1Y,EAAAA,EAAAA,MAAA,OAAyBG,MAAO,CAC9BwF,QAAS,OACTE,WAAY,SACZD,eAAgB,gBAChBhF,QAAS,OACTC,WAAY,4BACZC,aAAc,OACdb,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQE,WAAY,SAAUiC,IAAK,QAAQ7H,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACkW,MAAO,OAAQD,OAAQ,OAAQvV,WAAY,UAAWC,aAAc,UACjFZ,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,QAASoY,cAAe,cAAcvY,SAAEjB,EAAS9I,WAExE8J,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACC,MAAO,UAAWuW,WAAY,OAAO1W,SAAA,CAAC,IAAkB,QAAjByY,EAAC1Z,EAAS4R,eAAO,IAAA8H,OAAA,EAAhBA,EAAkBpR,sBAZ/DtI,EAAS9I,cAkBzB8J,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,UACdJ,SAAC,6BACHD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQ+R,oBAAqB,uCAAwC5P,IAAK,UAAU7H,SAAA,EACxGD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAC4F,UAAW,UAAU9F,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACiG,SAAU,OAAQuQ,WAAY,MAAOvW,MAAO,WAAWH,SAAEtG,EAAMgV,kBAAoB,KAChGzO,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,2BAEtDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAC4F,UAAW,UAAU9F,SAAA,EAChCD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACiG,SAAU,OAAQuQ,WAAY,MAAOvW,MAAO,WAAWH,SAAA,CAAEtG,EAAMiV,gBAAkB,EAAE,QAChG1O,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,wBAEtDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAC4F,UAAW,UAAU9F,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACiG,SAAU,OAAQuQ,WAAY,MAAOvW,MAAO,WAAWH,SAAEtG,EAAMgf,eAAiB,KAC7FzY,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,+BAQ/C,aAAdmT,IACClT,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACuD,GAAiB,MAKP,eAAd2P,IACClT,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACzD,EAAsB,MAKZ,cAAd2W,IACCpT,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,gFACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,SACTP,aAAc,QACdJ,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUxF,aAAc,UAAUJ,SAAA,EAC3GC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTiG,SAAU,SACVuQ,WAAY,MACZvW,MAAO,UACPC,aAAc,KACdJ,SAAC,yBACHC,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CACbU,WAAY,oDACZT,MAAO,QACP8V,OAAQ,oBACRpV,aAAc,MACdF,QAAS,iBACT+V,WAAY,MACZR,OAAQ,UACRM,WAAY,gBACZrQ,SAAU,QACVnG,SAAC,wBAGLC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACwF,QAAS,OAAQ+R,oBAAqB,uCAAwC5P,IAAK,UAAU7H,SACvGqT,EAAU/Z,IAAK8b,IACdrV,EAAAA,EAAAA,MAAA,OAAuBG,MAAO,CAC5BU,WAAY,4BACZqV,OAAQ,qCACRpV,aAAc,OACdF,QAAS,UACTX,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUxF,aAAc,QAAQJ,SAAA,EACzGC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAAS0W,OAAQ,GAAG7W,SAAEoV,EAASnf,QAClDgK,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVO,MAAO,OACPD,OAAQ,OACRtV,aAAc,OACdqV,OAAQ,UACRM,WAAY,gBACZ5V,WAAYwU,EAASN,OAAS,UAAY,QAE5CzU,QAASA,IAAM6U,EAAeE,EAASzW,IAAIqB,UAE3CC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,WACVC,IAAK,MACLC,KAAM,MACNK,MAAO,OACPD,OAAQ,OACRvV,WAAY,QACZC,aAAc,MACd2V,WAAY,gBACZD,UAAWnB,EAASN,OAAS,mBAAqB,yBAK1D7U,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAACC,MAAO,UAAWgG,SAAU,SAAU/F,aAAc,QAAQJ,SAAEoV,EAASjf,eAClF4J,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQE,WAAY,SAAUD,eAAgB,iBAAiB3F,SAAA,EACnFC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXS,QAAS,kBACTE,aAAc,OACdsF,SAAU,SACVuQ,WAAY,MACZ9V,WAAYwU,EAASN,OAAS,yBAA2B,yBACzD3U,MAAOiV,EAASN,OAAS,UAAY,WACrC9U,SACCoV,EAASN,OAAS,SAAW,cAEhC7U,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CACbU,WAAY,OACZqV,OAAQ,OACR9V,MAAO,UACP+V,OAAQ,UACR/P,SAAU,SACVuQ,WAAY,OACZ1W,SAAC,uBAtDGoV,EAASzW,aAkE5B8U,IACCxT,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACV2V,SAAU,QACVC,IAAK,EACLC,KAAM,EACNqB,MAAO,EACPD,OAAQ,EACRvW,WAAY,qBACZ8E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBqQ,OAAQ,KACRhW,UACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,OACTyV,MAAO,MACPuC,SAAU,QACVtC,eAAgB,cAChBrW,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAASC,aAAc,UAAUJ,SAAC,uBACrDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQsS,cAAe,SAAUnQ,IAAK,QAAQ7H,SAAA,EAClEC,EAAAA,EAAAA,KAAA,SACEiH,KAAK,OACLkG,YAAY,cACZH,MAAOkH,EAAUle,KACjBiX,SAAWH,GAAMqH,GAAY5a,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG2a,GAAS,IAAEle,KAAM8W,EAAEI,OAAOF,SAC5D/M,MAAO,CACLU,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,WAGdpG,EAAAA,EAAAA,MAAA,UACEkN,MAAOkH,EAAUpV,SACjBmO,SAAWH,GAAMqH,GAAY5a,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG2a,GAAS,IAAEpV,SAAUgO,EAAEI,OAAOF,SAChE/M,MAAO,CACLU,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,QACVnG,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,GAAEjN,SAAC,oBAChBgO,EAAW1U,IAAIsf,IACd3Y,EAAAA,EAAAA,KAAA,UAAuBgN,MAAO2L,EAAI3iB,KAAMiK,MAAO,CAACU,WAAY,QAAQZ,SAAE4Y,EAAI3iB,MAA7D2iB,EAAI3iB,WAGrBgK,EAAAA,EAAAA,KAAA,SACEiH,KAAK,SACLkG,YAAY,cACZH,MAAOkH,EAAUE,YACjBnH,SAAWH,GAAMqH,GAAY5a,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG2a,GAAS,IAAEE,YAAawE,SAAS9L,EAAEI,OAAOF,QAAU,KACtF/M,MAAO,CACLU,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,cAIhBpG,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQmC,IAAK,OAAQ3B,UAAW,QAAQlG,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,UACEI,QA1wCOyY,KACd3E,EAAUle,MAASke,EAAUpV,UAMlCvH,QAAQO,IAAI,iBAAkBoc,GAC9BT,GAAyB,GACzBU,EAAa,CAAEne,KAAM,GAAI8I,SAAU,GAAIC,OAAQ,SAAUqV,YAAa,EAAGC,OAAQ,gBACjFrN,MAAM,uDARJA,MAAM,uCAywCI/G,MAAO,CACLiY,KAAM,EACNvX,WAAY,oDACZT,MAAO,QACP8V,OAAQ,oBACRpV,aAAc,MACdF,QAAS,UACT+V,WAAY,MACZR,OAAQ,WACRlW,SACH,mBAGDC,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMqT,GAAyB,GACxCxT,MAAO,CACLiY,KAAM,EACNvX,WAAY,2BACZT,MAAO,QACP8V,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACT+V,WAAY,MACZR,OAAQ,WACRlW,SACH,mBASR2T,IACC1T,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACV2V,SAAU,QACVC,IAAK,EACLC,KAAM,EACNqB,MAAO,EACPD,OAAQ,EACRvW,WAAY,qBACZ8E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBqQ,OAAQ,KACRhW,UACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,OACTyV,MAAO,MACPuC,SAAU,QACVtC,eAAgB,cAChBrW,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAASC,aAAc,UAAUJ,SAAC,kBACrDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQsS,cAAe,SAAUnQ,IAAK,QAAQ7H,SAAA,EAClEC,EAAAA,EAAAA,KAAA,SACEiH,KAAK,OACLkG,YAAY,YACZH,MAAOsH,EAAQte,KACfiX,SAAWH,GAAMyH,GAAUhb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG+a,GAAO,IAAEte,KAAM8W,EAAEI,OAAOF,SACxD/M,MAAO,CACLU,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,WAGdlG,EAAAA,EAAAA,KAAA,SACEiH,KAAK,QACLkG,YAAY,gBACZH,MAAOsH,EAAQ1b,MACfqU,SAAWH,GAAMyH,GAAUhb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG+a,GAAO,IAAE1b,MAAOkU,EAAEI,OAAOF,SACzD/M,MAAO,CACLU,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,WAGdpG,EAAAA,EAAAA,MAAA,UACEkN,MAAOsH,EAAQzE,KACf5C,SAAWH,GAAMyH,GAAUhb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG+a,GAAO,IAAEzE,KAAM/C,EAAEI,OAAOF,SACxD/M,MAAO,CACLU,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,QACVnG,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,SAAS/M,MAAO,CAACU,WAAY,QAAQZ,SAAC,iBACpDC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,SAAS/M,MAAO,CAACU,WAAY,QAAQZ,SAAC,iBACpDC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,OAAO/M,MAAO,CAACU,WAAY,QAAQZ,SAAC,eAClDC,EAAAA,EAAAA,KAAA,UAAQgN,MAAM,WAAW/M,MAAO,CAACU,WAAY,QAAQZ,SAAC,sBAExDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQmC,IAAK,QAAQ7H,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SACEiH,KAAK,SACLkG,YAAY,iBACZH,MAAOsH,EAAQhF,MACfrC,SAAWH,GAAMyH,GAAUhb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG+a,GAAO,IAAEhF,MAAOsJ,SAAS9L,EAAEI,OAAOF,QAAU,KAC5E/M,MAAO,CACLiY,KAAM,EACNvX,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,WAGdlG,EAAAA,EAAAA,KAAA,SACEiH,KAAK,SACLkG,YAAY,iBACZH,MAAOsH,EAAQ/E,MACftC,SAAWH,GAAMyH,GAAUhb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG+a,GAAO,IAAE/E,MAAOqJ,SAAS9L,EAAEI,OAAOF,QAAU,KAC5E/M,MAAO,CACLiY,KAAM,EACNvX,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,iBAKlBpG,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQmC,IAAK,OAAQ3B,UAAW,QAAQlG,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,UACEI,QAx4CE0Y,KACTxE,EAAQte,MAASse,EAAQ1b,OAM9BrB,QAAQO,IAAI,YAAawc,GACzBX,GAAoB,GACpBY,EAAW,CAAEve,KAAM,GAAI4C,MAAO,GAAIiX,KAAM,SAAUP,MAAO,EAAGC,MAAO,IACnEvI,MAAM,qDARJA,MAAM,uCAu4CI/G,MAAO,CACLiY,KAAM,EACNvX,WAAY,oDACZT,MAAO,QACP8V,OAAQ,oBACRpV,aAAc,MACdF,QAAS,UACT+V,WAAY,MACZR,OAAQ,WACRlW,SACH,cAGDC,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMuT,GAAoB,GACnC1T,MAAO,CACLiY,KAAM,EACNvX,WAAY,2BACZT,MAAO,QACP8V,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACT+V,WAAY,MACZR,OAAQ,WACRlW,SACH,mBASR6T,GAAuBI,IACtBhU,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACV2V,SAAU,QACVC,IAAK,EACLC,KAAM,EACNqB,MAAO,EACPD,OAAQ,EACRvW,WAAY,qBACZ8E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBqQ,OAAQ,KACRhW,UACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,OACTyV,MAAO,MACPuC,SAAU,QACVtC,eAAgB,aAChBvQ,UAAW,UACX9F,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAASC,aAAc,QAAQJ,SAAC,iBACnDD,EAAAA,EAAAA,MAAA,KAAGG,MAAO,CAACC,MAAO,UAAWC,aAAc,UAAUJ,SAAA,CAAC,kBACpCiU,EAAahe,SAE/BgK,EAAAA,EAAAA,KAAA,SACEiH,KAAK,SACLkG,YAAY,kBACZH,MAAOwH,EACPvH,SAAWH,GAAM2H,EAAemE,SAAS9L,EAAEI,OAAOF,QAAU,GAC5D/M,MAAO,CACLkW,MAAO,OACPxV,WAAY,2BACZqV,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACTR,MAAO,QACPgG,SAAU,OACV/F,aAAc,OACd0F,UAAW,aAGf/F,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQmC,IAAK,QAAQ7H,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UACEI,QA58CK2Y,MACZ/E,GAAgBQ,GAAe,IAGpCjd,QAAQO,IAAI,eAAgB,CAAEwB,KAAM0a,EAAcgF,OAAQxE,IAC1DX,GAAuB,GACvBY,EAAe,GACfzN,MAAM,oDAs8CM/G,MAAO,CACLiY,KAAM,EACNvX,WAAY,UACZT,MAAO,OACP8V,OAAQ,OACRpV,aAAc,MACdF,QAAS,UACT+V,WAAY,MACZR,OAAQ,WACRlW,SACH,iBAGDC,EAAAA,EAAAA,KAAA,UACEI,QAASA,KACPyT,GAAuB,GACvBY,EAAe,IAEjBxU,MAAO,CACLiY,KAAM,EACNvX,WAAY,2BACZT,MAAO,QACP8V,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACT+V,WAAY,MACZR,OAAQ,WACRlW,SACH,mBASR+T,GAAwBE,IACvBhU,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACV2V,SAAU,QACVC,IAAK,EACLC,KAAM,EACNqB,MAAO,EACPD,OAAQ,EACRvW,WAAY,qBACZ8E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBqQ,OAAQ,KACRhW,UACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACVU,WAAY,8EACZqV,OAAQ,mCACRpV,aAAc,OACdF,QAAS,OACTyV,MAAO,MACPuC,SAAU,QACVtC,eAAgB,cAChBrW,SAAA,EACAD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQE,WAAY,SAAUiC,IAAK,OAAQzH,aAAc,QAAQJ,SAAA,EACrFC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVkW,MAAO,OACPD,OAAQ,OACRvV,WAAY,oDACZC,aAAc,MACd6E,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBxF,MAAO,QACPuW,WAAY,MACZvQ,SAAU,UACVnG,SACCiU,EAAahe,KAAKmiB,OAAO,MAE5BrY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,MAAO,QAAS0W,OAAQ,GAAG7W,SAAEiU,EAAahe,QACtDgK,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAACC,MAAO,UAAW0W,OAAQ,YAAY7W,SAAEiU,EAAapb,SAChEkH,EAAAA,EAAAA,MAAA,QAAMG,MAAO,CACXS,QAAS,kBACTE,aAAc,OACdsF,SAAU,SACVuQ,WAAY,MACZ9V,WAAkC,aAAtBqT,EAAanE,KAAsB,0BACd,SAAtBmE,EAAanE,KAAkB,0BACT,WAAtBmE,EAAanE,KAAoB,2BAA6B,0BACzE3P,MAA6B,aAAtB8T,EAAanE,KAAsB,UACb,SAAtBmE,EAAanE,KAAkB,UACT,WAAtBmE,EAAanE,KAAoB,UAAY,WACpD9P,SAAA,CACCiU,EAAanE,KAAKiI,cAAc,kBAKvChY,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQ+R,oBAAqB,uCAAwC5P,IAAK,OAAQzH,aAAc,QAAQJ,SAAA,EAC5HD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAC4F,UAAW,UAAU9F,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACiG,SAAU,OAAQuQ,WAAY,MAAOvW,MAAO,WAAWH,SAAEiU,EAAa1E,SACnFtP,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,oBAEtDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAC4F,UAAW,UAAU9F,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACiG,SAAU,OAAQuQ,WAAY,MAAOvW,MAAO,WAAWH,SAAEiU,EAAazE,SACnFvP,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,wBAEtDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAC4F,UAAW,UAAU9F,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACiG,SAAU,OAAQuQ,WAAY,MAAOvW,MAAO,WAAWH,SAAEiU,EAAahO,YAAc,KACjGhG,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAO,UAAWgG,SAAU,UAAUnG,SAAC,uBAIxDD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACE,aAAc,QAAQJ,SAAA,EACjCD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBvF,aAAc,UAAUJ,SAAA,EACrFC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,gBACjCC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,SAASH,SAAEiU,EAAavE,UAAY,YAE3D3P,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,gBAAiBvF,aAAc,UAAUJ,SAAA,EACrFC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,gBACjCC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,SAASH,SAAEiU,EAAatE,UAAY,YAE3D5P,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAACwF,QAAS,OAAQC,eAAgB,iBAAiB3F,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,MAAO,WAAWH,SAAC,aACjCC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXC,MAA+B,WAAxB8T,EAAapY,OAAsB,UAAY,UACtD6a,WAAY,MACZ6B,cAAe,aACfvY,SAAEiU,EAAapY,gBAIrBoE,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAM2T,GAAwB,GACvC9T,MAAO,CACLkW,MAAO,OACPxV,WAAY,2BACZT,MAAO,QACP8V,OAAQ,qCACRpV,aAAc,MACdF,QAAS,UACT+V,WAAY,MACZR,OAAQ,WACRlW,SACH,eAQNuT,IAAgBkC,IACfxV,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2V,SAAU,QACVC,IAAK,EACLC,KAAM,EACNqB,MAAO,EACPD,OAAQ,EACRvW,WAAY,qBACZoV,OAAQ,IAEV3V,QAASA,IAAMmT,GAAe,Q","sources":["utils/adminManager.js","components/SupabaseConnectionTest.jsx","components/SecurityDashboard.jsx","components/AdminUserManager.jsx","screens/AdminScreen.jsx","hooks/useAdmin.js"],"sourcesContent":["// Admin Management System - Butterfly Predator Theme\n// PapillonLabs Monarch Passport MVP\n\nimport { supabase } from './supabaseClient';\nimport { enhancedSecurity } from './enhancedSecurity';\n\n// Butterfly Predator Role Hierarchy\nconst ADMIN_ROLES = {\n  CHRYSALIS: 'chrysalis',    // Regular user - transformation stage\n  WASP: 'wasp',             // Moderator - aggressive protector\n  MANTIS: 'mantis',         // Admin - skilled hunter\n  DRAGONFLY: 'dragonfly'    // Super Admin - apex predator\n};\n\n// Role hierarchy (each inherits from lower roles)\nconst ROLE_HIERARCHY = {\n  [ADMIN_ROLES.CHRYSALIS]: [],\n  [ADMIN_ROLES.WASP]: [ADMIN_ROLES.CHRYSALIS],\n  [ADMIN_ROLES.MANTIS]: [ADMIN_ROLES.WASP, ADMIN_ROLES.CHRYSALIS],\n  [ADMIN_ROLES.DRAGONFLY]: [ADMIN_ROLES.MANTIS, ADMIN_ROLES.WASP, ADMIN_ROLES.CHRYSALIS]\n};\n\n// Permissions by role\nconst ROLE_PERMISSIONS = {\n  [ADMIN_ROLES.CHRYSALIS]: [\n    'chrysalis:profile:view',\n    'chrysalis:profile:edit',\n    'chrysalis:qr:scan',\n    'chrysalis:rewards:view',\n    'chrysalis:stamps:view',\n    'chrysalis:avatar:upload',\n    'chrysalis:activity:view'\n  ],\n  [ADMIN_ROLES.WASP]: [\n    'wasp:profiles:view',\n    'wasp:content:moderate',\n    'wasp:reports:view',\n    'wasp:rewards:manage',\n    'wasp:analytics:view',\n    'wasp:violations:sting'\n  ],\n  [ADMIN_ROLES.MANTIS]: [\n    'mantis:users:manage',\n    'mantis:roles:manage',\n    'mantis:data:view',\n    'mantis:system:manage',\n    'mantis:security:view',\n    'mantis:rewards:manage',\n    'mantis:content:manage',\n    'mantis:panel:view',\n    'mantis:strike:execute'\n  ],\n  [ADMIN_ROLES.DRAGONFLY]: [\n    'dragonfly:all',\n    'dragonfly:admins:manage',\n    'dragonfly:config:manage',\n    'dragonfly:security:audit',\n    'dragonfly:data:export',\n    'dragonfly:command:apex'\n  ]\n};\n\n// Role display names and emojis\nconst ROLE_DISPLAY = {\n  [ADMIN_ROLES.CHRYSALIS]: { name: 'Chrysalis', emoji: '🦋', description: 'Regular User' },\n  [ADMIN_ROLES.WASP]: { name: 'Wasp', emoji: '🐝', description: 'Moderator' },\n  [ADMIN_ROLES.MANTIS]: { name: 'Mantis', emoji: '🦗', description: 'Admin' },\n  [ADMIN_ROLES.DRAGONFLY]: { name: 'Dragonfly', emoji: '🐉', description: 'Super Admin' }\n};\n\n// Input validation\nconst validateUserId = (userId) => {\n  if (!userId || typeof userId !== 'string') {\n    return { success: false, error: 'Invalid user ID format' };\n  }\n  \n  // Allow UUID format or test format\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n  const testRegex = /^test-.*$/;\n  \n  if (!uuidRegex.test(userId) && !testRegex.test(userId)) {\n    return { success: false, error: 'User ID must be UUID format or test format (test-*)' };\n  }\n  \n  return { success: true };\n};\n\nconst validateRole = (role) => {\n  if (!Object.values(ADMIN_ROLES).includes(role)) {\n    return { success: false, error: `Invalid role. Must be one of: ${Object.values(ADMIN_ROLES).join(', ')}` };\n  }\n  return { success: true };\n};\n\n// Core admin management functions\nexport const adminManager = {\n  // Make a user an admin with specified role\n  async makeAdmin(userId, role) {\n    try {\n      // Validate inputs\n      const userIdValidation = validateUserId(userId);\n      if (!userIdValidation.success) {\n        return { success: false, error: userIdValidation.error };\n      }\n\n      const roleValidation = validateRole(role);\n      if (!roleValidation.success) {\n        return { success: false, error: roleValidation.error };\n      }\n\n      // Update user role in database\n      const { error } = await supabase\n        .from('user_profiles')\n        .update({ role })\n        .eq('id', userId);\n\n      if (error) {\n        console.error('Database error:', error);\n        return { success: false, error: 'Failed to update user role' };\n      }\n\n      // Log admin action\n      enhancedSecurity.trackSuspiciousActivity('system', `${role}_transformation`, {\n        targetUserId: userId,\n        newRole: role,\n        action: 'role_assignment'\n      });\n\n      const roleDisplay = ROLE_DISPLAY[role];\n      console.log(`✅ User ${userId} transformed into ${roleDisplay.emoji} ${roleDisplay.name} (${roleDisplay.description})`);\n\n      return { \n        success: true, \n        message: `User successfully transformed into ${roleDisplay.emoji} ${roleDisplay.name}`,\n        role,\n        roleDisplay\n      };\n\n    } catch (error) {\n      console.error('Admin assignment error:', error);\n      return { success: false, error: error.message };\n    }\n  },\n\n  // Make a user super admin (dragonfly)\n  async makeSuperAdmin(userId) {\n    return this.makeAdmin(userId, ADMIN_ROLES.DRAGONFLY);\n  },\n\n  // Make a user moderator (wasp)\n  async makeModerator(userId) {\n    return this.makeAdmin(userId, ADMIN_ROLES.WASP);\n  },\n\n  // Remove admin status (transform to chrysalis)\n  async removeAdmin(userId) {\n    return this.makeAdmin(userId, ADMIN_ROLES.CHRYSALIS);\n  },\n\n  // Check admin status\n  async checkAdminStatus(userId) {\n    try {\n      const { data, error } = await supabase\n        .from('user_profiles')\n        .select('role, email, full_name, username')\n        .eq('id', userId)\n        .single();\n\n      if (error) {\n        return { success: false, error: 'Failed to fetch user status' };\n      }\n\n      const role = data.role || ADMIN_ROLES.CHRYSALIS;\n      const roleDisplay = ROLE_DISPLAY[role];\n\n      return {\n        success: true,\n        userId,\n        role,\n        roleDisplay,\n        isAdmin: role !== ADMIN_ROLES.CHRYSALIS,\n        isModerator: role === ADMIN_ROLES.WASP,\n        isSuperAdmin: role === ADMIN_ROLES.DRAGONFLY,\n        userInfo: {\n          email: data.email,\n          fullName: data.full_name,\n          username: data.username\n        }\n      };\n\n    } catch (error) {\n      console.error('Status check error:', error);\n      return { success: false, error: error.message };\n    }\n  },\n\n  // Get all admins\n  async getAllAdmins() {\n    try {\n      const { data, error } = await supabase\n        .from('user_profiles')\n        .select('id, role, email, full_name, username, created_at')\n        .neq('role', ADMIN_ROLES.CHRYSALIS)\n        .order('role', { ascending: false });\n\n      if (error) {\n        return { success: false, error: 'Failed to fetch admins' };\n      }\n\n      const admins = data.map(user => ({\n        ...user,\n        roleDisplay: ROLE_DISPLAY[user.role || ADMIN_ROLES.CHRYSALIS]\n      }));\n\n      return { success: true, admins };\n\n    } catch (error) {\n      console.error('Get admins error:', error);\n      return { success: false, error: error.message };\n    }\n  },\n\n  // Get admin statistics\n  async getAdminStats() {\n    try {\n      const { data, error } = await supabase\n        .from('user_profiles')\n        .select('role');\n\n      if (error) {\n        return { success: false, error: 'Failed to fetch admin stats' };\n      }\n\n      const stats = {\n        total: data.length,\n        chrysalis: 0,\n        wasp: 0,\n        mantis: 0,\n        dragonfly: 0\n      };\n\n      data.forEach(user => {\n        const role = user.role || ADMIN_ROLES.CHRYSALIS;\n        stats[role]++;\n      });\n\n      return { success: true, stats };\n\n    } catch (error) {\n      console.error('Admin stats error:', error);\n      return { success: false, error: error.message };\n    }\n  },\n\n  // Check if user has permission\n  hasPermission(userRole, permission) {\n    const userPermissions = this.getUserPermissions(userRole);\n    return userPermissions.includes(permission) || userPermissions.includes('dragonfly:all');\n  },\n\n  // Get all permissions for a role (including inherited)\n  getUserPermissions(role) {\n    const permissions = new Set();\n    \n    // Add direct permissions\n    const directPermissions = ROLE_PERMISSIONS[role] || [];\n    directPermissions.forEach(perm => permissions.add(perm));\n    \n    // Add inherited permissions\n    const inheritedRoles = ROLE_HIERARCHY[role] || [];\n    inheritedRoles.forEach(inheritedRole => {\n      const inheritedPermissions = ROLE_PERMISSIONS[inheritedRole] || [];\n      inheritedPermissions.forEach(perm => permissions.add(perm));\n    });\n    \n    return Array.from(permissions);\n  },\n\n  // Get role hierarchy\n  getRoleHierarchy() {\n    return ROLE_HIERARCHY;\n  },\n\n  // Get role display info\n  getRoleDisplay(role) {\n    return ROLE_DISPLAY[role] || ROLE_DISPLAY[ADMIN_ROLES.CHRYSALIS];\n  },\n\n  // Get all roles\n  getRoles() {\n    return ADMIN_ROLES;\n  }\n};\n\n// Quick admin functions with butterfly theme\nexport const quickAdmin = {\n  // Transform to mantis (admin)\n  async mantis(userId) {\n    return adminManager.makeAdmin(userId, ADMIN_ROLES.MANTIS);\n  },\n\n  // Transform to dragonfly (super admin)\n  async dragonfly(userId) {\n    return adminManager.makeAdmin(userId, ADMIN_ROLES.DRAGONFLY);\n  },\n\n  // Transform to wasp (moderator)\n  async wasp(userId) {\n    return adminManager.makeAdmin(userId, ADMIN_ROLES.WASP);\n  },\n\n  // Transform to chrysalis (remove admin)\n  async remove(userId) {\n    return adminManager.makeAdmin(userId, ADMIN_ROLES.CHRYSALIS);\n  },\n\n  // Check status\n  async check(userId) {\n    return adminManager.checkAdminStatus(userId);\n  },\n\n  // List all admins\n  async list() {\n    return adminManager.getAllAdmins();\n  },\n\n  // Get stats\n  async stats() {\n    return adminManager.getAdminStats();\n  }\n};\n\n// Permission checking utilities\nexport const hasPermission = (userRole, permission) => {\n  return adminManager.hasPermission(userRole, permission);\n};\n\nexport const getUserPermissions = (userRole) => {\n  return adminManager.getUserPermissions(userRole);\n};\n\n// Role checking utilities\nexport const isAdmin = (role) => role && role !== ADMIN_ROLES.CHRYSALIS;\nexport const isModerator = (role) => role === ADMIN_ROLES.WASP || isAdmin(role);\nexport const isSuperAdmin = (role) => role === ADMIN_ROLES.DRAGONFLY;\n\n// Export constants\nexport { ADMIN_ROLES, ROLE_PERMISSIONS, ROLE_DISPLAY };\n\nexport default adminManager; ","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useAuth } from '../hooks/useAuth';\nimport styled from 'styled-components';\n\nconst TestContainer = styled.div`\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  margin: 20px;\n  max-width: 800px;\n`;\n\nconst TestSection = styled.div`\n  margin: 15px 0;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  border-left: 4px solid ${props => props.status === 'success' ? '#4CAF50' : props.status === 'error' ? '#f44336' : '#FFB000'};\n`;\n\nconst TestTitle = styled.h3`\n  color: #FFB000;\n  margin: 0 0 10px 0;\n  font-size: 16px;\n`;\n\nconst TestResult = styled.div`\n  font-family: 'JetBrains Mono', monospace;\n  font-size: 12px;\n  color: ${props => props.status === 'success' ? '#4CAF50' : props.status === 'error' ? '#f44336' : '#FFB000'};\n  white-space: pre-wrap;\n  word-break: break-word;\n`;\n\nconst Button = styled.button`\n  background: linear-gradient(135deg, #FFB000, #FFD700);\n  border: none;\n  padding: 10px 20px;\n  border-radius: 8px;\n  color: #000;\n  font-weight: bold;\n  cursor: pointer;\n  margin: 5px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(255, 176, 0, 0.3);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst StatusIndicator = styled.div`\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.status === 'success' ? '#4CAF50' : props.status === 'error' ? '#f44336' : '#FFB000'};\n  margin-right: 8px;\n`;\n\nconst SupabaseConnectionTest = () => {\n  const { user, profile, loading: authLoading } = useAuth();\n  const [testResults, setTestResults] = useState({});\n  const [running, setRunning] = useState(false);\n  const [overallStatus, setOverallStatus] = useState('idle');\n\n  const runTest = async (testName, testFunction) => {\n    setTestResults(prev => ({\n      ...prev,\n      [testName]: { status: 'running', message: 'Running test...' }\n    }));\n\n    try {\n      const result = await testFunction();\n      setTestResults(prev => ({\n        ...prev,\n        [testName]: { status: 'success', message: result }\n      }));\n      return true;\n    } catch (error) {\n      setTestResults(prev => ({\n        ...prev,\n        [testName]: { status: 'error', message: error.message }\n      }));\n      return false;\n    }\n  };\n\n  const testBasicConnection = async () => {\n    const { data, error } = await supabase.from('user_profiles').select('count').limit(1);\n    if (error) throw error;\n    return `Connected successfully. Found ${data?.length || 0} profiles.`;\n  };\n\n  const testAuthentication = async () => {\n    const { data: { session }, error } = await supabase.auth.getSession();\n    if (error) throw error;\n    return session ? `User authenticated: ${session.user.email}` : 'No active session';\n  };\n\n  const testDatabaseTables = async () => {\n    const tables = ['user_profiles', 'rewards', 'user_closet', 'user_activity', 'admin_settings'];\n    const results = [];\n\n    for (const table of tables) {\n      try {\n        const { data, error } = await supabase.from(table).select('*').limit(1);\n        if (error) {\n          results.push(`${table}: ❌ ${error.message}`);\n        } else {\n          results.push(`${table}: ✅ Accessible`);\n        }\n      } catch (err) {\n        results.push(`${table}: ❌ ${err.message}`);\n      }\n    }\n\n    return results.join('\\n');\n  };\n\n  const testRowLevelSecurity = async () => {\n    const { data: profiles, error: profilesError } = await supabase\n      .from('user_profiles')\n      .select('id, email')\n      .limit(5);\n\n    const { data: rewards, error: rewardsError } = await supabase\n      .from('rewards')\n      .select('reward_id, name')\n      .limit(5);\n\n    let result = '';\n    if (profilesError) {\n      result += `user_profiles RLS: ❌ ${profilesError.message}\\n`;\n    } else {\n      result += `user_profiles RLS: ✅ Found ${profiles?.length || 0} profiles\\n`;\n    }\n\n    if (rewardsError) {\n      result += `rewards RLS: ❌ ${rewardsError.message}\\n`;\n    } else {\n      result += `rewards RLS: ✅ Found ${rewards?.length || 0} rewards\\n`;\n    }\n\n    return result;\n  };\n\n  const testUserProfile = async () => {\n    if (!user) {\n      return 'No authenticated user';\n    }\n\n    const { data: profile, error } = await supabase\n      .from('user_profiles')\n      .select('*')\n      .eq('id', user.id)\n      .single();\n\n    if (error) throw error;\n    return `Profile loaded: ${profile.email} (WNGS: ${profile.wings_balance})`;\n  };\n\n  const testRewards = async () => {\n    const { data: rewards, error } = await supabase\n      .from('rewards')\n      .select('reward_id, name, category, rarity')\n      .limit(10);\n\n    if (error) throw error;\n    return `Found ${rewards?.length || 0} rewards:\\n${rewards?.map(r => `- ${r.name} (${r.category}, ${r.rarity})`).join('\\n')}`;\n  };\n\n  const testUserCloset = async () => {\n    if (!user) {\n      return 'No authenticated user';\n    }\n\n    const { data: closet, error } = await supabase\n      .from('user_closet')\n      .select('*')\n      .eq('user_id', user.id)\n      .order('earned_date', { ascending: false });\n\n    if (error) throw error;\n    return `User closet: ${closet?.length || 0} items`;\n  };\n\n  const testRealTime = async () => {\n    return new Promise((resolve) => {\n      const channel = supabase\n        .channel('test-channel')\n        .on('postgres_changes', \n          { event: 'INSERT', schema: 'public', table: 'user_activity' },\n          (payload) => {\n            resolve('Real-time subscription working');\n          }\n        )\n        .subscribe();\n\n      // Timeout after 3 seconds\n      setTimeout(() => {\n        channel.unsubscribe();\n        resolve('Real-time subscription established (no events received)');\n      }, 3000);\n    });\n  };\n\n  const runAllTests = async () => {\n    setRunning(true);\n    setOverallStatus('running');\n\n    const tests = [\n      { name: 'Basic Connection', fn: testBasicConnection },\n      { name: 'Authentication', fn: testAuthentication },\n      { name: 'Database Tables', fn: testDatabaseTables },\n      { name: 'Row Level Security', fn: testRowLevelSecurity },\n      { name: 'User Profile', fn: testUserProfile },\n      { name: 'Rewards', fn: testRewards },\n      { name: 'User Closet', fn: testUserCloset },\n      { name: 'Real-time', fn: testRealTime }\n    ];\n\n    let passedTests = 0;\n    for (const test of tests) {\n      const success = await runTest(test.name, test.fn);\n      if (success) passedTests++;\n    }\n\n    setOverallStatus(passedTests === tests.length ? 'success' : 'error');\n    setRunning(false);\n  };\n\n  const clearResults = () => {\n    setTestResults({});\n    setOverallStatus('idle');\n  };\n\n  useEffect(() => {\n    // Auto-run basic tests when component mounts\n    if (!authLoading) {\n      runTest('Basic Connection', testBasicConnection);\n      runTest('Authentication', testAuthentication);\n    }\n  }, [authLoading]);\n\n  return (\n    <TestContainer>\n      <h2 style={{ color: '#FFB000', marginBottom: '20px' }}>\n        🦋 Supabase Connection Test\n      </h2>\n\n      <div style={{ marginBottom: '20px' }}>\n        <Button onClick={runAllTests} disabled={running}>\n          {running ? 'Running Tests...' : 'Run All Tests'}\n        </Button>\n        <Button onClick={clearResults} disabled={running}>\n          Clear Results\n        </Button>\n      </div>\n\n      <div style={{ marginBottom: '20px', padding: '10px', background: 'rgba(0,0,0,0.3)', borderRadius: '8px' }}>\n        <strong>Auth Status:</strong> {authLoading ? 'Loading...' : user ? `Authenticated (${user.email})` : 'Not authenticated'}\n        <br />\n        <strong>Profile:</strong> {profile ? `Loaded (WNGS: ${profile.wings_balance})` : 'Not loaded'}\n      </div>\n\n      {Object.entries(testResults).map(([testName, result]) => (\n        <TestSection key={testName} status={result.status}>\n          <TestTitle>\n            <StatusIndicator status={result.status} />\n            {testName}\n          </TestTitle>\n          <TestResult status={result.status}>\n            {result.message}\n          </TestResult>\n        </TestSection>\n      ))}\n\n      {Object.keys(testResults).length > 0 && (\n        <TestSection status={overallStatus}>\n          <TestTitle>\n            <StatusIndicator status={overallStatus} />\n            Overall Status\n          </TestTitle>\n          <TestResult status={overallStatus}>\n            {overallStatus === 'success' && 'All tests passed! ✅'}\n            {overallStatus === 'error' && 'Some tests failed. Check the results above. ❌'}\n            {overallStatus === 'running' && 'Tests are running... ⏳'}\n          </TestResult>\n        </TestSection>\n      )}\n    </TestContainer>\n  );\n};\n\nexport default SupabaseConnectionTest; ","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { enhancedSecurity } from '../utils/enhancedSecurity';\nimport GlassCard from './GlassCard';\nimport GlowButton from './GlowButton';\n\nconst DashboardContainer = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst DashboardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 2rem;\n  margin-bottom: 2rem;\n`;\n\nconst SecurityCard = styled(GlassCard)`\n  padding: 1.5rem;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ThreatLevelIndicator = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 4px;\n  background: ${({ level }) => {\n    switch (level) {\n      case 'CRITICAL': return 'linear-gradient(90deg, #ff4757, #ff3838)';\n      case 'HIGH': return 'linear-gradient(90deg, #ffa502, #ff6348)';\n      case 'MEDIUM': return 'linear-gradient(90deg, #ffb142, #ffa502)';\n      case 'LOW': return 'linear-gradient(90deg, #2ed573, #7bed9f)';\n      default: return 'linear-gradient(90deg, #2ed573, #7bed9f)';\n    }\n  }};\n`;\n\nconst MetricValue = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.accent.gold};\n  margin-bottom: 0.5rem;\n`;\n\nconst MetricLabel = styled.div`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst AlertList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst AlertItem = styled.div`\n  padding: 1rem;\n  margin-bottom: 1rem;\n  border-radius: 8px;\n  background: ${({ severity }) => {\n    switch (severity) {\n      case 'HIGH': return 'rgba(255, 71, 87, 0.1)';\n      case 'MEDIUM': return 'rgba(255, 165, 2, 0.1)';\n      case 'LOW': return 'rgba(46, 213, 115, 0.1)';\n      default: return 'rgba(116, 125, 136, 0.1)';\n    }\n  }};\n  border-left: 4px solid ${({ severity }) => {\n    switch (severity) {\n      case 'HIGH': return '#ff4757';\n      case 'MEDIUM': return '#ffa502';\n      case 'LOW': return '#2ed573';\n      default: return '#747d88';\n    }\n  }};\n`;\n\nconst AlertHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n`;\n\nconst AlertType = styled.div`\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst AlertTime = styled.div`\n  font-size: 0.8rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst AlertData = styled.div`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin-top: 0.5rem;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nconst StatusIndicator = styled.div`\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${({ status }) => status === 'active' ? '#2ed573' : '#ff4757'};\n  margin-right: 0.5rem;\n`;\n\nconst SecurityDashboard = () => {\n  const [securityStatus, setSecurityStatus] = useState(null);\n  const [auditData, setAuditData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [refreshInterval, setRefreshInterval] = useState(null);\n\n  useEffect(() => {\n    loadSecurityData();\n    \n    // Set up auto-refresh every 30 seconds\n    const interval = setInterval(loadSecurityData, 30000);\n    setRefreshInterval(interval);\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, []);\n\n  const loadSecurityData = async () => {\n    try {\n      setLoading(true);\n      \n      // Get security status\n      const status = enhancedSecurity.getSecurityStatus();\n      setSecurityStatus(status);\n      \n      // Get comprehensive audit data\n      const audit = enhancedSecurity.auditSecurity();\n      setAuditData(audit);\n      \n    } catch (error) {\n      console.error('Error loading security data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAcknowledgeAlert = (alertId) => {\n    enhancedSecurity.acknowledgeAlert(alertId);\n    loadSecurityData(); // Refresh data\n  };\n\n  const handleCleanup = () => {\n    enhancedSecurity.cleanup();\n    loadSecurityData(); // Refresh data\n  };\n\n  const formatTimestamp = (timestamp) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  const getThreatLevelColor = (level) => {\n    switch (level) {\n      case 'CRITICAL': return '#ff4757';\n      case 'HIGH': return '#ff6348';\n      case 'MEDIUM': return '#ffa502';\n      case 'LOW': return '#2ed573';\n      default: return '#747d88';\n    }\n  };\n\n  if (loading) {\n    return (\n      <DashboardContainer>\n        <SecurityCard>\n          <div>Loading security dashboard...</div>\n        </SecurityCard>\n      </DashboardContainer>\n    );\n  }\n\n  return (\n    <DashboardContainer>\n      <h1 style={{ color: '#FFB000', marginBottom: '2rem' }}>\n        Security Dashboard\n      </h1>\n\n      {/* Threat Level Overview */}\n      <SecurityCard style={{ marginBottom: '2rem' }}>\n        <ThreatLevelIndicator level={securityStatus?.threatLevel} />\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <div>\n            <MetricValue style={{ color: getThreatLevelColor(securityStatus?.threatLevel) }}>\n              {securityStatus?.threatLevel || 'UNKNOWN'}\n            </MetricValue>\n            <MetricLabel>Current Threat Level</MetricLabel>\n          </div>\n          <div style={{ textAlign: 'right' }}>\n            <MetricValue>{securityStatus?.alerts?.length || 0}</MetricValue>\n            <MetricLabel>Active Alerts</MetricLabel>\n          </div>\n        </div>\n      </SecurityCard>\n\n      {/* Security Metrics Grid */}\n      <DashboardGrid>\n        {/* QR Code Security */}\n        <SecurityCard>\n          <MetricValue>{auditData?.qrStatistics?.totalScans || 0}</MetricValue>\n          <MetricLabel>Total QR Scans</MetricLabel>\n          <div style={{ marginTop: '1rem', fontSize: '0.9rem' }}>\n            <div>Blocked Codes: {auditData?.qrStatistics?.blockedCodes || 0}</div>\n            <div>Unique Users: {auditData?.qrStatistics?.uniqueUsers || 0}</div>\n            <div>Cached Verifications: {auditData?.qrStatistics?.cachedVerifications || 0}</div>\n          </div>\n        </SecurityCard>\n\n        {/* Session Management */}\n        <SecurityCard>\n          <MetricValue>{auditData?.sessionStatistics?.activeSessions || 0}</MetricValue>\n          <MetricLabel>Active Sessions</MetricLabel>\n          <div style={{ marginTop: '1rem', fontSize: '0.9rem' }}>\n            <div>Unique Users: {auditData?.sessionStatistics?.uniqueUsers || 0}</div>\n            <div>Avg Session Age: {Math.round(auditData?.sessionStatistics?.averageSessionAge / 1000 / 60)}m</div>\n          </div>\n        </SecurityCard>\n\n        {/* Security Events */}\n        <SecurityCard>\n          <MetricValue>{securityStatus?.metrics?.securityAlerts || 0}</MetricValue>\n          <MetricLabel>Security Alerts</MetricLabel>\n          <div style={{ marginTop: '1rem', fontSize: '0.9rem' }}>\n            <div>Suspicious Activities: {securityStatus?.metrics?.suspiciousActivities || 0}</div>\n            <div>Blocked Attempts: {securityStatus?.metrics?.blockedAttempts || 0}</div>\n            <div>Failed Scans: {securityStatus?.metrics?.failedScans || 0}</div>\n          </div>\n        </SecurityCard>\n\n        {/* System Health */}\n        <SecurityCard>\n          <MetricValue>\n            <StatusIndicator status=\"active\" />\n            Healthy\n          </MetricValue>\n          <MetricLabel>System Status</MetricLabel>\n          <div style={{ marginTop: '1rem', fontSize: '0.9rem' }}>\n            <div>Input Validation: <StatusIndicator status=\"active\" /> Active</div>\n            <div>RBAC System: <StatusIndicator status=\"active\" /> Active</div>\n            <div>Rate Limiting: <StatusIndicator status=\"active\" /> Active</div>\n          </div>\n        </SecurityCard>\n      </DashboardGrid>\n\n      {/* Security Alerts */}\n      <SecurityCard>\n        <h3 style={{ marginBottom: '1rem', color: '#FFB000' }}>Recent Security Alerts</h3>\n        <AlertList>\n          {securityStatus?.alerts?.length > 0 ? (\n            securityStatus.alerts.map((alert) => (\n              <AlertItem key={alert.id} severity={alert.severity}>\n                <AlertHeader>\n                  <AlertType>{alert.type}</AlertType>\n                  <AlertTime>{formatTimestamp(alert.timestamp)}</AlertTime>\n                </AlertHeader>\n                <AlertData>\n                  {JSON.stringify(alert.data, null, 2)}\n                </AlertData>\n                <ActionButtons>\n                  <GlowButton\n                    size=\"small\"\n                    onClick={() => handleAcknowledgeAlert(alert.id)}\n                  >\n                    Acknowledge\n                  </GlowButton>\n                </ActionButtons>\n              </AlertItem>\n            ))\n          ) : (\n            <div style={{ textAlign: 'center', color: '#747d88', padding: '2rem' }}>\n              No active security alerts\n            </div>\n          )}\n        </AlertList>\n      </SecurityCard>\n\n      {/* Action Buttons */}\n      <div style={{ marginTop: '2rem', display: 'flex', gap: '1rem' }}>\n        <GlowButton onClick={loadSecurityData}>\n          Refresh Data\n        </GlowButton>\n        <GlowButton onClick={handleCleanup}>\n          Run Cleanup\n        </GlowButton>\n      </div>\n\n      {/* Detailed Audit Information */}\n      <SecurityCard style={{ marginTop: '2rem' }}>\n        <h3 style={{ marginBottom: '1rem', color: '#FFB000' }}>System Audit</h3>\n        <div style={{ fontSize: '0.9rem', lineHeight: '1.6' }}>\n          <div><strong>Security Events:</strong> {auditData?.securitySystem?.securityEvents || 0}</div>\n          <div><strong>Input Validation Rate Limits:</strong> {auditData?.inputValidation?.rateLimits || 0}</div>\n          <div><strong>Active Users:</strong> {auditData?.inputValidation?.activeUsers || 0}</div>\n          <div><strong>RBAC Roles:</strong> {auditData?.rbac?.roles ? Object.keys(auditData.rbac.roles).length : 0}</div>\n          <div><strong>Access Log Entries:</strong> {auditData?.rbac?.accessLogEntries || 0}</div>\n        </div>\n      </SecurityCard>\n    </DashboardContainer>\n  );\n};\n\nexport default SecurityDashboard; ","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { adminManager, quickAdmin, ADMIN_ROLES, ROLE_DISPLAY } from '../utils/adminManager';\nimport { useAuth } from '../hooks/useAuth';\nimport GlassCard from './GlassCard';\nimport GlowButton from './GlowButton';\n\nconst Container = styled.div`\n  padding: 1rem;\n`;\n\nconst Section = styled(GlassCard)`\n  margin-bottom: 2rem;\n  padding: 1.5rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-family: ${({ theme }) => theme.typography.fontFamily.heading};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0 0 1rem 0;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  gap: 1rem;\n  align-items: flex-end;\n  margin-bottom: 1rem;\n  flex-wrap: wrap;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  min-width: 200px;\n`;\n\nconst Label = styled.label`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-weight: 500;\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 2px solid rgba(255, 176, 0, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.05);\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: 0.9rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #FFB000;\n    box-shadow: 0 0 0 3px rgba(255, 176, 0, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 2px solid rgba(255, 176, 0, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.05);\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  \n  &:focus {\n    outline: none;\n    border-color: #FFB000;\n    box-shadow: 0 0 0 3px rgba(255, 176, 0, 0.1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nconst QuickButton = styled.button`\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 6px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  \n  &:hover {\n    transform: translateY(-1px);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst MantisButton = styled(QuickButton)`\n  background: linear-gradient(135deg, #10B981 0%, #059669 100%);\n  color: white;\n  \n  &:hover {\n    background: linear-gradient(135deg, #059669 0%, #047857 100%);\n  }\n`;\n\nconst DragonflyButton = styled(QuickButton)`\n  background: linear-gradient(135deg, #7F3FBF 0%, #6B21A8 100%);\n  color: white;\n  \n  &:hover {\n    background: linear-gradient(135deg, #6B21A8 0%, #581C87 100%);\n  }\n`;\n\nconst WaspButton = styled(QuickButton)`\n  background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);\n  color: white;\n  \n  &:hover {\n    background: linear-gradient(135deg, #D97706 0%, #B45309 100%);\n  }\n`;\n\nconst ChrysalisButton = styled(QuickButton)`\n  background: linear-gradient(135deg, #6B7280 0%, #4B5563 100%);\n  color: white;\n  \n  &:hover {\n    background: linear-gradient(135deg, #4B5563 0%, #374151 100%);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 1rem;\n  border-radius: 8px;\n  margin: 1rem 0;\n  font-weight: 500;\n  \n  ${({ type }) => type === 'success' && `\n    background: rgba(16, 185, 129, 0.1);\n    border: 1px solid rgba(16, 185, 129, 0.3);\n    color: #10B981;\n  `}\n  \n  ${({ type }) => type === 'error' && `\n    background: rgba(239, 68, 68, 0.1);\n    border: 1px solid rgba(239, 68, 68, 0.3);\n    color: #EF4444;\n  `}\n  \n  ${({ type }) => type === 'info' && `\n    background: rgba(59, 130, 246, 0.1);\n    border: 1px solid rgba(59, 130, 246, 0.3);\n    color: #3B82F6;\n  `}\n`;\n\nconst AdminList = styled.div`\n  display: grid;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nconst AdminCard = styled(GlassCard)`\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst AdminInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  flex: 1;\n`;\n\nconst RoleBadge = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  background: ${({ role }) => {\n    switch (role) {\n      case 'dragonfly': return 'linear-gradient(135deg, #7F3FBF 0%, #6B21A8 100%)';\n      case 'mantis': return 'linear-gradient(135deg, #10B981 0%, #059669 100%)';\n      case 'wasp': return 'linear-gradient(135deg, #F59E0B 0%, #D97706 100%)';\n      default: return 'linear-gradient(135deg, #6B7280 0%, #4B5563 100%)';\n    }\n  }};\n  color: white;\n`;\n\nconst UserDetails = styled.div`\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-weight: 600;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.25rem;\n`;\n\nconst UserEmail = styled.div`\n  font-size: 0.8rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nconst StatCard = styled.div`\n  padding: 1rem;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 176, 0, 0.2);\n  text-align: center;\n`;\n\nconst StatNumber = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #FFB000;\n  margin-bottom: 0.25rem;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst LoadingSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  color: #FFB000;\n`;\n\nconst AdminUserManager = () => {\n  const { user } = useAuth();\n  const [userId, setUserId] = useState('');\n  const [selectedRole, setSelectedRole] = useState('mantis');\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [checkUserId, setCheckUserId] = useState('');\n  const [userStatus, setUserStatus] = useState(null);\n\n  // Check if current user has admin permissions\n  const currentUserRole = user?.role || 'chrysalis';\n  const canManageAdmins = adminManager.hasPermission(currentUserRole, 'mantis:users:manage') || \n                         adminManager.hasPermission(currentUserRole, 'dragonfly:admins:manage');\n\n  useEffect(() => {\n    if (canManageAdmins) {\n      loadAdmins();\n      loadStats();\n    }\n  }, [canManageAdmins]);\n\n  const loadAdmins = async () => {\n    setLoading(true);\n    try {\n      const result = await adminManager.getAllAdmins();\n      if (result.success) {\n        setAdmins(result.admins);\n      } else {\n        setMessage({ type: 'error', text: result.error });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Failed to load admins' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadStats = async () => {\n    try {\n      const result = await adminManager.getAdminStats();\n      if (result.success) {\n        setStats(result.stats);\n      }\n    } catch (error) {\n      console.error('Failed to load stats:', error);\n    }\n  };\n\n  const handleMakeAdmin = async (e) => {\n    e.preventDefault();\n    if (!userId.trim()) {\n      setMessage({ type: 'error', text: 'Please enter a user ID' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      const result = await adminManager.makeAdmin(userId, selectedRole);\n      \n      if (result.success) {\n        setMessage({ \n          type: 'success', \n          text: `✅ User transformed into ${result.roleDisplay.emoji} ${result.roleDisplay.name}` \n        });\n        setUserId('');\n        loadAdmins();\n        loadStats();\n      } else {\n        setMessage({ type: 'error', text: result.error });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Failed to transform user' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleQuickTransform = async (targetRole) => {\n    if (!userId.trim()) {\n      setMessage({ type: 'error', text: 'Please enter a user ID' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      let result;\n      switch (targetRole) {\n        case 'mantis':\n          result = await quickAdmin.mantis(userId);\n          break;\n        case 'dragonfly':\n          result = await quickAdmin.dragonfly(userId);\n          break;\n        case 'wasp':\n          result = await quickAdmin.wasp(userId);\n          break;\n        case 'chrysalis':\n          result = await quickAdmin.remove(userId);\n          break;\n        default:\n          result = { success: false, error: 'Invalid role' };\n      }\n\n      if (result.success) {\n        setMessage({ \n          type: 'success', \n          text: `✅ User transformed into ${result.roleDisplay.emoji} ${result.roleDisplay.name}` \n        });\n        setUserId('');\n        loadAdmins();\n        loadStats();\n      } else {\n        setMessage({ type: 'error', text: result.error });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Failed to transform user' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCheckStatus = async () => {\n    if (!checkUserId.trim()) {\n      setMessage({ type: 'error', text: 'Please enter a user ID to check' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      const result = await adminManager.checkAdminStatus(checkUserId);\n      \n      if (result.success) {\n        setUserStatus(result);\n        setMessage({ type: 'info', text: 'User status retrieved successfully' });\n      } else {\n        setMessage({ type: 'error', text: result.error });\n        setUserStatus(null);\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Failed to check user status' });\n      setUserStatus(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!canManageAdmins) {\n    return (\n      <Container>\n        <Section>\n          <SectionTitle>🚫 Access Denied</SectionTitle>\n          <Message type=\"error\">\n            You need mantis (admin) or dragonfly (super admin) permissions to manage users.\n            Current role: {ROLE_DISPLAY[currentUserRole]?.emoji} {ROLE_DISPLAY[currentUserRole]?.name}\n          </Message>\n        </Section>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      {/* Transform User Section */}\n      <Section>\n        <SectionTitle>🔄 Transform User</SectionTitle>\n        \n        <Form onSubmit={handleMakeAdmin}>\n          <FormGroup>\n            <Label>User ID</Label>\n            <Input\n              type=\"text\"\n              value={userId}\n              onChange={(e) => setUserId(e.target.value)}\n              placeholder=\"Enter user ID (UUID or test-*)\"\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label>Target Role</Label>\n            <Select\n              value={selectedRole}\n              onChange={(e) => setSelectedRole(e.target.value)}\n            >\n              <option value=\"mantis\">🦗 Mantis (Admin)</option>\n              <option value=\"dragonfly\">🐉 Dragonfly (Super Admin)</option>\n              <option value=\"wasp\">🐝 Wasp (Moderator)</option>\n              <option value=\"chrysalis\">🦋 Chrysalis (Regular User)</option>\n            </Select>\n          </FormGroup>\n          \n          <GlowButton type=\"submit\" disabled={loading}>\n            {loading ? 'Transforming...' : 'Transform User'}\n          </GlowButton>\n        </Form>\n\n        <ButtonGroup>\n          <MantisButton \n            onClick={() => handleQuickTransform('mantis')}\n            disabled={loading || !userId.trim()}\n          >\n            🦗 Make Mantis\n          </MantisButton>\n          \n          <DragonflyButton \n            onClick={() => handleQuickTransform('dragonfly')}\n            disabled={loading || !userId.trim()}\n          >\n            🐉 Make Dragonfly\n          </DragonflyButton>\n          \n          <WaspButton \n            onClick={() => handleQuickTransform('wasp')}\n            disabled={loading || !userId.trim()}\n          >\n            🐝 Make Wasp\n          </WaspButton>\n          \n          <ChrysalisButton \n            onClick={() => handleQuickTransform('chrysalis')}\n            disabled={loading || !userId.trim()}\n          >\n            🦋 Make Chrysalis\n          </ChrysalisButton>\n        </ButtonGroup>\n\n        {message && (\n          <Message type={message.type}>\n            {message.text}\n          </Message>\n        )}\n      </Section>\n\n      {/* Check User Status Section */}\n      <Section>\n        <SectionTitle>🔍 Check User Status</SectionTitle>\n        \n        <Form onSubmit={(e) => { e.preventDefault(); handleCheckStatus(); }}>\n          <FormGroup>\n            <Label>User ID</Label>\n            <Input\n              type=\"text\"\n              value={checkUserId}\n              onChange={(e) => setCheckUserId(e.target.value)}\n              placeholder=\"Enter user ID to check\"\n            />\n          </FormGroup>\n          \n          <GlowButton type=\"submit\" disabled={loading}>\n            {loading ? 'Checking...' : 'Check Status'}\n          </GlowButton>\n        </Form>\n\n        {userStatus && (\n          <div style={{ marginTop: '1rem' }}>\n            <h4>User Status:</h4>\n            <div style={{ padding: '1rem', background: 'rgba(255,255,255,0.05)', borderRadius: '8px' }}>\n              <div><strong>User ID:</strong> {userStatus.userId}</div>\n              <div><strong>Role:</strong> {userStatus.roleDisplay.emoji} {userStatus.roleDisplay.name} ({userStatus.roleDisplay.description})</div>\n              <div><strong>Email:</strong> {userStatus.userInfo.email || 'N/A'}</div>\n              <div><strong>Name:</strong> {userStatus.userInfo.fullName || userStatus.userInfo.username || 'N/A'}</div>\n              <div><strong>Is Admin:</strong> {userStatus.isAdmin ? 'Yes' : 'No'}</div>\n              <div><strong>Is Moderator:</strong> {userStatus.isModerator ? 'Yes' : 'No'}</div>\n              <div><strong>Is Super Admin:</strong> {userStatus.isSuperAdmin ? 'Yes' : 'No'}</div>\n            </div>\n          </div>\n        )}\n      </Section>\n\n      {/* Admin Statistics */}\n      {stats && (\n        <Section>\n          <SectionTitle>📊 Admin Statistics</SectionTitle>\n          <StatsGrid>\n            <StatCard>\n              <StatNumber>{stats.chrysalis}</StatNumber>\n              <StatLabel>🦋 Chrysalis</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatNumber>{stats.wasp}</StatNumber>\n              <StatLabel>🐝 Wasp</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatNumber>{stats.mantis}</StatNumber>\n              <StatLabel>🦗 Mantis</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatNumber>{stats.dragonfly}</StatNumber>\n              <StatLabel>🐉 Dragonfly</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatNumber>{stats.total}</StatNumber>\n              <StatLabel>📊 Total Users</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatNumber>{stats.wasp + stats.mantis + stats.dragonfly}</StatNumber>\n              <StatLabel>👑 Total Admins</StatLabel>\n            </StatCard>\n          </StatsGrid>\n        </Section>\n      )}\n\n      {/* Admin List */}\n      <Section>\n        <SectionTitle>📋 Admin List</SectionTitle>\n        \n        {loading ? (\n          <LoadingSpinner>Loading admins...</LoadingSpinner>\n        ) : admins.length === 0 ? (\n          <Message type=\"info\">\n            🦋 No admins found. All users are chrysalis (regular users).\n          </Message>\n        ) : (\n          <AdminList>\n            {admins.map((admin) => (\n              <AdminCard key={admin.id}>\n                <AdminInfo>\n                  <RoleBadge role={admin.role}>\n                    {admin.roleDisplay.emoji} {admin.roleDisplay.name}\n                  </RoleBadge>\n                  <UserDetails>\n                    <UserName>{admin.fullName || admin.username || 'Unknown User'}</UserName>\n                    <UserEmail>{admin.email || 'No email'}</UserEmail>\n                  </UserDetails>\n                </AdminInfo>\n                <div style={{ fontSize: '0.8rem', color: '#888' }}>\n                  {new Date(admin.created_at).toLocaleDateString()}\n                </div>\n              </AdminCard>\n            ))}\n          </AdminList>\n        )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default AdminUserManager; ","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useAuth } from '../hooks/useAuth';\nimport { useAdmin } from '../hooks/useAdmin';\nimport { adminManager, ROLE_DISPLAY } from '../utils/adminManager';\nimport SupabaseConnectionTest from '../components/SupabaseConnectionTest';\nimport SecurityDashboard from '../components/SecurityDashboard';\nimport AdminUserManager from '../components/AdminUserManager';\nimport GlassCard from '../components/GlassCard';\nimport GlowButton from '../components/GlowButton';\n\nconst AdminScreen = () => {\n  const { user } = useAuth();\n  const { users, rewards, categories, recentActivity, stats, loading, error, isAdmin } = useAdmin();\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [campaigns, setCampaigns] = useState([]);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  \n  // Modal states\n  const [showCreateRewardModal, setShowCreateRewardModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [showAwardWingsModal, setShowAwardWingsModal] = useState(false);\n  const [showUserDetailsModal, setShowUserDetailsModal] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  \n  // Form states\n  const [newReward, setNewReward] = useState({\n    name: '',\n    category: '',\n    rarity: 'common',\n    wings_value: 0,\n    season: 'Spring 2025'\n  });\n  const [newUser, setNewUser] = useState({\n    name: '',\n    email: '',\n    tier: 'bronze',\n    wings: 0,\n    items: 0\n  });\n  const [wingsAmount, setWingsAmount] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Enhanced Mock Data\n  const mockCategories = [\n    { name: 'jackets', enabled: true, itemCount: 45, scanCount: 234, revenue: 12500 },\n    { name: 'tops', enabled: true, itemCount: 67, scanCount: 189, revenue: 8900 },\n    { name: 'bottoms', enabled: false, itemCount: 23, scanCount: 45, revenue: 3200 },\n    { name: 'accessories', enabled: true, itemCount: 89, scanCount: 456, revenue: 15600 },\n    { name: 'headwear', enabled: true, itemCount: 34, scanCount: 123, revenue: 5400 },\n    { name: 'badges', enabled: true, itemCount: 12, scanCount: 567, revenue: 2800 },\n    { name: 'tokens', enabled: false, itemCount: 8, scanCount: 34, revenue: 1200 }\n  ];\n\n  const mockUsers = [\n    { \n      id: 1, name: 'Alex Chen', email: 'alex@example.com', wings: 1250, items: 24, \n      status: 'active', joinDate: '2025-03-01', lastScan: '2025-03-20', totalScans: 47, tier: 'gold'\n    },\n    { \n      id: 2, name: 'Jordan Smith', email: 'jordan@example.com', wings: 890, items: 18, \n      status: 'active', joinDate: '2025-03-05', lastScan: '2025-03-19', totalScans: 32, tier: 'silver'\n    },\n    { \n      id: 3, name: 'Taylor Wilson', email: 'taylor@example.com', wings: 2340, items: 45, \n      status: 'active', joinDate: '2025-02-15', lastScan: '2025-03-20', totalScans: 78, tier: 'platinum'\n    },\n    { \n      id: 4, name: 'Morgan Davis', email: 'morgan@example.com', wings: 567, items: 12, \n      status: 'banned', joinDate: '2025-03-10', lastScan: '2025-03-15', totalScans: 15, tier: 'bronze'\n    }\n  ];\n\n  const mockCampaigns = [\n    { id: 1, name: 'QR Scanning System', type: 'system', active: true, description: 'Enable or disable all QR code scanning globally' },\n    { id: 2, name: 'Spring 2025 Campaign', type: 'seasonal', active: true, description: 'Main seasonal campaign', endDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000) },\n    { id: 3, name: 'Pop-up Event Rewards', type: 'event', active: false, description: 'Special rewards for in-person events' },\n    { id: 4, name: 'Summer Preview', type: 'preview', active: true, description: 'Early access to summer collection' }\n  ];\n\n  const mockRecentActivity = [\n    { id: 1, user: 'alex@papillon.com', action: 'QR Scan', reward: 'Spring Jacket #037', time: '2 min ago', status: 'success' },\n    { id: 2, user: 'sarah@gmail.com', action: 'QR Scan', reward: 'Pop-up Stamp', time: '5 min ago', status: 'success' },\n    { id: 3, user: 'mike@example.com', action: 'QR Scan', reward: 'Invalid Code', time: '8 min ago', status: 'failed' },\n    { id: 4, user: 'emma@papillon.com', action: 'Manual Grant', reward: 'Gold Chain #003', time: '12 min ago', status: 'granted' },\n    { id: 5, user: 'john@test.com', action: 'QR Scan', reward: 'Summer Preview', time: '15 min ago', status: 'success' }\n  ];\n\n  const mockStats = {\n    totalScansToday: 247,\n    rewardsClaimed: 89,\n    activeUsers: 1234,\n    successRate: 91,\n    totalUsers: 1247,\n    totalScans: 5643,\n    totalWings: 234567,\n    activeRewards: 89,\n    dailyActiveUsers: 456,\n    conversionRate: 73.2\n  };\n\n  useEffect(() => {\n    // Real data is loaded by useAdmin hook\n    setCampaigns(mockCampaigns); // Keep campaigns mock for now\n  }, []);\n\n  // Navigation items\n  const navItems = [\n    { id: 'dashboard', icon: '📊', label: 'Dashboard' },\n    { id: 'campaigns', icon: '🎯', label: 'Campaigns' },\n    { id: 'users', icon: '👥', label: 'Users' },\n    { id: 'admin-management', icon: '🦋', label: 'Admin Management' },\n    { id: 'rewards', icon: '🎁', label: 'Rewards' },\n    { id: 'categories', icon: '📱', label: 'Categories' },\n    { id: 'analytics', icon: '📈', label: 'Analytics' },\n    { id: 'security', icon: '🔒', label: 'Security' },\n    { id: 'connection', icon: '🔗', label: 'Connection Test' }\n  ];\n\n  // Handlers\n  const toggleCampaign = (campaignId) => {\n    setCampaigns(prev => \n      prev.map(campaign => \n        campaign.id === campaignId \n          ? { ...campaign, active: !campaign.active }\n          : campaign\n      )\n    );\n  };\n\n  const toggleCategory = (categoryName) => {\n    // TODO: Implement real category toggle with useAdmin hook\n    console.log('Toggle category:', categoryName);\n  };\n\n  const createReward = () => {\n    if (!newReward.name || !newReward.category) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    \n    // TODO: Implement real reward creation with useAdmin hook\n    console.log('Create reward:', newReward);\n    setShowCreateRewardModal(false);\n    setNewReward({ name: '', category: '', rarity: 'common', wings_value: 0, season: 'Spring 2025' });\n    alert('Reward creation will be implemented with real data');\n  };\n\n  const addUser = () => {\n    if (!newUser.name || !newUser.email) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    \n    // TODO: Implement real user creation with useAdmin hook\n    console.log('Add user:', newUser);\n    setShowAddUserModal(false);\n    setNewUser({ name: '', email: '', tier: 'bronze', wings: 0, items: 0 });\n    alert('User creation will be implemented with real data');\n  };\n\n  const awardWings = () => {\n    if (!selectedUser || wingsAmount <= 0) return;\n    \n    // TODO: Implement real wings award with useAdmin hook\n    console.log('Award wings:', { user: selectedUser, amount: wingsAmount });\n    setShowAwardWingsModal(false);\n    setWingsAmount(0);\n    alert(`Wings award will be implemented with real data`);\n  };\n\n  const filteredUsers = users.filter(user => \n    user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Check if we're on desktop\n  const isDesktop = window.innerWidth >= 1024;\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #1a1a1a 0%, #000000 100%)',\n      color: '#ffffff',\n      fontFamily: 'Space Grotesk, sans-serif',\n      position: 'relative'\n    }}>\n      {/* Mobile Menu Toggle */}\n      {!isDesktop && (\n        <button\n          style={{\n            display: 'block',\n            position: 'fixed',\n            top: '1rem',\n            left: '1rem',\n            zIndex: 50,\n            background: 'rgba(76, 28, 140, 0.8)',\n            border: 'none',\n            color: 'white',\n            padding: '0.5rem',\n            borderRadius: '8px',\n            fontSize: '1.2rem',\n            cursor: 'pointer'\n          }}\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n        >\n          ☰\n        </button>\n      )}\n\n      {/* Sidebar */}\n      <div style={{\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        height: '100vh',\n        width: '280px',\n        background: 'linear-gradient(180deg, rgba(76, 28, 140, 0.2) 0%, rgba(0, 0, 0, 0.5) 100%)',\n        backdropFilter: 'blur(20px)',\n        borderRight: '1px solid rgba(255, 176, 0, 0.3)',\n        zIndex: 40,\n        transform: sidebarOpen || isDesktop ? 'translateX(0)' : 'translateX(-100%)',\n        transition: 'transform 0.3s ease'\n      }}>\n        \n        {/* Logo */}\n        <div style={{\n          padding: '2rem',\n          textAlign: 'center',\n          borderBottom: '1px solid rgba(255, 176, 0, 0.2)'\n        }}>\n          <h1 style={{\n            fontSize: '1.5rem',\n            fontWeight: '700',\n            background: 'linear-gradient(135deg, #FFB000 0%, #7F3FBF 100%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            margin: 0\n          }}>Monarch Admin</h1>\n          <p style={{\n            color: '#9E9E9E',\n            fontSize: '0.9rem',\n            marginTop: '0.5rem'\n          }}>Dashboard v2.0</p>\n        </div>\n\n        {/* Navigation */}\n        <nav style={{ padding: '1rem' }}>\n          {navItems.map((item) => (\n            <button\n              key={item.id}\n              onClick={() => {\n                setActiveTab(item.id);\n                if (!isDesktop) setSidebarOpen(false);\n              }}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '1rem',\n                padding: '1rem',\n                width: '100%',\n                background: activeTab === item.id ? 'rgba(255, 176, 0, 0.2)' : 'none',\n                border: 'none',\n                color: activeTab === item.id ? '#FFB000' : '#ffffff',\n                textDecoration: 'none',\n                borderRadius: '12px',\n                marginBottom: '0.5rem',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease',\n                fontSize: '1rem',\n                borderLeft: activeTab === item.id ? '4px solid #FFB000' : 'none'\n              }}\n            >\n              <span style={{fontSize: '1.2rem'}}>{item.icon}</span>\n              <span>{item.label}</span>\n            </button>\n          ))}\n          \n          {/* Emergency Controls */}\n          <div style={{marginTop: '2rem', paddingTop: '1rem', borderTop: '1px solid rgba(255, 255, 255, 0.1)'}}>\n            <button style={{\n              background: 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '0.75rem 1.5rem',\n              fontWeight: '600',\n              cursor: 'pointer',\n              width: '100%',\n              marginBottom: '0.5rem'\n            }}>\n              🚨 Emergency Stop\n            </button>\n            <button style={{\n              background: 'linear-gradient(135deg, #6c757d 0%, #495057 100%)',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '0.75rem 1.5rem',\n              fontWeight: '600',\n              cursor: 'pointer',\n              width: '100%'\n            }}>\n              🔄 Restart Services\n            </button>\n          </div>\n        </nav>\n\n        {/* User Info */}\n        <div style={{\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          right: 0,\n          padding: '1rem',\n          borderTop: '1px solid rgba(255, 255, 255, 0.1)'\n        }}>\n          <div style={{display: 'flex', alignItems: 'center', gap: '0.75rem'}}>\n            <div style={{\n              width: '40px',\n              height: '40px',\n              background: 'linear-gradient(135deg, #4C1C8C 0%, #FFB000 100%)',\n              borderRadius: '50%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: '700'\n            }}>\n              A\n            </div>\n            <div>\n              <div style={{color: 'white', fontWeight: '600', fontSize: '0.9rem'}}>Admin User</div>\n              <div style={{color: '#9E9E9E', fontSize: '0.8rem'}}>admin@monarch.com</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div style={{\n        marginLeft: isDesktop ? '280px' : '0',\n        padding: '1.5rem'\n      }}>\n        {/* Header */}\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '2rem',\n          paddingBottom: '1rem',\n          borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          flexWrap: 'wrap',\n          gap: '1rem'\n        }}>\n          <h2 style={{\n            fontSize: '2rem',\n            fontWeight: '700',\n            color: '#ffffff',\n            margin: 0\n          }}>\n            {navItems.find(item => item.id === activeTab)?.label || 'Dashboard'}\n          </h2>\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '1rem'\n          }}>\n            <div style={{textAlign: 'right'}}>\n              <div style={{color: 'white', fontWeight: '600'}}>Welcome, Admin</div>\n              <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>Last login: 2 hours ago</div>\n            </div>\n            <div style={{\n              width: '48px',\n              height: '48px',\n              background: 'linear-gradient(135deg, #4C1C8C 0%, #FFB000 100%)',\n              borderRadius: '50%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: '700',\n              fontSize: '1.2rem'\n            }}>A</div>\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'dashboard' && (\n          <div>\n            {/* Stats Grid */}\n            <div style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n              gap: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <div style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n                border: '1px solid rgba(255, 176, 0, 0.3)',\n                borderRadius: '16px',\n                padding: '1.5rem',\n                backdropFilter: 'blur(20px)',\n                boxShadow: '0 0 32px 0 rgba(255,215,0,0.18)'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '1rem'\n                }}>\n                  <span style={{\n                    color: '#9E9E9E',\n                    fontSize: '0.9rem',\n                    fontWeight: '500'\n                  }}>Total Scans Today</span>\n                  <span style={{fontSize: '1.5rem'}}>📱</span>\n                </div>\n                <div style={{\n                  fontSize: '2.5rem',\n                  fontWeight: '700',\n                  color: '#FFB000',\n                  marginBottom: '0.5rem'\n                }}>{stats.totalScansToday || 0}</div>\n                <div style={{\n                  fontSize: '0.8rem',\n                  color: '#2ecc40'\n                }}>+23% from yesterday</div>\n              </div>\n\n              <div style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n                border: '1px solid rgba(255, 176, 0, 0.3)',\n                borderRadius: '16px',\n                padding: '1.5rem',\n                backdropFilter: 'blur(20px)',\n                boxShadow: '0 0 32px 0 rgba(255,215,0,0.18)'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '1rem'\n                }}>\n                  <span style={{\n                    color: '#9E9E9E',\n                    fontSize: '0.9rem',\n                    fontWeight: '500'\n                  }}>Rewards Claimed</span>\n                  <span style={{fontSize: '1.5rem'}}>🎁</span>\n                </div>\n                <div style={{\n                  fontSize: '2.5rem',\n                  fontWeight: '700',\n                  color: '#FFB000',\n                  marginBottom: '0.5rem'\n                }}>{stats.rewardsClaimed || 0}</div>\n                <div style={{\n                  fontSize: '0.8rem',\n                  color: '#2ecc40'\n                }}>+15% from yesterday</div>\n              </div>\n\n              <div style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n                border: '1px solid rgba(255, 176, 0, 0.3)',\n                borderRadius: '16px',\n                padding: '1.5rem',\n                backdropFilter: 'blur(20px)',\n                boxShadow: '0 0 32px 0 rgba(255,215,0,0.18)'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '1rem'\n                }}>\n                  <span style={{\n                    color: '#9E9E9E',\n                    fontSize: '0.9rem',\n                    fontWeight: '500'\n                  }}>Active Users</span>\n                  <span style={{fontSize: '1.5rem'}}>👥</span>\n                </div>\n                <div style={{\n                  fontSize: '2.5rem',\n                  fontWeight: '700',\n                  color: '#FFB000',\n                  marginBottom: '0.5rem'\n                }}>{stats.activeUsers?.toLocaleString() || '0'}</div>\n                <div style={{\n                  fontSize: '0.8rem',\n                  color: '#2ecc40'\n                }}>+8% from last week</div>\n              </div>\n\n              <div style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n                border: '1px solid rgba(255, 176, 0, 0.3)',\n                borderRadius: '16px',\n                padding: '1.5rem',\n                backdropFilter: 'blur(20px)',\n                boxShadow: '0 0 32px 0 rgba(255,215,0,0.18)'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '1rem'\n                }}>\n                  <span style={{\n                    color: '#9E9E9E',\n                    fontSize: '0.9rem',\n                    fontWeight: '500'\n                  }}>Success Rate</span>\n                  <span style={{fontSize: '1.5rem'}}>✅</span>\n                </div>\n                <div style={{\n                  fontSize: '2.5rem',\n                  fontWeight: '700',\n                  color: '#FFB000',\n                  marginBottom: '0.5rem'\n                }}>{stats.successRate || 0}%</div>\n                <div style={{\n                  fontSize: '0.8rem',\n                  color: '#2ecc40'\n                }}>Success rate</div>\n              </div>\n            </div>\n\n            {/* Campaign Controls */}\n            <div style={{\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n              border: '1px solid rgba(255, 176, 0, 0.3)',\n              borderRadius: '16px',\n              padding: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '1.5rem'\n              }}>Campaign Controls</h3>\n              <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem'}}>\n                {campaigns.map((campaign) => (\n                  <div key={campaign.id} style={{background: 'rgba(255, 255, 255, 0.05)', border: '1px solid rgba(255, 255, 255, 0.2)', borderRadius: '12px', padding: '1.5rem'}}>\n                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem'}}>\n                      <h4 style={{color: 'white', margin: 0}}>{campaign.name}</h4>\n                      <div \n                        style={{\n                          position: 'relative',\n                          width: '60px',\n                          height: '30px',\n                          borderRadius: '15px',\n                          cursor: 'pointer',\n                          transition: 'all 0.3s ease',\n                          background: campaign.active ? '#FFB000' : '#333'\n                        }}\n                        onClick={() => toggleCampaign(campaign.id)}\n                      >\n                        <div \n                          style={{\n                            position: 'absolute',\n                            top: '3px',\n                            left: '3px',\n                            width: '24px',\n                            height: '24px',\n                            background: 'white',\n                            borderRadius: '50%',\n                            transition: 'all 0.3s ease',\n                            transform: campaign.active ? 'translateX(30px)' : 'translateX(0)'\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <p style={{color: '#9E9E9E', fontSize: '0.9rem', marginBottom: '1rem'}}>{campaign.description}</p>\n                    {campaign.endDate && (\n                      <div style={{background: 'rgba(0, 0, 0, 0.3)', borderRadius: '8px', padding: '1rem', textAlign: 'center', marginBottom: '1rem'}}>\n                        <div style={{color: '#FFB000', fontFamily: 'monospace', fontSize: '1.2rem', fontWeight: '700'}}>\n                          02:14:37:22\n                        </div>\n                        <div style={{color: '#9E9E9E', fontSize: '0.8rem'}}>Days : Hours : Minutes : Seconds</div>\n                      </div>\n                    )}\n                    <div style={{fontWeight: '600', color: campaign.active ? '#2ecc40' : '#e74c3c'}}>\n                      {campaign.active ? '✅ ACTIVE' : '❌ INACTIVE'}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Recent Activity */}\n            <div style={{\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n              border: '1px solid rgba(255, 176, 0, 0.3)',\n              borderRadius: '16px',\n              padding: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '1.5rem'\n              }}>Recent User Activity</h3>\n              <div style={{overflowX: 'auto'}}>\n                <table style={{\n                  width: '100%',\n                  borderCollapse: 'collapse'\n                }}>\n                  <thead>\n                    <tr>\n                      <th style={{\n                        background: 'rgba(76, 28, 140, 0.3)',\n                        padding: '1rem',\n                        textAlign: 'left',\n                        fontWeight: '600',\n                        color: '#FFB000',\n                        borderBottom: '1px solid rgba(255, 255, 255, 0.1)'\n                      }}>User</th>\n                      <th style={{\n                        background: 'rgba(76, 28, 140, 0.3)',\n                        padding: '1rem',\n                        textAlign: 'left',\n                        fontWeight: '600',\n                        color: '#FFB000',\n                        borderBottom: '1px solid rgba(255, 255, 255, 0.1)'\n                      }}>Action</th>\n                      <th style={{\n                        background: 'rgba(76, 28, 140, 0.3)',\n                        padding: '1rem',\n                        textAlign: 'left',\n                        fontWeight: '600',\n                        color: '#FFB000',\n                        borderBottom: '1px solid rgba(255, 255, 255, 0.1)'\n                      }}>Reward</th>\n                      <th style={{\n                        background: 'rgba(76, 28, 140, 0.3)',\n                        padding: '1rem',\n                        textAlign: 'left',\n                        fontWeight: '600',\n                        color: '#FFB000',\n                        borderBottom: '1px solid rgba(255, 255, 255, 0.1)'\n                      }}>Time</th>\n                      <th style={{\n                        background: 'rgba(76, 28, 140, 0.3)',\n                        padding: '1rem',\n                        textAlign: 'left',\n                        fontWeight: '600',\n                        color: '#FFB000',\n                        borderBottom: '1px solid rgba(255, 255, 255, 0.1)'\n                      }}>Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {recentActivity.map((activity) => (\n                      <tr key={activity.id} style={{\n                        transition: 'background 0.2s ease'\n                      }}>\n                        <td style={{\n                          padding: '1rem',\n                          borderBottom: '1px solid rgba(255, 255, 255, 0.05)'\n                        }}>{activity.user}</td>\n                        <td style={{\n                          padding: '1rem',\n                          borderBottom: '1px solid rgba(255, 255, 255, 0.05)'\n                        }}>{activity.action}</td>\n                        <td style={{\n                          padding: '1rem',\n                          borderBottom: '1px solid rgba(255, 255, 255, 0.05)'\n                        }}>{activity.reward}</td>\n                        <td style={{\n                          padding: '1rem',\n                          borderBottom: '1px solid rgba(255, 255, 255, 0.05)',\n                          color: '#9E9E9E'\n                        }}>{activity.time}</td>\n                        <td style={{\n                          padding: '1rem',\n                          borderBottom: '1px solid rgba(255, 255, 255, 0.05)'\n                        }}>\n                          <span style={{\n                            padding: '0.25rem 0.75rem',\n                            borderRadius: '12px',\n                            fontSize: '0.8rem',\n                            fontWeight: '600',\n                            background: activity.status === 'success' ? 'rgba(46, 204, 64, 0.2)' : \n                                        activity.status === 'failed' ? 'rgba(231, 76, 60, 0.2)' : \n                                        'rgba(52, 152, 219, 0.2)',\n                            color: activity.status === 'success' ? '#2ecc40' : \n                                   activity.status === 'failed' ? '#e74c3c' : \n                                   '#3498db'\n                          }}>\n                            {activity.status.toUpperCase()}\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Users Tab */}\n        {activeTab === 'users' && (\n          <div style={{\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n            border: '1px solid rgba(255, 176, 0, 0.3)',\n            borderRadius: '16px',\n            padding: '1.5rem',\n            marginBottom: '2rem'\n          }}>\n            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1.5rem', flexWrap: 'wrap', gap: '1rem'}}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '0'\n              }}>User Management</h3>\n              <button \n                style={{\n                  background: 'linear-gradient(135deg, #4C1C8C 0%, #7F3FBF 100%)',\n                  color: 'white',\n                  border: '2px solid #FFB000',\n                  borderRadius: '8px',\n                  padding: '0.75rem 1.5rem',\n                  fontWeight: '600',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease',\n                  fontSize: '1rem'\n                }}\n                onClick={() => setShowAddUserModal(true)}\n              >\n                Add User\n              </button>\n            </div>\n            \n            <input\n              type=\"text\"\n              placeholder=\"Search users by name or email...\"\n              style={{\n                width: '100%',\n                background: 'rgba(255, 255, 255, 0.1)',\n                border: '1px solid rgba(255, 255, 255, 0.3)',\n                borderRadius: '8px',\n                padding: '0.75rem',\n                color: 'white',\n                fontSize: '1rem',\n                marginBottom: '1.5rem'\n              }}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            \n            <div style={{display: 'flex', flexDirection: 'column', gap: '1rem'}}>\n              {filteredUsers.map((user) => (\n                <div key={user.id} style={{\n                  background: 'rgba(255, 255, 255, 0.05)', \n                  border: '1px solid rgba(255, 255, 255, 0.15)', \n                  borderRadius: '12px', \n                  padding: '1rem', \n                  display: 'flex', \n                  justifyContent: 'space-between', \n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  transition: 'background 0.2s ease'\n                }}\n                onClick={() => {\n                  setSelectedUser(user);\n                  setShowUserDetailsModal(true);\n                }}\n                onMouseEnter={(e) => e.target.style.background = 'rgba(255, 255, 255, 0.1)'}\n                onMouseLeave={(e) => e.target.style.background = 'rgba(255, 255, 255, 0.05)'}\n                >\n                  <div style={{display: 'flex', alignItems: 'center', gap: '1rem', flex: 1}}>\n                    <div style={{\n                      width: '48px', \n                      height: '48px', \n                      background: 'linear-gradient(135deg, #4C1C8C 0%, #FFB000 100%)', \n                      borderRadius: '50%', \n                      display: 'flex', \n                      alignItems: 'center', \n                      justifyContent: 'center', \n                      color: 'white', \n                      fontWeight: '700'\n                    }}>\n                      {user.name.charAt(0)}\n                    </div>\n                    <div>\n                      <div style={{color: 'white', fontWeight: '600'}}>{user.name}</div>\n                      <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>{user.email}</div>\n                      <div style={{fontSize: '0.8rem', color: '#6C6C6C', display: 'flex', gap: '1rem'}}>\n                        <span>{user.wings} WINGS</span>\n                        <span>{user.items} items</span>\n                        <span style={{\n                          padding: '0.2rem 0.5rem', \n                          borderRadius: '4px',\n                          background: user.tier === 'platinum' ? 'rgba(155, 89, 182, 0.2)' : \n                                     user.tier === 'gold' ? 'rgba(241, 196, 15, 0.2)' : \n                                     user.tier === 'silver' ? 'rgba(149, 165, 166, 0.2)' : 'rgba(230, 126, 34, 0.2)',\n                          color: user.tier === 'platinum' ? '#9B59B6' : \n                                 user.tier === 'gold' ? '#F1C40F' : \n                                 user.tier === 'silver' ? '#95A5A6' : '#E67E22'\n                        }}>\n                          {user.tier.toUpperCase()}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div style={{display: 'flex', gap: '0.5rem'}}>\n                    <button \n                      style={{\n                        background: '#FFB000',\n                        color: '#000',\n                        border: 'none',\n                        borderRadius: '6px',\n                        padding: '0.5rem 1rem',\n                        fontSize: '0.8rem',\n                        fontWeight: '600',\n                        cursor: 'pointer'\n                      }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        setShowAwardWingsModal(true);\n                      }}\n                    >\n                      Award WINGS\n                    </button>\n                    <button \n                      style={{\n                        background: user.status === 'banned' ? '#2ecc40' : '#e74c3c',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '6px',\n                        padding: '0.5rem 1rem',\n                        fontSize: '0.8rem',\n                        fontWeight: '600',\n                        cursor: 'pointer'\n                      }}\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      {user.status === 'banned' ? 'Unban' : 'Ban'}\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Categories Tab */}\n        {activeTab === 'categories' && (\n          <div>\n            {/* Physical Categories Section */}\n            <div style={{\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n              border: '1px solid rgba(255, 176, 0, 0.3)',\n              borderRadius: '16px',\n              padding: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '1.5rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}>\n                👕 Physical Categories\n              </h3>\n              <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))', gap: '1.5rem'}}>\n                {categories.filter(category => ['jackets', 'tops', 'bottoms', 'accessories', 'headwear'].includes(category.name)).map((category) => (\n                  <div key={category.name} style={{\n                    background: 'rgba(255, 255, 255, 0.05)', \n                    border: '1px solid rgba(255, 255, 255, 0.15)', \n                    borderRadius: '12px', \n                    padding: '1.5rem'\n                  }}>\n                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem'}}>\n                      <h4 style={{color: 'white', margin: 0, textTransform: 'capitalize'}}>{category.name}</h4>\n                      <div \n                        style={{\n                          position: 'relative',\n                          width: '60px',\n                          height: '30px',\n                          borderRadius: '15px',\n                          cursor: 'pointer',\n                          transition: 'all 0.3s ease',\n                          background: category.enabled ? '#FFB000' : '#333'\n                        }}\n                        onClick={() => toggleCategory(category.name)}\n                      >\n                        <div \n                          style={{\n                            position: 'absolute',\n                            top: '3px',\n                            left: '3px',\n                            width: '24px',\n                            height: '24px',\n                            background: 'white',\n                            borderRadius: '50%',\n                            transition: 'all 0.3s ease',\n                            transform: category.enabled ? 'translateX(30px)' : 'translateX(0)'\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'column', gap: '0.5rem', fontSize: '0.9rem'}}>\n                      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <span style={{color: '#9E9E9E'}}>Items:</span>\n                        <span style={{color: '#FFB000', fontWeight: '600'}}>{category.itemCount}</span>\n                      </div>\n                      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <span style={{color: '#9E9E9E'}}>Scans:</span>\n                        <span style={{color: '#FFB000', fontWeight: '600'}}>{category.scanCount}</span>\n                      </div>\n                      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <span style={{color: '#9E9E9E'}}>Revenue:</span>\n                        <span style={{color: '#2ecc40', fontWeight: '600'}}>${category.revenue?.toLocaleString()}</span>\n                      </div>\n                    </div>\n                    <div style={{\n                      marginTop: '1rem', \n                      fontSize: '0.9rem', \n                      fontWeight: '600', \n                      color: category.enabled ? '#2ecc40' : '#e74c3c'\n                    }}>\n                      {category.enabled ? '✅ ENABLED' : '❌ DISABLED'}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Digital Categories Section */}\n            <div style={{\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n              border: '1px solid rgba(255, 176, 0, 0.3)',\n              borderRadius: '16px',\n              padding: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '1.5rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}>\n                💎 Digital Categories\n              </h3>\n              <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))', gap: '1.5rem'}}>\n                {categories.filter(category => ['badges', 'tokens'].includes(category.name)).map((category) => (\n                  <div key={category.name} style={{\n                    background: 'rgba(255, 255, 255, 0.05)', \n                    border: '1px solid rgba(255, 255, 255, 0.15)', \n                    borderRadius: '12px', \n                    padding: '1.5rem'\n                  }}>\n                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem'}}>\n                      <h4 style={{color: 'white', margin: 0, textTransform: 'capitalize'}}>{category.name}</h4>\n                      <div \n                        style={{\n                          position: 'relative',\n                          width: '60px',\n                          height: '30px',\n                          borderRadius: '15px',\n                          cursor: 'pointer',\n                          transition: 'all 0.3s ease',\n                          background: category.enabled ? '#FFB000' : '#333'\n                        }}\n                        onClick={() => toggleCategory(category.name)}\n                      >\n                        <div \n                          style={{\n                            position: 'absolute',\n                            top: '3px',\n                            left: '3px',\n                            width: '24px',\n                            height: '24px',\n                            background: 'white',\n                            borderRadius: '50%',\n                            transition: 'all 0.3s ease',\n                            transform: category.enabled ? 'translateX(30px)' : 'translateX(0)'\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'column', gap: '0.5rem', fontSize: '0.9rem'}}>\n                      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <span style={{color: '#9E9E9E'}}>Items:</span>\n                        <span style={{color: '#FFB000', fontWeight: '600'}}>{category.itemCount}</span>\n                      </div>\n                      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <span style={{color: '#9E9E9E'}}>Scans:</span>\n                        <span style={{color: '#FFB000', fontWeight: '600'}}>{category.scanCount}</span>\n                      </div>\n                      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <span style={{color: '#9E9E9E'}}>Revenue:</span>\n                        <span style={{color: '#2ecc40', fontWeight: '600'}}>${category.revenue?.toLocaleString()}</span>\n                      </div>\n                    </div>\n                    <div style={{\n                      marginTop: '1rem', \n                      fontSize: '0.9rem', \n                      fontWeight: '600', \n                      color: category.enabled ? '#2ecc40' : '#e74c3c'\n                    }}>\n                      {category.enabled ? '✅ ENABLED' : '❌ DISABLED'}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Admin Management Tab */}\n        {activeTab === 'admin-management' && (\n          <AdminUserManager />\n        )}\n\n        {/* Rewards Tab */}\n        {activeTab === 'rewards' && (\n          <div style={{\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n            border: '1px solid rgba(255, 176, 0, 0.3)',\n            borderRadius: '16px',\n            padding: '1.5rem',\n            marginBottom: '2rem'\n          }}>\n            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1.5rem'}}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '0'\n              }}>Reward Management</h3>\n              <button \n                style={{\n                  background: 'linear-gradient(135deg, #4C1C8C 0%, #7F3FBF 100%)',\n                  color: 'white',\n                  border: '2px solid #FFB000',\n                  borderRadius: '8px',\n                  padding: '0.75rem 1.5rem',\n                  fontWeight: '600',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease',\n                  fontSize: '1rem'\n                }}\n                onClick={() => setShowCreateRewardModal(true)}\n              >\n                Create New Reward\n              </button>\n            </div>\n            \n            <div style={{display: 'flex', flexDirection: 'column', gap: '1rem'}}>\n              {campaigns.map((reward) => (\n                <div key={reward.id} style={{\n                  background: 'rgba(255, 255, 255, 0.05)', \n                  border: '1px solid rgba(255, 255, 255, 0.15)', \n                  borderRadius: '12px', \n                  padding: '1rem', \n                  display: 'flex', \n                  justifyContent: 'space-between', \n                  alignItems: 'center'\n                }}>\n                  <div>\n                    <div style={{color: 'white', fontWeight: '600'}}>{reward.name}</div>\n                    <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>{reward.description}</div>\n                    <div style={{fontSize: '0.8rem', color: '#6C6C6C', marginTop: '0.5rem'}}>\n                      Type: {reward.type} • Created: March 15, 2025\n                    </div>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', gap: '1rem'}}>\n                    <span style={{\n                      padding: '0.25rem 0.75rem',\n                      borderRadius: '12px',\n                      fontSize: '0.8rem',\n                      fontWeight: '600',\n                      background: reward.active ? 'rgba(46, 204, 64, 0.2)' : 'rgba(231, 76, 60, 0.2)',\n                      color: reward.active ? '#2ecc40' : '#e74c3c'\n                    }}>\n                      {reward.active ? 'Active' : 'Inactive'}\n                    </span>\n                    <button style={{\n                      background: 'none',\n                      border: 'none',\n                      color: '#FFB000',\n                      cursor: 'pointer',\n                      fontWeight: '600'\n                    }}>\n                      Edit\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Analytics Tab */}\n        {activeTab === 'analytics' && (\n          <div>\n            <div style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n              gap: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <div style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n                border: '1px solid rgba(255, 176, 0, 0.3)',\n                borderRadius: '16px',\n                padding: '1.5rem',\n                backdropFilter: 'blur(20px)',\n                boxShadow: '0 0 32px 0 rgba(255,215,0,0.18)'\n              }}>\n                <div style={{\n                  fontSize: '2.5rem',\n                  fontWeight: '700',\n                  color: '#FFB000',\n                  marginBottom: '0.5rem'\n                }}>{stats.totalUsers?.toLocaleString() || '0'}</div>\n                <div style={{\n                  color: '#9E9E9E',\n                  fontSize: '0.9rem',\n                  fontWeight: '500'\n                }}>Total Users</div>\n              </div>\n              <div style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n                border: '1px solid rgba(255, 176, 0, 0.3)',\n                borderRadius: '16px',\n                padding: '1.5rem',\n                backdropFilter: 'blur(20px)',\n                boxShadow: '0 0 32px 0 rgba(255,215,0,0.18)'\n              }}>\n                <div style={{\n                  fontSize: '2.5rem',\n                  fontWeight: '700',\n                  color: '#FFB000',\n                  marginBottom: '0.5rem'\n                }}>{stats.totalScans?.toLocaleString() || '0'}</div>\n                <div style={{\n                  color: '#9E9E9E',\n                  fontSize: '0.9rem',\n                  fontWeight: '500'\n                }}>Total Scans</div>\n              </div>\n              <div style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n                border: '1px solid rgba(255, 176, 0, 0.3)',\n                borderRadius: '16px',\n                padding: '1.5rem',\n                backdropFilter: 'blur(20px)',\n                boxShadow: '0 0 32px 0 rgba(255,215,0,0.18)'\n              }}>\n                <div style={{\n                  fontSize: '2.5rem',\n                  fontWeight: '700',\n                  color: '#FFB000',\n                  marginBottom: '0.5rem'\n                }}>{stats.totalWings?.toLocaleString() || '0'}</div>\n                <div style={{\n                  color: '#9E9E9E',\n                  fontSize: '0.9rem',\n                  fontWeight: '500'\n                }}>Total WINGS</div>\n              </div>\n            </div>\n            \n            <div style={{\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n              border: '1px solid rgba(255, 176, 0, 0.3)',\n              borderRadius: '16px',\n              padding: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '1.5rem'\n              }}>Revenue by Category</h3>\n              <div style={{display: 'flex', flexDirection: 'column', gap: '1rem'}}>\n                {categories.map((category) => (\n                  <div key={category.name} style={{\n                    display: 'flex', \n                    alignItems: 'center', \n                    justifyContent: 'space-between', \n                    padding: '1rem', \n                    background: 'rgba(255, 255, 255, 0.05)', \n                    borderRadius: '8px'\n                  }}>\n                    <div style={{display: 'flex', alignItems: 'center', gap: '1rem'}}>\n                      <div style={{width: '16px', height: '16px', background: '#FFB000', borderRadius: '4px'}}></div>\n                      <span style={{color: 'white', textTransform: 'capitalize'}}>{category.name}</span>\n                    </div>\n                    <div style={{color: '#2ecc40', fontWeight: '600'}}>${category.revenue?.toLocaleString()}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div style={{\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n              border: '1px solid rgba(255, 176, 0, 0.3)',\n              borderRadius: '16px',\n              padding: '1.5rem',\n              marginBottom: '2rem'\n            }}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '1.5rem'\n              }}>User Engagement Metrics</h3>\n              <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '1.5rem'}}>\n                <div style={{textAlign: 'center'}}>\n                  <div style={{fontSize: '2rem', fontWeight: '700', color: '#FFB000'}}>{stats.dailyActiveUsers || 0}</div>\n                  <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>Daily Active Users</div>\n                </div>\n                <div style={{textAlign: 'center'}}>\n                  <div style={{fontSize: '2rem', fontWeight: '700', color: '#FFB000'}}>{stats.conversionRate || 0}%</div>\n                  <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>Conversion Rate</div>\n                </div>\n                <div style={{textAlign: 'center'}}>\n                  <div style={{fontSize: '2rem', fontWeight: '700', color: '#FFB000'}}>{stats.activeRewards || 0}</div>\n                  <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>Active Rewards</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Security Tab */}\n        {activeTab === 'security' && (\n          <div>\n            <SecurityDashboard />\n          </div>\n        )}\n\n        {/* Connection Test Tab */}\n        {activeTab === 'connection' && (\n          <div>\n            <SupabaseConnectionTest />\n          </div>\n        )}\n\n        {/* Campaigns Tab */}\n        {activeTab === 'campaigns' && (\n          <div style={{\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(76,28,140,0.08) 100%)',\n            border: '1px solid rgba(255, 176, 0, 0.3)',\n            borderRadius: '16px',\n            padding: '1.5rem',\n            marginBottom: '2rem'\n          }}>\n            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1.5rem'}}>\n              <h3 style={{\n                fontSize: '1.3rem',\n                fontWeight: '600',\n                color: '#ffffff',\n                marginBottom: '0'\n              }}>Campaign Management</h3>\n              <button style={{\n                background: 'linear-gradient(135deg, #4C1C8C 0%, #7F3FBF 100%)',\n                color: 'white',\n                border: '2px solid #FFB000',\n                borderRadius: '8px',\n                padding: '0.75rem 1.5rem',\n                fontWeight: '600',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease',\n                fontSize: '1rem'\n              }}>Create Campaign</button>\n            </div>\n            \n            <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem'}}>\n              {campaigns.map((campaign) => (\n                <div key={campaign.id} style={{\n                  background: 'rgba(255, 255, 255, 0.05)', \n                  border: '1px solid rgba(255, 255, 255, 0.2)', \n                  borderRadius: '12px', \n                  padding: '1.5rem'\n                }}>\n                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem'}}>\n                    <h4 style={{color: 'white', margin: 0}}>{campaign.name}</h4>\n                    <div \n                      style={{\n                        position: 'relative',\n                        width: '60px',\n                        height: '30px',\n                        borderRadius: '15px',\n                        cursor: 'pointer',\n                        transition: 'all 0.3s ease',\n                        background: campaign.active ? '#FFB000' : '#333'\n                      }}\n                      onClick={() => toggleCampaign(campaign.id)}\n                    >\n                      <div \n                        style={{\n                          position: 'absolute',\n                          top: '3px',\n                          left: '3px',\n                          width: '24px',\n                          height: '24px',\n                          background: 'white',\n                          borderRadius: '50%',\n                          transition: 'all 0.3s ease',\n                          transform: campaign.active ? 'translateX(30px)' : 'translateX(0)'\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <p style={{color: '#9E9E9E', fontSize: '0.9rem', marginBottom: '1rem'}}>{campaign.description}</p>\n                  <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                    <span style={{\n                      padding: '0.25rem 0.75rem',\n                      borderRadius: '12px',\n                      fontSize: '0.8rem',\n                      fontWeight: '600',\n                      background: campaign.active ? 'rgba(46, 204, 64, 0.2)' : 'rgba(231, 76, 60, 0.2)',\n                      color: campaign.active ? '#2ecc40' : '#e74c3c'\n                    }}>\n                      {campaign.active ? 'ACTIVE' : 'INACTIVE'}\n                    </span>\n                    <button style={{\n                      background: 'none',\n                      border: 'none',\n                      color: '#FFB000',\n                      cursor: 'pointer',\n                      fontSize: '0.9rem',\n                      fontWeight: '600'\n                    }}>\n                      Edit Settings\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Create Reward Modal */}\n      {showCreateRewardModal && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'rgba(0, 0, 0, 0.8)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000\n        }}>\n          <div style={{\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n            border: '1px solid rgba(255, 176, 0, 0.3)',\n            borderRadius: '16px',\n            padding: '2rem',\n            width: '90%',\n            maxWidth: '500px',\n            backdropFilter: 'blur(20px)'\n          }}>\n            <h3 style={{color: 'white', marginBottom: '1.5rem'}}>Create New Reward</h3>\n            <div style={{display: 'flex', flexDirection: 'column', gap: '1rem'}}>\n              <input\n                type=\"text\"\n                placeholder=\"Reward Name\"\n                value={newReward.name}\n                onChange={(e) => setNewReward({...newReward, name: e.target.value})}\n                style={{\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  color: 'white',\n                  fontSize: '1rem'\n                }}\n              />\n              <select\n                value={newReward.category}\n                onChange={(e) => setNewReward({...newReward, category: e.target.value})}\n                style={{\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  color: 'white',\n                  fontSize: '1rem'\n                }}\n              >\n                <option value=\"\">Select Category</option>\n                {categories.map(cat => (\n                  <option key={cat.name} value={cat.name} style={{background: '#333'}}>{cat.name}</option>\n                ))}\n              </select>\n              <input\n                type=\"number\"\n                placeholder=\"WINGS Value\"\n                value={newReward.wings_value}\n                onChange={(e) => setNewReward({...newReward, wings_value: parseInt(e.target.value) || 0})}\n                style={{\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  color: 'white',\n                  fontSize: '1rem'\n                }}\n              />\n            </div>\n            <div style={{display: 'flex', gap: '1rem', marginTop: '2rem'}}>\n              <button\n                onClick={createReward}\n                style={{\n                  flex: 1,\n                  background: 'linear-gradient(135deg, #4C1C8C 0%, #7F3FBF 100%)',\n                  color: 'white',\n                  border: '2px solid #FFB000',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  fontWeight: '600',\n                  cursor: 'pointer'\n                }}\n              >\n                Create Reward\n              </button>\n              <button\n                onClick={() => setShowCreateRewardModal(false)}\n                style={{\n                  flex: 1,\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  color: 'white',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  fontWeight: '600',\n                  cursor: 'pointer'\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Add User Modal */}\n      {showAddUserModal && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'rgba(0, 0, 0, 0.8)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000\n        }}>\n          <div style={{\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n            border: '1px solid rgba(255, 176, 0, 0.3)',\n            borderRadius: '16px',\n            padding: '2rem',\n            width: '90%',\n            maxWidth: '500px',\n            backdropFilter: 'blur(20px)'\n          }}>\n            <h3 style={{color: 'white', marginBottom: '1.5rem'}}>Add New User</h3>\n            <div style={{display: 'flex', flexDirection: 'column', gap: '1rem'}}>\n              <input\n                type=\"text\"\n                placeholder=\"Full Name\"\n                value={newUser.name}\n                onChange={(e) => setNewUser({...newUser, name: e.target.value})}\n                style={{\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  color: 'white',\n                  fontSize: '1rem'\n                }}\n              />\n              <input\n                type=\"email\"\n                placeholder=\"Email Address\"\n                value={newUser.email}\n                onChange={(e) => setNewUser({...newUser, email: e.target.value})}\n                style={{\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  color: 'white',\n                  fontSize: '1rem'\n                }}\n              />\n              <select\n                value={newUser.tier}\n                onChange={(e) => setNewUser({...newUser, tier: e.target.value})}\n                style={{\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  color: 'white',\n                  fontSize: '1rem'\n                }}\n              >\n                <option value=\"bronze\" style={{background: '#333'}}>Bronze Tier</option>\n                <option value=\"silver\" style={{background: '#333'}}>Silver Tier</option>\n                <option value=\"gold\" style={{background: '#333'}}>Gold Tier</option>\n                <option value=\"platinum\" style={{background: '#333'}}>Platinum Tier</option>\n              </select>\n              <div style={{display: 'flex', gap: '1rem'}}>\n                <input\n                  type=\"number\"\n                  placeholder=\"Starting WINGS\"\n                  value={newUser.wings}\n                  onChange={(e) => setNewUser({...newUser, wings: parseInt(e.target.value) || 0})}\n                  style={{\n                    flex: 1,\n                    background: 'rgba(255, 255, 255, 0.1)',\n                    border: '1px solid rgba(255, 255, 255, 0.3)',\n                    borderRadius: '8px',\n                    padding: '0.75rem',\n                    color: 'white',\n                    fontSize: '1rem'\n                  }}\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Starting Items\"\n                  value={newUser.items}\n                  onChange={(e) => setNewUser({...newUser, items: parseInt(e.target.value) || 0})}\n                  style={{\n                    flex: 1,\n                    background: 'rgba(255, 255, 255, 0.1)',\n                    border: '1px solid rgba(255, 255, 255, 0.3)',\n                    borderRadius: '8px',\n                    padding: '0.75rem',\n                    color: 'white',\n                    fontSize: '1rem'\n                  }}\n                />\n              </div>\n            </div>\n            <div style={{display: 'flex', gap: '1rem', marginTop: '2rem'}}>\n              <button\n                onClick={addUser}\n                style={{\n                  flex: 1,\n                  background: 'linear-gradient(135deg, #4C1C8C 0%, #7F3FBF 100%)',\n                  color: 'white',\n                  border: '2px solid #FFB000',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  fontWeight: '600',\n                  cursor: 'pointer'\n                }}\n              >\n                Add User\n              </button>\n              <button\n                onClick={() => setShowAddUserModal(false)}\n                style={{\n                  flex: 1,\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  color: 'white',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  fontWeight: '600',\n                  cursor: 'pointer'\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Award WINGS Modal */}\n      {showAwardWingsModal && selectedUser && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'rgba(0, 0, 0, 0.8)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000\n        }}>\n          <div style={{\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n            border: '1px solid rgba(255, 176, 0, 0.3)',\n            borderRadius: '16px',\n            padding: '2rem',\n            width: '90%',\n            maxWidth: '400px',\n            backdropFilter: 'blur(20px)',\n            textAlign: 'center'\n          }}>\n            <h3 style={{color: 'white', marginBottom: '1rem'}}>Award WINGS</h3>\n            <p style={{color: '#9E9E9E', marginBottom: '1.5rem'}}>\n              Award WINGS to {selectedUser.name}\n            </p>\n            <input\n              type=\"number\"\n              placeholder=\"Amount of WINGS\"\n              value={wingsAmount}\n              onChange={(e) => setWingsAmount(parseInt(e.target.value) || 0)}\n              style={{\n                width: '100%',\n                background: 'rgba(255, 255, 255, 0.1)',\n                border: '1px solid rgba(255, 255, 255, 0.3)',\n                borderRadius: '8px',\n                padding: '0.75rem',\n                color: 'white',\n                fontSize: '1rem',\n                marginBottom: '2rem',\n                textAlign: 'center'\n              }}\n            />\n            <div style={{display: 'flex', gap: '1rem'}}>\n              <button\n                onClick={awardWings}\n                style={{\n                  flex: 1,\n                  background: '#FFB000',\n                  color: '#000',\n                  border: 'none',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  fontWeight: '600',\n                  cursor: 'pointer'\n                }}\n              >\n                Award WINGS\n              </button>\n              <button\n                onClick={() => {\n                  setShowAwardWingsModal(false);\n                  setWingsAmount(0);\n                }}\n                style={{\n                  flex: 1,\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  color: 'white',\n                  border: '1px solid rgba(255, 255, 255, 0.3)',\n                  borderRadius: '8px',\n                  padding: '0.75rem',\n                  fontWeight: '600',\n                  cursor: 'pointer'\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* User Details Modal */}\n      {showUserDetailsModal && selectedUser && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'rgba(0, 0, 0, 0.8)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000\n        }}>\n          <div style={{\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(76,28,140,0.2) 100%)',\n            border: '1px solid rgba(255, 176, 0, 0.3)',\n            borderRadius: '16px',\n            padding: '2rem',\n            width: '90%',\n            maxWidth: '600px',\n            backdropFilter: 'blur(20px)'\n          }}>\n            <div style={{display: 'flex', alignItems: 'center', gap: '1rem', marginBottom: '2rem'}}>\n              <div style={{\n                width: '64px',\n                height: '64px',\n                background: 'linear-gradient(135deg, #4C1C8C 0%, #FFB000 100%)',\n                borderRadius: '50%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'white',\n                fontWeight: '700',\n                fontSize: '1.5rem'\n              }}>\n                {selectedUser.name.charAt(0)}\n              </div>\n              <div>\n                <h3 style={{color: 'white', margin: 0}}>{selectedUser.name}</h3>\n                <p style={{color: '#9E9E9E', margin: '0.5rem 0'}}>{selectedUser.email}</p>\n                <span style={{\n                  padding: '0.25rem 0.75rem',\n                  borderRadius: '12px',\n                  fontSize: '0.8rem',\n                  fontWeight: '600',\n                  background: selectedUser.tier === 'platinum' ? 'rgba(155, 89, 182, 0.2)' : \n                             selectedUser.tier === 'gold' ? 'rgba(241, 196, 15, 0.2)' : \n                             selectedUser.tier === 'silver' ? 'rgba(149, 165, 166, 0.2)' : 'rgba(230, 126, 34, 0.2)',\n                  color: selectedUser.tier === 'platinum' ? '#9B59B6' : \n                         selectedUser.tier === 'gold' ? '#F1C40F' : \n                         selectedUser.tier === 'silver' ? '#95A5A6' : '#E67E22'\n                }}>\n                  {selectedUser.tier.toUpperCase()} TIER\n                </span>\n              </div>\n            </div>\n            \n            <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))', gap: '1rem', marginBottom: '2rem'}}>\n              <div style={{textAlign: 'center'}}>\n                <div style={{fontSize: '2rem', fontWeight: '700', color: '#FFB000'}}>{selectedUser.wings}</div>\n                <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>Total WINGS</div>\n              </div>\n              <div style={{textAlign: 'center'}}>\n                <div style={{fontSize: '2rem', fontWeight: '700', color: '#FFB000'}}>{selectedUser.items}</div>\n                <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>Items Collected</div>\n              </div>\n              <div style={{textAlign: 'center'}}>\n                <div style={{fontSize: '2rem', fontWeight: '700', color: '#FFB000'}}>{selectedUser.totalScans || 0}</div>\n                <div style={{color: '#9E9E9E', fontSize: '0.9rem'}}>Total Scans</div>\n              </div>\n            </div>\n            \n            <div style={{marginBottom: '2rem'}}>\n              <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: '0.5rem'}}>\n                <span style={{color: '#9E9E9E'}}>Join Date:</span>\n                <span style={{color: 'white'}}>{selectedUser.joinDate || 'N/A'}</span>\n              </div>\n              <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: '0.5rem'}}>\n                <span style={{color: '#9E9E9E'}}>Last Scan:</span>\n                <span style={{color: 'white'}}>{selectedUser.lastScan || 'N/A'}</span>\n              </div>\n              <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <span style={{color: '#9E9E9E'}}>Status:</span>\n                <span style={{\n                  color: selectedUser.status === 'active' ? '#2ecc40' : '#e74c3c',\n                  fontWeight: '600',\n                  textTransform: 'uppercase'\n                }}>{selectedUser.status}</span>\n              </div>\n            </div>\n            \n            <button\n              onClick={() => setShowUserDetailsModal(false)}\n              style={{\n                width: '100%',\n                background: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                border: '1px solid rgba(255, 255, 255, 0.3)',\n                borderRadius: '8px',\n                padding: '0.75rem',\n                fontWeight: '600',\n                cursor: 'pointer'\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Overlay for mobile sidebar */}\n      {sidebarOpen && !isDesktop && (\n        <div \n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: 'rgba(0, 0, 0, 0.5)',\n            zIndex: 30\n          }}\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AdminScreen; ","import { useState, useEffect, useCallback } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useAuth } from './useAuth';\n\nexport const useAdmin = () => {\n  const { user } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [rewards, setRewards] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [stats, setStats] = useState({\n    totalUsers: 0,\n    totalScans: 0,\n    totalWings: 0,\n    activeUsers: 0,\n    successRate: 0,\n    dailyActiveUsers: 0,\n    conversionRate: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is admin\n  const isAdmin = user?.role === 'admin' || user?.role === 'super_admin';\n\n  // Fetch all users\n  const fetchUsers = useCallback(async () => {\n    if (!isAdmin) return;\n\n    try {\n      const { data, error } = await supabase\n        .from('user_profiles')\n        .select(`\n          *,\n          user_activity (\n            activity_type,\n            activity_date,\n            wings_earned\n          ),\n          user_closet (\n            id\n          )\n        `)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      const processedUsers = data?.map(user => {\n        const activities = user.user_activity || [];\n        const lastActivity = activities.length > 0 ? \n          new Date(Math.max(...activities.map(a => new Date(a.activity_date)))) : null;\n        \n        return {\n          id: user.id,\n          name: user.full_name || user.username || 'Unknown User',\n          email: user.email,\n          wings: user.wings_balance || 0,\n          items: user.user_closet?.length || 0,\n          status: user.role === 'banned' ? 'banned' : 'active',\n          joinDate: user.created_at,\n          lastScan: lastActivity,\n          totalScans: activities.filter(a => a.activity_type === 'scan').length,\n          tier: getTier(user.wings_balance || 0)\n        };\n      }) || [];\n\n      setUsers(processedUsers);\n    } catch (err) {\n      console.error('Error fetching users:', err);\n      setError(err.message);\n    }\n  }, [isAdmin]);\n\n  // Fetch rewards\n  const fetchRewards = useCallback(async () => {\n    if (!isAdmin) return;\n\n    try {\n      const { data, error } = await supabase\n        .from('rewards')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      setRewards(data || []);\n    } catch (err) {\n      console.error('Error fetching rewards:', err);\n      setError(err.message);\n    }\n  }, [isAdmin]);\n\n  // Fetch categories with stats\n  const fetchCategories = useCallback(async () => {\n    if (!isAdmin) return;\n\n    try {\n      // Get all rewards grouped by category\n      const { data: rewardsData, error: rewardsError } = await supabase\n        .from('rewards')\n        .select('category, is_active');\n\n      if (rewardsError) throw rewardsError;\n\n      // Get scan counts by category\n      const { data: scanData, error: scanError } = await supabase\n        .from('user_activity')\n        .select('metadata')\n        .eq('activity_type', 'scan');\n\n      if (scanError) throw scanError;\n\n      // Process category stats\n      const categoryStats = {};\n      rewardsData?.forEach(reward => {\n        if (!categoryStats[reward.category]) {\n          categoryStats[reward.category] = {\n            name: reward.category,\n            enabled: reward.is_active,\n            itemCount: 0,\n            scanCount: 0,\n            revenue: 0\n          };\n        }\n        categoryStats[reward.category].itemCount++;\n      });\n\n      // Count scans by category from metadata\n      scanData?.forEach(scan => {\n        const category = scan.metadata?.category;\n        if (category && categoryStats[category]) {\n          categoryStats[category].scanCount++;\n        }\n      });\n\n      setCategories(Object.values(categoryStats));\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n      setError(err.message);\n    }\n  }, [isAdmin]);\n\n  // Fetch recent activity\n  const fetchRecentActivity = useCallback(async () => {\n    if (!isAdmin) return;\n\n    try {\n      const { data, error } = await supabase\n        .from('user_activity')\n        .select(`\n          *,\n          user_profiles!user_activity_user_id_fkey (\n            email,\n            username\n          )\n        `)\n        .order('activity_date', { ascending: false })\n        .limit(20);\n\n      if (error) throw error;\n\n      const processedActivity = data?.map(activity => ({\n        id: activity.id,\n        user: activity.user_profiles?.email || activity.user_profiles?.username || 'Unknown',\n        action: activity.activity_type === 'scan' ? 'QR Scan' : \n                activity.activity_type === 'quest' ? 'Quest Complete' :\n                activity.activity_type === 'referral' ? 'Referral' : 'Activity',\n        reward: activity.activity_title,\n        time: formatTimeAgo(activity.activity_date),\n        status: activity.wings_earned > 0 ? 'success' : 'failed'\n      })) || [];\n\n      setRecentActivity(processedActivity);\n    } catch (err) {\n      console.error('Error fetching recent activity:', err);\n      setError(err.message);\n    }\n  }, [isAdmin]);\n\n  // Fetch admin stats\n  const fetchStats = useCallback(async () => {\n    if (!isAdmin) return;\n\n    try {\n      // Get total users\n      const { count: totalUsers } = await supabase\n        .from('user_profiles')\n        .select('*', { count: 'exact', head: true });\n\n      // Get total scans\n      const { count: totalScans } = await supabase\n        .from('user_activity')\n        .select('*', { count: 'exact', head: true })\n        .eq('activity_type', 'scan');\n\n      // Get total wings\n      const { data: wingsData } = await supabase\n        .from('user_profiles')\n        .select('wings_balance');\n\n      const totalWings = wingsData?.reduce((sum, user) => sum + (user.wings_balance || 0), 0) || 0;\n\n      // Get active users (users with activity in last 7 days)\n      const sevenDaysAgo = new Date();\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n\n      const { count: activeUsers } = await supabase\n        .from('user_activity')\n        .select('user_id', { count: 'exact', head: true })\n        .gte('activity_date', sevenDaysAgo.toISOString());\n\n      // Get daily active users\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      const { count: dailyActiveUsers } = await supabase\n        .from('user_activity')\n        .select('user_id', { count: 'exact', head: true })\n        .gte('activity_date', today.toISOString());\n\n      // Calculate success rate (successful scans vs total scans)\n      const { count: successfulScans } = await supabase\n        .from('user_activity')\n        .select('*', { count: 'exact', head: true })\n        .eq('activity_type', 'scan')\n        .gt('wings_earned', 0);\n\n      const successRate = totalScans > 0 ? (successfulScans / totalScans) * 100 : 0;\n\n      // Calculate conversion rate (users with items vs total users)\n      const { count: usersWithItems } = await supabase\n        .from('user_closet')\n        .select('user_id', { count: 'exact', head: true });\n\n      const conversionRate = totalUsers > 0 ? (usersWithItems / totalUsers) * 100 : 0;\n\n      setStats({\n        totalUsers: totalUsers || 0,\n        totalScans: totalScans || 0,\n        totalWings,\n        activeUsers: activeUsers || 0,\n        successRate: Math.round(successRate),\n        dailyActiveUsers: dailyActiveUsers || 0,\n        conversionRate: Math.round(conversionRate)\n      });\n\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n      setError(err.message);\n    }\n  }, [isAdmin]);\n\n  // Helper functions\n  const getTier = (wings) => {\n    if (wings >= 5000) return 'platinum';\n    if (wings >= 2000) return 'gold';\n    if (wings >= 1000) return 'silver';\n    return 'bronze';\n  };\n\n  const formatTimeAgo = (date) => {\n    const now = new Date();\n    const activityDate = new Date(date);\n    const diffInMinutes = Math.floor((now - activityDate) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes} min ago`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours} hour${diffInHours > 1 ? 's' : ''} ago`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    return `${diffInDays} day${diffInDays > 1 ? 's' : ''} ago`;\n  };\n\n  // Load all admin data\n  const loadAdminData = useCallback(async () => {\n    if (!isAdmin) return;\n\n    try {\n      setLoading(true);\n      await Promise.all([\n        fetchUsers(),\n        fetchRewards(),\n        fetchCategories(),\n        fetchRecentActivity(),\n        fetchStats()\n      ]);\n    } catch (err) {\n      console.error('Error loading admin data:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAdmin, fetchUsers, fetchRewards, fetchCategories, fetchRecentActivity, fetchStats]);\n\n  // Initial load\n  useEffect(() => {\n    loadAdminData();\n  }, [loadAdminData]);\n\n  return {\n    users,\n    rewards,\n    categories,\n    recentActivity,\n    stats,\n    loading,\n    error,\n    isAdmin,\n    refreshData: loadAdminData\n  };\n}; "],"names":["ADMIN_ROLES","CHRYSALIS","WASP","MANTIS","DRAGONFLY","ROLE_HIERARCHY","ROLE_PERMISSIONS","ROLE_DISPLAY","name","emoji","description","adminManager","makeAdmin","userId","role","userIdValidation","test","success","error","validateUserId","roleValidation","Object","values","includes","concat","join","validateRole","supabase","from","update","eq","console","enhancedSecurity","trackSuspiciousActivity","targetUserId","newRole","action","roleDisplay","log","message","makeSuperAdmin","this","makeModerator","removeAdmin","checkAdminStatus","data","select","single","isAdmin","isModerator","isSuperAdmin","userInfo","email","fullName","full_name","username","getAllAdmins","neq","order","ascending","admins","map","user","_objectSpread","getAdminStats","stats","total","length","chrysalis","wasp","mantis","dragonfly","forEach","hasPermission","userRole","permission","userPermissions","getUserPermissions","permissions","Set","perm","add","inheritedRole","Array","getRoleHierarchy","getRoleDisplay","getRoles","quickAdmin","async","remove","check","list","TestContainer","styled","div","_templateObject","_taggedTemplateLiteral","TestSection","_templateObject2","props","status","TestTitle","h3","_templateObject3","TestResult","_templateObject4","Button","button","_templateObject5","StatusIndicator","_templateObject6","SupabaseConnectionTest","profile","loading","authLoading","useAuth","testResults","setTestResults","useState","running","setRunning","overallStatus","setOverallStatus","runTest","testName","testFunction","prev","result","testBasicConnection","limit","testAuthentication","session","auth","getSession","testDatabaseTables","tables","results","table","push","err","testRowLevelSecurity","profiles","profilesError","rewards","rewardsError","testUserProfile","id","wings_balance","testRewards","r","category","rarity","testUserCloset","closet","testRealTime","Promise","resolve","channel","on","event","schema","payload","subscribe","setTimeout","unsubscribe","useEffect","_jsxs","children","_jsx","style","color","marginBottom","onClick","tests","fn","passedTests","disabled","clearResults","padding","background","borderRadius","entries","_ref","keys","DashboardContainer","DashboardGrid","SecurityCard","GlassCard","ThreatLevelIndicator","level","MetricValue","_ref2","theme","colors","accent","gold","MetricLabel","_ref3","text","secondary","AlertList","_templateObject7","AlertItem","_templateObject8","_ref4","severity","_ref5","AlertHeader","_templateObject9","AlertType","_templateObject0","_ref6","primary","AlertTime","_templateObject1","_ref7","AlertData","_templateObject10","_ref8","ActionButtons","_templateObject11","_templateObject12","_ref9","SecurityDashboard","_securityStatus$alert","_auditData$qrStatisti","_auditData$qrStatisti2","_auditData$qrStatisti3","_auditData$qrStatisti4","_auditData$sessionSta","_auditData$sessionSta2","_auditData$sessionSta3","_securityStatus$metri","_securityStatus$metri2","_securityStatus$metri3","_securityStatus$metri4","_securityStatus$alert2","_auditData$securitySy","_auditData$inputValid","_auditData$inputValid2","_auditData$rbac","_auditData$rbac2","securityStatus","setSecurityStatus","auditData","setAuditData","setLoading","refreshInterval","setRefreshInterval","loadSecurityData","interval","setInterval","clearInterval","getSecurityStatus","audit","auditSecurity","threatLevel","display","justifyContent","alignItems","getThreatLevelColor","textAlign","alerts","qrStatistics","totalScans","marginTop","fontSize","blockedCodes","uniqueUsers","cachedVerifications","sessionStatistics","activeSessions","Math","round","averageSessionAge","metrics","securityAlerts","suspiciousActivities","blockedAttempts","failedScans","alert","type","timestamp","Date","toLocaleString","JSON","stringify","GlowButton","size","handleAcknowledgeAlert","alertId","acknowledgeAlert","gap","handleCleanup","cleanup","lineHeight","securitySystem","securityEvents","inputValidation","rateLimits","activeUsers","rbac","roles","accessLogEntries","Container","Section","SectionTitle","typography","fontFamily","heading","Form","form","FormGroup","Label","label","Input","input","Select","ButtonGroup","QuickButton","MantisButton","DragonflyButton","WaspButton","ChrysalisButton","Message","_templateObject13","AdminList","_templateObject14","AdminCard","_templateObject15","AdminInfo","_templateObject16","RoleBadge","_templateObject17","UserDetails","_templateObject18","UserName","_templateObject19","_ref0","UserEmail","_templateObject20","_ref1","StatsGrid","_templateObject21","StatCard","_templateObject22","StatNumber","_templateObject23","StatLabel","_templateObject24","_ref10","LoadingSpinner","_templateObject25","AdminUserManager","setUserId","selectedRole","setSelectedRole","setMessage","setAdmins","setStats","checkUserId","setCheckUserId","userStatus","setUserStatus","currentUserRole","canManageAdmins","loadAdmins","loadStats","handleQuickTransform","trim","targetRole","_ROLE_DISPLAY$current","_ROLE_DISPLAY$current2","onSubmit","e","preventDefault","value","onChange","target","placeholder","handleCheckStatus","admin","created_at","toLocaleDateString","AdminScreen","_navItems$find","_stats$activeUsers","_stats$totalUsers","_stats$totalScans","_stats$totalWings","users","categories","recentActivity","useAdmin","setUsers","setRewards","setCategories","setRecentActivity","totalUsers","totalWings","successRate","dailyActiveUsers","conversionRate","setError","fetchUsers","useCallback","processedUsers","_user$user_closet","activities","user_activity","lastActivity","max","a","activity_date","wings","items","user_closet","joinDate","lastScan","filter","activity_type","tier","getTier","fetchRewards","fetchCategories","rewardsData","scanData","scanError","categoryStats","reward","enabled","is_active","itemCount","scanCount","revenue","scan","_scan$metadata","metadata","fetchRecentActivity","processedActivity","activity","_activity$user_profil","_activity$user_profil2","user_profiles","activity_title","time","formatTimeAgo","wings_earned","fetchStats","count","head","wingsData","reduce","sum","sevenDaysAgo","setDate","getDate","gte","toISOString","today","setHours","successfulScans","gt","usersWithItems","date","now","activityDate","diffInMinutes","floor","diffInHours","diffInDays","loadAdminData","all","refreshData","activeTab","setActiveTab","campaigns","setCampaigns","sidebarOpen","setSidebarOpen","showCreateRewardModal","setShowCreateRewardModal","showAddUserModal","setShowAddUserModal","showAwardWingsModal","setShowAwardWingsModal","showUserDetailsModal","setShowUserDetailsModal","selectedUser","setSelectedUser","newReward","setNewReward","wings_value","season","newUser","setNewUser","wingsAmount","setWingsAmount","searchTerm","setSearchTerm","mockCampaigns","active","endDate","navItems","icon","toggleCampaign","campaignId","campaign","toggleCategory","categoryName","filteredUsers","toLowerCase","isDesktop","window","innerWidth","minHeight","position","top","left","zIndex","border","cursor","height","width","backdropFilter","borderRight","transform","transition","borderBottom","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","margin","item","textDecoration","borderLeft","paddingTop","borderTop","bottom","right","marginLeft","paddingBottom","flexWrap","find","gridTemplateColumns","boxShadow","totalScansToday","rewardsClaimed","overflowX","borderCollapse","toUpperCase","flexDirection","onMouseEnter","onMouseLeave","flex","charAt","stopPropagation","_category$revenue","textTransform","_category$revenue2","_category$revenue3","activeRewards","maxWidth","cat","parseInt","createReward","addUser","awardWings","amount"],"sourceRoot":""}