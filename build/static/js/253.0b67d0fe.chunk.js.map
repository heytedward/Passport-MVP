{"version":3,"file":"static/js/253.0b67d0fe.chunk.js","mappings":"wKAEA,MAAMA,GAAWC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oUA8C1B,EA/BkBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kxBAEZI,IAAA,IAAAC,EAAAC,EAAA,IAAC,MAAEC,GAAOH,EAAA,OAAiB,QAAZC,EAAAE,EAAMC,cAAM,IAAAH,GAAO,QAAPC,EAAZD,EAAcI,aAAK,IAAAH,OAAP,EAAZA,EAAqBI,aAAc,sGAE5CC,IAAA,IAAAC,EAAAC,EAAA,IAAC,MAAEN,GAAOI,EAAA,OAAiB,QAAZC,EAAAL,EAAMC,cAAM,IAAAI,GAAQ,QAARC,EAAZD,EAAcE,cAAM,IAAAD,OAAR,EAAZA,EAAsBE,OAAQ,WAY3CC,IAAA,IAAAC,EAAAC,EAAA,IAAC,MAAEX,GAAOS,EAAA,OAAiB,QAAZC,EAAAV,EAAMC,cAAM,IAAAS,GAAQ,QAARC,EAAZD,EAAcH,cAAM,IAAAI,OAAR,EAAZA,EAAsBH,OAAQ,WAKpDlB,E,wKCjCjB,MAAMsB,GAAWC,EAAAA,EAAAA,IACfC,2CACAA,oNAGIC,EAAkBrB,EAAAA,GAAOC,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAO5BuB,EAAgBtB,EAAAA,GAAOC,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qNAS1BwB,EAAcvB,EAAAA,GAAOwB,IAAGC,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,wFAOxB2B,EAAoB1B,EAAAA,GAAOC,IAAG0B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,kNAMrB6B,GAASC,KAAKC,IAAI,GAAiB,GAAbF,EAAMG,OAKrCC,EAAiBhC,EAAAA,GAAOC,IAAGgC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,4PAe3BmC,EAAelC,EAAAA,GAAOmC,OAAMC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,+dAwB5BsC,EAAcrC,EAAAA,GAAOsC,MAAKC,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,4BAI1ByC,EAAexC,EAAAA,GAAOC,IAAGwC,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,qOAWzB2C,EAAiB1C,EAAAA,GAAOC,IAAG0C,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,mOA+NjC,EApNqBI,IAMd,IANe,OACpByC,EAAM,iBACNC,EAAgB,eAChBC,EAAc,KACdf,EAAO,IAAG,WACVgB,GAAa,GACd5C,EACC,MAAM,eAAE6C,EAAc,gBAAEC,EAAe,iBAAEC,IAAqBC,EAAAA,EAAAA,MACvDC,EAAQC,IAAaC,EAAAA,EAAAA,UAAST,IAC9BU,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,IACjCO,GAAeC,EAAAA,EAAAA,WAErBC,EAAAA,EAAAA,WAAU,KACRV,EAAUR,IACT,CAACA,IAEJ,MAeMmB,EAAeC,UACnB,IACET,GAAa,GACbE,EAAS,IACTE,EAAW,IAEXM,QAAQC,IAAI,gDAAuCvB,GAGnD,MAAMwB,EAAiB,IAAIC,QAAQ,CAACC,EAAGC,KACrCC,WAAW,IAAMD,EAAO,IAAIE,MAAM,sCAAuC,OAzBzDC,KAEpB,GAAIA,EAAK3C,KAAO,QACd,MAAM,IAAI0C,MAAM,mCAKlB,IADqB,CAAC,aAAc,YAAa,YAAa,cAC5CE,SAASD,EAAKE,MAC9B,MAAM,IAAIH,MAAM,6CAoBhBI,CAAaH,GAGb,MAAMI,EAAUJ,EAAKK,KAAKC,MAAM,KAAKC,MAC/BC,EAAQ,GAAAC,OAAMvC,EAAM,KAAAuC,OAAIC,KAAKC,MAAK,KAAAF,OAAIL,GACtCQ,EAAQ,GAAAH,OAAMvC,EAAM,KAAAuC,OAAID,GAE9BhB,QAAQC,IAAI,kCAAyB,CAAEe,WAAUI,aAGjD,MAAMC,EAAgB,WACpBrB,QAAQC,IAAI,iDAEZ,MAAQV,MAAO+B,SAAsBtE,EAASuE,QAC3CC,KAAK,WACLC,OAAOL,EAAUZ,EAAM,CACtBkB,aAAc,OACdC,QAAQ,IAGZ,GAAIL,EAEF,MADAtB,QAAQT,MAAM,+BAA2B+B,GACnC,IAAIf,MAAM,0BAADU,OAA2BK,EAAYM,UAGxD5B,QAAQC,IAAI,gDAGZ,MAAM,KAAE4B,GAAS7E,EAASuE,QACvBC,KAAK,WACLM,aAAaV,GAEVW,EAAYF,EAAKE,UACvB/B,QAAQC,IAAI,qCAA4B8B,GAGxC/B,QAAQC,IAAI,qDAEZ,MAAQ4B,KAAMG,EAAYzC,MAAO0C,SAAsBjF,EACpDwE,KAAK,iBACLG,OAAO,CACNO,GAAIxD,EACJyD,WAAYJ,EACZK,YAAY,IAAIlB,MAAOmB,eACtB,CACDC,WAAY,OAEbC,SAEH,GAAIN,EAIF,MAHAjC,QAAQT,MAAM,gCAA4B0C,GAGjB,UAArBA,EAAYO,KACR,IAAIjC,MAAM,8CACc,UAArB0B,EAAYO,KACf,IAAIjC,MAAM,6CAEV,IAAIA,MAAM,2BAADU,OAA4BgB,EAAYL,UAM3D,OAFA5B,QAAQC,IAAI,wCAAoC+B,GAEzCD,CACR,EAvDqB,GAyDhBA,QAAkB5B,QAAQsC,KAAK,CAACpB,EAAenB,IAGrDf,EAAU4C,GACVrC,EAAW,sDAGXM,QAAQC,IAAI,4CACZlB,EAAgBgD,GAGhB/B,QAAQC,IAAI,2CACZ,UACQnB,IACNkB,QAAQC,IAAI,gCACd,CAAE,MAAOyC,GACP1C,QAAQ2C,KAAK,+CAAsCD,EACrD,CAGA1C,QAAQC,IAAI,4DACZjB,IAGIJ,IACFoB,QAAQC,IAAI,mDACZrB,EAAemD,IAIjBzB,WAAW,IAAMZ,EAAW,IAAK,IAEnC,CAAE,MAAOH,GACPS,QAAQT,MAAM,oCAA2BA,GACzCC,EAASD,EAAMqC,SAAW,6CAG1BtB,WAAW,IAAMd,EAAS,IAAK,IACjC,CAAC,QACCF,GAAa,EACf,GAgBF,OACEsD,EAAAA,EAAAA,MAACzF,EAAe,CAAA0F,SAAA,EACdD,EAAAA,EAAAA,MAACxF,EAAa,CAAC0F,MAAO,CAAEC,MAAOlF,EAAMmF,OAAQnF,GAAOgF,SAAA,CACjD3D,GACC+D,EAAAA,EAAAA,KAAC5F,EAAW,CACV6F,IAAKhE,EACLiE,IAAI,cACJC,QAASA,IAAMjE,EAAU,SAG3B8D,EAAAA,EAAAA,KAACzF,EAAiB,CAACK,KAAMA,EAAKgF,SAAC,iBAGhCxD,IACC4D,EAAAA,EAAAA,KAACnF,EAAc,CAAA+E,SAAC,cAMnBhE,IACCoE,EAAAA,EAAAA,KAACjF,EAAY,CACXqF,QA1BkBC,KAAO,IAADC,EACV,QAApBA,EAAA5D,EAAa6D,eAAO,IAAAD,GAApBA,EAAsBE,SA0BhBC,SAAUrE,EAAUwD,SAEnBxD,EAAY,eAAiB,oBAIlC4D,EAAAA,EAAAA,KAAC9E,EAAW,CACVwF,IAAKhE,EACLe,KAAK,OACLkD,OAAO,4CACPC,SA9CoBC,IACxB,MAAMtD,EAAOsD,EAAMC,OAAOC,MAAM,GAC5BxD,GACFV,EAAaU,GAGfsD,EAAMC,OAAOE,MAAQ,MA2ClB1E,IAAS0D,EAAAA,EAAAA,KAAC3E,EAAY,CAAAuE,SAAEtD,IACxBE,IAAWwD,EAAAA,EAAAA,KAACzE,EAAc,CAAAqE,SAAEpD,Q,0CCrTnC,MAAMyE,EAAwBpI,EAAAA,GAAOC,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uQASlCsI,EAAoBrI,EAAAA,GAAOsI,GAAEpI,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mJAQ7BwI,EAAYvI,EAAAA,GAAOC,IAAGwB,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,kIAOtByI,EAAYxI,EAAAA,GAAOC,IAAG0B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,gfAMhB6B,GAASA,EAAM6G,MAAQ,UAAY,cAClC7G,GAASA,EAAM6G,MAAQ,EAAI,GAKvB7G,GAASA,EAAM6G,MAAQ,mBAAqB,OAC3C7G,GAASA,EAAM6G,MAAQ,gCAAkC,OAGvE7G,GAASA,EAAM8G,WAAS,8GAKxB9G,GAASA,EAAM+G,WAAS,kJAYtBC,EAAe5I,EAAAA,GAAOC,IAAGgC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,+iBAKf6B,GAASA,EAAMiH,UAAYjH,EAAMnB,YAAc,UAW7CmB,GAASA,EAAMkH,QAAU,2BAC7BlH,GAASA,EAAMmH,YAAc,qCAEpBnH,GAASA,EAAMoH,UAAY,aAUhCpH,GAASA,EAAMqH,gBAAkB,qDAK7CC,EAAYlJ,EAAAA,GAAOC,IAAGmC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,wHAOtBoJ,GAAmBnJ,EAAAA,GAAOC,IAAGsC,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,yGAM7BqJ,GAAcpJ,EAAAA,GAAOC,IAAGwC,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,2GAOxBsJ,GAAcrJ,EAAAA,GAAOsJ,KAAI3G,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,4KAQ3B6B,GAASA,EAAM6G,MAAK,oLAQpB7G,GAASA,EAAM8G,WAAS,uGAMtBa,GAAevJ,EAAAA,GAAOmC,OAAMqH,IAAAA,GAAAzJ,EAAAA,EAAAA,GAAA,miBAuB5B0J,GAAezJ,EAAAA,GAAOmC,OAAMuH,IAAAA,GAAA3J,EAAAA,EAAAA,GAAA,0kBAyB5ByC,GAAexC,EAAAA,GAAOC,IAAG0J,IAAAA,GAAA5J,EAAAA,EAAAA,GAAA,gKASzB2C,GAAiB1C,EAAAA,GAAOC,IAAG2J,IAAAA,GAAA7J,EAAAA,EAAAA,GAAA,kKAS3B8J,GAAmB7J,EAAAA,GAAOC,IAAG6J,IAAAA,GAAA/J,EAAAA,EAAAA,GAAA,+QA+LnC,GAlL4BgK,KAC1B,MAAM,KAAEC,IAAS7G,EAAAA,EAAAA,MACX,aACJ8G,EAAY,YACZC,EAAW,QACXC,EAAO,MACP1G,EAAK,aACL2G,EAAY,OACZC,EAAM,YACNC,EACAF,aAAcG,EAAkB,aAChCC,EAAY,gBACZC,EAAe,UACfC,IACEC,EAAAA,EAAAA,MAEGC,EAAmBC,IAAwBvH,EAAAA,EAAAA,WAAS,IACpDwH,EAAYC,IAAiBzH,EAAAA,EAAAA,UAAS,OACtC0H,EAAcC,IAAmB3H,EAAAA,EAAAA,UAAS,OAGjDS,EAAAA,EAAAA,WAAU,KACR,GAAI+G,EAAY,CACd,MAAMI,EAAQ1G,WAAW,IAAMuG,EAAc,MAAO,KACpD,MAAO,IAAMI,aAAaD,EAC5B,GACC,CAACJ,KAEJ/G,EAAAA,EAAAA,WAAU,KACR,GAAIiH,EAAc,CAChB,MAAME,EAAQ1G,WAAW,IAAMyG,EAAgB,MAAO,KACtD,MAAO,IAAME,aAAaD,EAC5B,GACC,CAACF,IAEJ,MAAMI,EAAoBnH,UACxB,GAAKyG,EAAUW,GAKf,IACE,MAAMC,QAAehB,EAAYe,GACZ,IAADE,EAApB,GAAID,EAAO3H,QACTsH,EAAgB,WAAD9F,OAAgD,QAAhDoG,EAAYlB,EAAOmB,KAAKC,GAAKA,EAAEC,MAAQL,UAAS,IAAAE,OAAA,EAApCA,EAAsCxG,KAAI,gBAErEgG,EAAcO,EAAO7H,OAAS,wBAElC,CAAE,MAAOkI,GACPZ,EAAc,uBAChB,MAbEA,EAAc,uBA+ClB,OAAIZ,GAEAhD,EAAAA,EAAAA,KAACiB,EAAqB,CAAArB,UACpBI,EAAAA,EAAAA,KAACkB,EAAiB,CAAAtB,SAAC,yBAMvBD,EAAAA,EAAAA,MAACsB,EAAqB,CAAArB,SAAA,EACpBI,EAAAA,EAAAA,KAACkB,EAAiB,CAAAtB,SAAC,kBAElB+D,IAAc3D,EAAAA,EAAAA,KAAC3E,GAAY,CAAAuE,SAAE+D,IAC7BE,IAAgB7D,EAAAA,EAAAA,KAACzE,GAAc,CAAAqE,SAAEiE,IACjCvH,IAAS0D,EAAAA,EAAAA,KAAC3E,GAAY,CAAAuE,SAAEtD,KAEzB0D,EAAAA,EAAAA,KAACoB,EAAS,CAAAxB,SACPsD,EAAOuB,IAAKtL,IACX,MAAMuL,EAAUnB,EAAUpK,EAAMoL,KAC1BhD,EAAYuB,IAAiB3J,EAAMoL,IACnCI,EAAe1B,IAAiB9J,EAAMoL,IAE5C,OACE5E,EAAAA,EAAAA,MAAC0B,EAAS,CAERC,MAAOoD,EACPnD,UAAWA,EACXC,UAAWmD,EACXvE,QAASA,IAAMsE,GAAWT,EAAkB9K,EAAMoL,KAAK3E,SAAA,CAEtD+E,IAAgB3E,EAAAA,EAAAA,KAAC0C,GAAgB,CAAA9C,SAAC,aAEnCI,EAAAA,EAAAA,KAACyB,EAAY,CACXC,SAAUvI,EAAMC,OAAOwL,mBACvBtL,WAAYH,EAAMC,OAAOE,WACzBqI,OAAQxI,EAAMC,OAAOyL,eACrBjD,WAAYzI,EAAMC,OAAOwI,WACzBC,SAAU1I,EAAMC,OAAO0L,mBACvBhD,eAAgB3I,EAAMC,OAAO0I,kBAG/B9B,EAAAA,EAAAA,KAAC+B,EAAS,CAAAnC,SAAEzG,EAAMyE,QAClBoC,EAAAA,EAAAA,KAACgC,GAAgB,CAAApC,SAAEzG,EAAM4L,eAEzBpF,EAAAA,EAAAA,MAACsC,GAAW,CAAArC,SAAA,EACVI,EAAAA,EAAAA,KAACkC,GAAW,CACVZ,MAAOoD,EACPnD,UAAWA,EAAU3B,SAEpB2B,EAAY,UAAYmD,EAAU,QAAU,WAG9CA,IACC/E,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEmF,QAAS,OAAQC,IAAK,OAAQrF,SAAA,EACxC2B,IACAvB,EAAAA,EAAAA,KAACoC,GAAY,CACXhC,QAAU8E,IACRA,EAAEC,kBACFlB,EAAkB9K,EAAMoL,MACxB3E,SACH,WAIHI,EAAAA,EAAAA,KAACoC,GAAY,CACXhC,QAAU8E,IAhGFhB,MAiGNgB,EAAEC,kBACER,EAtExBtB,KA5B0Ba,EAqGe/K,EAAMoL,IApG1ChB,EAAUW,GAIfd,EAAmBc,GAHjBN,EAAc,wBAqGIhE,SAED+E,EAAe,QAAU,oBAlD7BxL,EAAMoL,UA4DnBvE,EAAAA,EAAAA,KAACsC,GAAY,CACXlC,QA5GwBtD,UAC5B4G,GAAqB,GACrBE,EAAc,MACdE,EAAgB,MAEhB,IACE,MAAMK,QAAeb,IACjBa,EAAO3H,QACTsH,EAAgB,mCAEhBF,EAAcO,EAAO7H,OAAS,0BAElC,CAAE,MAAOkI,GACPZ,EAAc,yBAChB,CAAC,QACCF,GAAqB,EACvB,GA6FIjD,SAAUgD,EAAkB7D,SAE3B6D,EAAoB,eAAiB,sC,yBCpY9C,MAAM2B,GAAiBvM,EAAAA,GAAOC,IAAGH,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,8RAU3ByM,GAAaxM,EAAAA,GAAOsI,GAAEpI,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,qHAOtByC,GAAexC,EAAAA,GAAOyM,EAAChL,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,+HAOvB2M,GAAc1M,EAAAA,GAAOmC,OAAMR,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,0cAiBZC,EAAAA,GAAO2M,QAAO1K,KAAAA,IAAAlC,EAAAA,EAAAA,GAAA,oDAKdC,EAAAA,GAAO4M,QAAOxK,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,gMAWjBC,EAAAA,GAAO6M,IAAGtK,KAAAA,IAAAxC,EAAAA,EAAAA,GAAA,kOAW5B,MAAM+M,WAAsBC,EAAAA,UAC1BC,WAAAA,CAAYpL,GACVqL,MAAMrL,GAAO,KAmCfsL,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,EACV5J,MAAO,KACP6J,UAAW,QAEb,KAEFC,YAAc,KACZJ,KAAKC,SAAS,CACZC,UAAU,EACV5J,MAAO,KACP6J,UAAW,KACXE,WAAY,IAIVL,KAAKM,MAAMD,WAAa,GAC1BE,OAAOC,SAASC,UApDlBT,KAAKM,MAAQ,CACXJ,UAAU,EACV5J,MAAO,KACP6J,UAAW,KACXE,WAAY,EAEhB,CAEA,+BAAOK,CAAyBpK,GAC9B,MAAO,CAAE4J,UAAU,EACrB,CAEAS,iBAAAA,CAAkBrK,EAAO6J,GACvBpJ,QAAQT,MAAM,gEAAuDA,EAAO6J,GAE5EH,KAAKC,SAASW,IAAS,CACrBtK,MAAOA,EACP6J,UAAWA,EACXE,WAAYO,EAAUP,WAAa,KAIrCtJ,QAAQ8J,MAAM,+CACd9J,QAAQT,MAAM,SAAUA,GACxBS,QAAQT,MAAM,cAAe6J,GAC7BpJ,QAAQT,MAAM,mBAAoB6J,EAAUW,gBAC5C/J,QAAQgK,UAMV,CAwBAC,MAAAA,GACE,GAAIhB,KAAKM,MAAMJ,SAAU,CACvB,MAAMe,EAAmBjB,KAAKM,MAAMD,WAAa,EAEjD,OACE1G,EAAAA,EAAAA,MAACyF,GAAc,CAAAxF,SAAA,EACbI,EAAAA,EAAAA,KAACqF,GAAU,CAAAzF,SACRqH,EAAmB,wCAAgC,yCAGtDjH,EAAAA,EAAAA,KAAC3E,GAAY,CAAAuE,SACVqH,EACG,yEACA,gFAINtH,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEmF,QAAS,OAAQC,IAAK,MAAOiC,eAAgB,UAAWtH,SAAA,EACpEI,EAAAA,EAAAA,KAACuF,GAAW,CAACnF,QAAS4F,KAAKD,YAAYnG,SAAC,cAIvCqH,IACCjH,EAAAA,EAAAA,KAACuF,GAAW,CAACnF,QAAS4F,KAAKI,YAAYxG,SAAC,uBAM3C3F,IAWP,CAEA,OAAO+L,KAAKvL,MAAMmF,QACpB,EAGF,Y,iDCnKA,MAAMuH,GAAYtO,EAAAA,GAAOC,IAAGH,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,sWAEZI,IAAA,IAAC,MAAEG,GAAOH,EAAA,OAAKG,EAAMC,OAAOE,aAiBtC8N,GAAavO,EAAAA,GAAOmC,OAAMjC,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,4rBAmC1ByO,GAAYxO,EAAAA,GAAOyO,GAAEhN,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,gUACVW,IAAA,IAAC,MAAEJ,GAAOI,EAAA,OAAKJ,EAAMoO,WAAWC,WAAWC,SAGjD7N,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMC,OAAOsO,KAAKC,UAetCC,GAAY/O,EAAAA,GAAOC,IAAG0B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,kEAMtBiP,IAAmBhP,EAAAA,EAAAA,IAAOiP,EAAAA,EAAPjP,CAAiBiC,KAAAA,IAAAlC,EAAAA,EAAAA,GAAA,maAIpBmP,IAAA,IAAA9O,EAAA+O,EAAA,IAAC,MAAE7O,GAAO4O,EAAA,OAAiB,QAAZ9O,EAAAE,EAAMC,cAAM,IAAAH,GAAQ,QAAR+O,EAAZ/O,EAAcS,cAAM,IAAAsO,OAAR,EAAZA,EAAsBrO,OAAQ,YAiB7DsO,GAAkBpP,EAAAA,GAAOmC,OAAMC,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,8hBAUpBsP,IAAA,IAAC,MAAE/O,GAAO+O,EAAA,OAAK/O,EAAMoO,WAAWC,WAAWC,SACjDU,IAAA,IAAC,MAAEhP,GAAOgP,EAAA,OAAKhP,EAAMC,OAAOsO,KAAKC,SAgB1BS,IAAA,IAAC,MAAEjP,GAAOiP,EAAA,OAAKjP,EAAMC,OAAOC,QAIxCgP,GAAmBxP,EAAAA,GAAOC,IAAGsC,KAAAA,IAAAxC,EAAAA,EAAAA,GAAA,iXAmB7B0P,GAAazP,EAAAA,GAAOC,IAAGwC,KAAAA,IAAA1C,EAAAA,EAAAA,GAAA,kXAqBvB2P,GAAQ1P,EAAAA,GAAO2P,MAAKhN,KAAAA,IAAA5C,EAAAA,EAAAA,GAAA,qNAEf6P,IAAA,IAAC,MAAEtP,GAAOsP,EAAA,OAAKtP,EAAMC,OAAOsO,KAAKC,UAatCe,GAAQ7P,EAAAA,GAAOsC,MAAKkH,KAAAA,IAAAzJ,EAAAA,EAAAA,GAAA,2jBAIJ+P,IAAA,IAAC,MAAExP,GAAOwP,EAAA,OAAKxP,EAAMC,OAAOC,OAClCuP,IAAA,IAAC,MAAEzP,GAAOyP,EAAA,OAAKzP,EAAMC,OAAOE,YACjCuP,IAAA,IAAC,MAAE1P,GAAO0P,EAAA,OAAK1P,EAAMC,OAAOsO,KAAKC,SAkBxBmB,IAAA,IAAC,MAAE3P,GAAO2P,EAAA,OAAK3P,EAAMC,OAAOM,OAAOC,MAKnCoP,IAAA,IAAC,MAAE5P,GAAO4P,EAAA,OAAK5P,EAAMC,OAAOM,OAAOC,OAIjDqP,GAASnQ,EAAAA,GAAOsC,MAAM8N,MAAM,CAAExL,KAAM,YAA3B5E,CAAwC0J,KAAAA,IAAA3J,EAAAA,EAAAA,GAAA,6IAGrCsQ,IAAA,IAAC,MAAE/P,GAAO+P,EAAA,OAAK/P,EAAMC,OAAOM,SAQxCyP,GAAStQ,EAAAA,GAAOmC,OAAMwH,KAAAA,IAAA5J,EAAAA,EAAAA,GAAA,+kBACZwQ,IAAA,IAAC,MAAEjQ,GAAOiQ,EAAA,OAAKjQ,EAAMkQ,UAAU1B,SACpC2B,IAAA,IAAC,MAAEnQ,GAAOmQ,EAAA,OAAKnQ,EAAMC,OAAOsO,KAAKC,SAqB1B4B,IAAA,IAAC,MAAEpQ,GAAOoQ,EAAA,OAAKpQ,EAAMkQ,UAAU1P,OAc3C6P,GAAmB3Q,EAAAA,GAAOmC,OAAMyH,KAAAA,IAAA7J,EAAAA,EAAAA,GAAA,stBACtB6Q,IAAA,IAAC,MAAEtQ,GAAOsQ,EAAA,OAAKtQ,EAAMkQ,UAAU1B,SACpC+B,IAAA,IAAC,MAAEvQ,GAAOuQ,EAAA,OAAKvQ,EAAMC,OAAOsO,KAAKC,SA4B1BgC,IAAA,IAAC,MAAExQ,GAAOwQ,EAAA,OAAKxQ,EAAMkQ,UAAU1P,OAY3CiQ,IAAgB/Q,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAc8J,KAAAA,IAAA/J,EAAAA,EAAAA,GAAA,2aAe9BiR,GAAWhR,EAAAA,GAAOC,IAAGgR,KAAAA,IAAAlR,EAAAA,EAAAA,GAAA,+RAoW3B,GArVuBmR,IAKhB,IALiB,UACtBC,EAAY/P,OAAkD,cAC9DgQ,EAAgBA,OAAQ,YACxBC,EAAcjQ,UAAmD,iBACjEkQ,EAAmBA,QACpBJ,EACC,MAAM,KAAElH,EAAI,QAAEuH,EAAO,QAAEC,EAAO,eAAExO,EAAc,UAAEyO,IAActO,EAAAA,EAAAA,MACvDuO,EAAMC,IAAWrO,EAAAA,EAAAA,UAAS,YAC1BsO,EAAaC,IAAkBvO,EAAAA,EAAAA,UAAS,KACxCwO,EAAqBC,IAA0BzO,EAAAA,EAAAA,UAAS,KACxD0O,EAAsBC,IAA2B3O,EAAAA,EAAAA,WAAS,IAC1D4O,EAAWC,IAAgB7O,EAAAA,EAAAA,WAAS,IACpCF,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,OAGrCS,EAAAA,EAAAA,WAAU,KACR,GAAIiG,EAAM,CAAC,IAADoI,EAAAC,EACR,MAAMtN,GAAyB,QAAlBqN,EAAApI,EAAKsI,qBAAa,IAAAF,OAAA,EAAlBA,EAAoBG,YAAsB,QAAdF,EAAIrI,EAAKwI,aAAK,IAAAH,OAAA,EAAVA,EAAYrN,MAAM,KAAK,KAAM,OAC1E6M,EAAe9M,GACfgN,EAAuBhN,GAGvB1B,EAAUoO,GAGVgB,GACF,GACC,CAACzI,EAAMwH,EAASC,IAEnB,MAAMgB,EAAsBxO,UAC1B,GAAK+F,IAAQwH,EAEb,IAAK,IAADkB,EAAAC,EACFzO,QAAQC,IAAI,oCAAqC6F,EAAK5D,IAEtD,MAAM,MAAE3C,SAAgBvC,EAAAA,EACrBwE,KAAK,iBACLG,OAAO,CACNO,GAAI4D,EAAK5D,GACTwM,cAAgC,QAAlBF,EAAA1I,EAAKsI,qBAAa,IAAAI,OAAA,EAAlBA,EAAoBH,YAAsB,QAAdI,EAAI3I,EAAKwI,aAAK,IAAAG,OAAA,EAAVA,EAAY3N,MAAM,KAAK,KAAM,OAC3EwN,MAAOxI,EAAKwI,MACZK,YAAY,IAAIzN,MAAOmB,cACvBD,YAAY,IAAIlB,MAAOmB,gBAGvB9C,EACFS,QAAQT,MAAM,0BAA2BA,IAEzCS,QAAQC,IAAI,sCAENnB,IAEV,CAAE,MAAOS,GACPS,QAAQT,MAAM,iCAAkCA,EAClD,GAGIqP,GAAWC,EAAAA,EAAAA,MAsEjB,OACEjM,EAAAA,EAAAA,MAACwH,GAAS,CAAAvH,SAAA,EACRI,EAAAA,EAAAA,KAACqH,GAAS,CAAAzH,SAAC,uBAEXD,EAAAA,EAAAA,MAACiI,GAAS,CAAAhI,SAAA,EACRD,EAAAA,EAAAA,MAACkI,GAAgB,CAAAjI,SAAA,EACfD,EAAAA,EAAAA,MAACsI,GAAe,CACd,gBAAwB,YAATsC,EACfnK,QAASA,IAAMoK,EAAiB,YAATD,EAAqB,GAAK,WAAW3K,SAAA,CAC7D,qBAECI,EAAAA,EAAAA,KAAA,QAAAJ,SAAgB,YAAT2K,EAAqB,SAAM,cAE1B,YAATA,IACC5K,EAAAA,EAAAA,MAAC0I,GAAgB,CAAAzI,SAAA,EACfD,EAAAA,EAAAA,MAAC2I,GAAU,CAACzI,MAAO,CAAEgM,cAAe,SAAUC,WAAY,SAAUC,UAAW,UAAWnM,SAAA,EACxFI,EAAAA,EAAAA,KAACuI,GAAK,CAAC1I,MAAO,CAAEmM,aAAc,QAASpM,SAAC,qBACxCI,EAAAA,EAAAA,KAACiM,EAAY,CACXxQ,OAAY,OAAJoH,QAAI,IAAJA,OAAI,EAAJA,EAAM5D,GACdvD,iBAAkB4O,EAClB3O,eAAgBmB,UACdC,QAAQC,IAAI,gDAAuCkP,GAGnDhQ,EAAUgQ,GAGV,UACQrQ,IACNkB,QAAQC,IAAI,wCACd,CAAE,MAAOV,GACPS,QAAQT,MAAM,oCAAgCA,EAChD,CAGAe,WAAW,KACTN,QAAQC,IAAI,qCACX,MAELpC,KAAM,GACNgB,YAAY,QAIhB+D,EAAAA,EAAAA,MAAC2I,GAAU,CAAA1I,SAAA,EACTI,EAAAA,EAAAA,KAACuI,GAAK,CAAC4D,QAAQ,cAAavM,SAAC,kBAC7BD,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEmF,QAAS,OAAQC,IAAK,MAAO6G,WAAY,SAAUhM,MAAO,QAASF,SAAA,EAC/EI,EAAAA,EAAAA,KAAC0I,GAAK,CACJzJ,GAAG,cACH+B,MAAOyJ,EACP7J,SAAUsE,GAAKwF,EAAexF,EAAEpE,OAAOE,OACvCoL,UAAWlH,IAC8E,IAADmH,EAAxE,UAAVnH,EAAEX,KAAmBsG,GAAwBJ,IAAgBE,GAC/DzF,EAAEoH,iBAEkB,QAApBD,EAAAnH,EAAEpE,OAAOyL,mBAAW,IAAAF,GAApBA,EAAsB7L,SACH,WAAV0E,EAAEX,KAAoBsG,IAC/B3F,EAAEoH,iBAEF5B,EAAeC,GACfG,GAAwB,KAG5B0B,YAAY,0BACZ/L,UAAWoK,EACXhL,MAAO,CACL4M,YAAahC,IAAgBE,EACzB,8BACA+B,EACJC,UAAWlC,IAAgBE,EACvB,sCACA+B,EACJE,QAAS/B,EAAuB,EAAI,GACpCgC,OAAQhC,EAAuB,OAAS,cAG5C7K,EAAAA,EAAAA,KAACwJ,GAAgB,CACf/L,KAAK,SACL2C,QAAStD,UACP,GAAK+N,EAGE,GAAIJ,IAAgBE,EAEzB,IACE,MAAM,MAAErO,SAAgBvC,EAAAA,EACrBwE,KAAK,iBACLG,OAAO,CACNO,GAAI4D,EAAK5D,GACTwM,aAAchB,EACdtL,YAAY,IAAIlB,MAAOmB,gBAG3B,GAAI9C,EAAO,MAAMA,EAGjB,MAAQA,MAAOwQ,SAAwB/S,EAAAA,EAASgT,KAAKC,WAAW,CAC9DpO,KAAM,CAAEwM,SAAUX,KAGpB,GAAIqC,EAAe,MAAMA,EAEzBlC,EAAuBH,GACvBK,GAAwB,GACxBmC,MAAM,qCACR,CAAE,MAAO3Q,GACPS,QAAQT,MAAM,+BAAgCA,GAC9C2Q,MAAM,mDACR,MAGAvC,EAAeC,GACfG,GAAwB,QA/BxBA,GAAwB,IAkC5BjL,MAAO,CACLvG,WAAYuR,GAAwBJ,IAAgBE,EAChD,yBACA,yBACJuC,OAAQrC,GAAwBJ,IAAgBE,EAC5C,mCACA,mCACJwC,MAAOtC,GAAwBJ,IAAgBE,EAAsB,OAAS,OAC9EyC,WAAYvC,GAAwBJ,IAAgBE,EAAsB,OAAS,UAErFlK,SAAUoK,GAAwBJ,IAAgBE,EAClD0C,MAAOxC,EAAwBJ,IAAgBE,EAAsB,OAAS,SAAY,OAAO/K,SAEhGiL,EAAwBJ,IAAgBE,EAAsB,SAAM,SAAO,wBAKlFhL,EAAAA,EAAAA,MAAC2I,GAAU,CAAA1I,SAAA,EACTI,EAAAA,EAAAA,KAACuI,GAAK,CAAA3I,SAAC,WACPI,EAAAA,EAAAA,KAAA,QAAMH,MAAO,CAAEsN,MAAO,UAAWG,eAAgB,aAAc1N,UACxD,OAAJiD,QAAI,IAAJA,OAAI,EAAJA,EAAMwI,QAAS,sBAIpB1L,EAAAA,EAAAA,MAAC2I,GAAU,CAAA1I,SAAA,EACTI,EAAAA,EAAAA,KAACuI,GAAK,CAAC4D,QAAQ,YAAWvM,SAAC,uBAC3BI,EAAAA,EAAAA,KAACgJ,GAAM,CACL/J,GAAG,YACHsO,QAASxC,EACTnK,SAAUsE,GAAK8F,EAAa9F,EAAEpE,OAAOyM,eAIzC5N,EAAAA,EAAAA,MAAC2I,GAAU,CAAA1I,SAAA,EACTI,EAAAA,EAAAA,KAACuI,GAAK,CAAA3I,SAAC,uBACPI,EAAAA,EAAAA,KAACmJ,GAAM,CAAC1L,KAAK,SAAQmC,SAAC,uBAGvBiD,GACClD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACkK,GAAQ,CAAAjK,SAAA,EACPI,EAAAA,EAAAA,KAAA,UAAAJ,SAAQ,kBAAsB,IAAEiD,EAAKwI,UAIvCrL,EAAAA,EAAAA,KAAC2F,GAAa,CAAA/F,UACZI,EAAAA,EAAAA,KAAC4C,GAAmB,OAGtB5C,EAAAA,EAAAA,KAAC4J,GAAa,CACZxJ,QA1OGtD,UACnB,IACEC,QAAQC,IAAI,yCACZD,QAAQC,IAAI,wBAAyB6F,GACrC9F,QAAQC,IAAI,qBAAsBoN,GAGlC,MAAMnN,EAAiB,IAAIC,QAAQ,CAACC,EAAGC,KACrCC,WAAW,IAAMD,EAAO,IAAIE,MAAM,qCAAsC,OAI1E,GAAI8M,EAAS,CACXrN,QAAQC,IAAI,yCACZ,MAAMmH,QAAejH,QAAQsC,KAAK,CAChC4K,IACAnN,IAEFF,QAAQC,IAAI,mBAAoBmH,SAG1BqJ,EAAAA,EAAAA,MAENzQ,QAAQC,IAAI,8CACZ2O,EAAS,IACX,KAAO,CACL5O,QAAQC,IAAI,4DAEZ,MAAM,MAAEV,SAAgBY,QAAQsC,KAAK,CACnCzF,EAAAA,EAASgT,KAAK3C,UACdnN,IAEF,GAAIX,EAAO,MAAMA,QAGXkR,EAAAA,EAAAA,MAENzQ,QAAQC,IAAI,8CACZ2O,EAAS,IACX,CACF,CAAE,MAAOrP,GAIP,GAHAS,QAAQT,MAAM,4BAAwBA,GAGlCA,EAAMqC,QAAQnB,SAAS,WAKzB,OAJAT,QAAQC,IAAI,mEAGZyQ,EAAAA,EAAAA,MAKF1Q,QAAQC,IAAI,wDACZ,UACQwQ,EAAAA,EAAAA,OACNE,EAAAA,EAAAA,KACF,CAAE,MAAOC,GACP5Q,QAAQT,MAAM,2CAA4CqR,IAC1DF,EAAAA,EAAAA,KACF,CACF,GA6KsC7N,SACvB,iBAKHI,EAAAA,EAAAA,KAACmJ,GAAM,CACLtJ,MAAO,CAAE+N,UAAW,GAAI9N,MAAO,QAC/BM,QAlLIyN,KAClBlC,EAAS,WAiL0B/L,SACtB,mBAQTD,EAAAA,EAAAA,MAACkI,GAAgB,CAAAjI,SAAA,EACfD,EAAAA,EAAAA,MAACsI,GAAe,CACd,gBAAwB,UAATsC,EACfnK,QAASA,IAAMoK,EAAiB,UAATD,EAAmB,GAAK,SAAS3K,SAAA,CACzD,kBAECI,EAAAA,EAAAA,KAAA,QAAAJ,SAAgB,UAAT2K,EAAmB,SAAM,cAExB,UAATA,IACCvK,EAAAA,EAAAA,KAACqI,GAAgB,CAAAzI,UACfD,EAAAA,EAAAA,MAAC2I,GAAU,CAAA1I,SAAA,EACTI,EAAAA,EAAAA,KAACuI,GAAK,CAAA3I,SAAC,eACPI,EAAAA,EAAAA,KAACgJ,GAAM,CACLvL,KAAK,WACL8P,QAAuB,SAAdvD,EACTpJ,SAAUqJ,aAQpBjK,EAAAA,EAAAA,KAACoH,GAAU,CAAChH,QAASA,IAAMuL,EAAS,YAAY/L,SAAC,iC","sources":["components/GlassCard.jsx","components/AvatarUpload.jsx","components/ThemeTestingSection.jsx","components/ErrorBoundary.jsx","screens/SettingsScreen.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst goldGlow = keyframes`\n  0%, 100% { \n    box-shadow: \n      0 0 12px 0 rgba(255,215,0,0.15),\n      0 0 24px 0 rgba(255,215,0,0.08),\n      inset 0 1px 0 rgba(255,215,0,0.1);\n  }\n  50% { \n    box-shadow: \n      0 0 20px 0 rgba(255,215,0,0.3),\n      0 0 40px 0 rgba(255,215,0,0.15),\n      inset 0 1px 0 rgba(255,215,0,0.2);\n  }\n`;\n\nconst GlassCard = styled.div`\n  position: relative;\n  background: ${({ theme }) => theme.colors?.glass?.background || 'linear-gradient(135deg, rgba(20,20,20,0.95) 0%, rgba(30,30,30,0.90) 50%, rgba(15,15,15,0.98) 100%)'};\n  border-radius: 20px;\n  border: 3px solid ${({ theme }) => theme.colors?.accent?.gold || '#FFD700'};\n  box-shadow: \n    0 0 12px 0 rgba(255,215,0,0.15),\n    0 0 24px 0 rgba(255,215,0,0.08),\n    inset 0 1px 0 rgba(255,215,0,0.1);\n  backdrop-filter: blur(18px);\n  -webkit-backdrop-filter: blur(18px);\n  overflow: hidden;\n  transition: transform 0.18s cubic-bezier(0.4,0,0.2,1), box-shadow 0.18s, border 0.18s;\n  \n  &:hover {\n    transform: translateY(-3px) scale(1.02);\n    border: 3px solid ${({ theme }) => theme.colors?.accent?.gold || '#FFD700'};\n    box-shadow: \n      0 0 20px 0 rgba(255,215,0,0.3),\n      0 0 40px 0 rgba(255,215,0,0.15),\n      inset 0 1px 0 rgba(255,215,0,0.2);\n    animation: ${goldGlow} 2s ease-in-out infinite;\n  }\n  \n  /* Content positioning */\n  > * {\n    position: relative;\n    z-index: 1;\n  }\n`;\n\nexport default GlassCard; ","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { createClient } from '@supabase/supabase-js';\nimport { useAuth } from '../hooks/useAuth';\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nconst AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst AvatarWrapper = styled.div`\n  position: relative;\n  border-radius: 50%;\n  overflow: hidden;\n  background: linear-gradient(135deg, #1a1a2e, #16213e);\n  border: 2px solid #FFB000;\n  box-shadow: 0 0 10px rgba(255, 176, 0, 0.2);\n`;\n\nconst AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n`;\n\nconst AvatarPlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${props => Math.max(20, props.size * 0.4)}px;\n  color: #FFB000;\n  background: linear-gradient(135deg, #1a1a2e, #16213e);\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  color: #FFB000;\n  border-radius: 50%;\n`;\n\nconst UploadButton = styled.button`\n  background: linear-gradient(135deg, #FFB000, #FFCA28);\n  color: #000;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 25px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 0.9rem;\n  min-width: 120px;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(255, 176, 0, 0.3);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst ErrorMessage = styled.div`\n  color: #ff6b6b;\n  font-size: 0.85rem;\n  text-align: center;\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  background: rgba(255, 107, 107, 0.1);\n  border-radius: 8px;\n  border: 1px solid rgba(255, 107, 107, 0.3);\n`;\n\nconst SuccessMessage = styled.div`\n  color: #51cf66;\n  font-size: 0.85rem;\n  text-align: center;\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  background: rgba(81, 207, 102, 0.1);\n  border-radius: 8px;\n  border: 1px solid rgba(81, 207, 102, 0.3);\n`;\n\nconst AvatarUpload = ({ \n  userId, \n  currentAvatarUrl, \n  onAvatarUpdate, \n  size = 120,\n  showButton = true \n}) => {\n  const { refreshProfile, updateAvatarUrl, refreshAvatarUrl } = useAuth();\n  const [avatar, setAvatar] = useState(currentAvatarUrl);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const fileInputRef = useRef();\n\n  useEffect(() => {\n    setAvatar(currentAvatarUrl);\n  }, [currentAvatarUrl]);\n\n  const validateFile = (file) => {\n    // Check file size (max 5MB)\n    if (file.size > 5 * 1024 * 1024) {\n      throw new Error('File size must be less than 5MB');\n    }\n\n    // Check file type\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\n    if (!allowedTypes.includes(file.type)) {\n      throw new Error('Please select a JPEG, PNG, or WebP image');\n    }\n\n    return true;\n  };\n\n  const uploadAvatar = async (file) => {\n    try {\n      setIsLoading(true);\n      setError('');\n      setSuccess('');\n\n      console.log('🦋 Starting avatar upload for user:', userId);\n\n      // Add timeout to prevent stuck loading state\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('Upload timeout - please try again')), 30000);\n      });\n\n      // Validate file\n      validateFile(file);\n\n      // Generate unique filename\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${userId}-${Date.now()}.${fileExt}`;\n      const filePath = `${userId}/${fileName}`;\n\n      console.log('📁 Upload parameters:', { fileName, filePath });\n\n      // Upload to Supabase storage with timeout\n      const uploadPromise = (async () => {\n        console.log('🚀 Uploading to Supabase storage...');\n        \n        const { error: uploadError } = await supabase.storage\n          .from('avatars')\n          .upload(filePath, file, {\n            cacheControl: '3600',\n            upsert: true // Overwrite if exists\n          });\n\n        if (uploadError) {\n          console.error('❌ Storage upload error:', uploadError);\n          throw new Error(`Storage upload failed: ${uploadError.message}`);\n        }\n\n        console.log('✅ File uploaded to storage successfully');\n\n        // Get public URL\n        const { data } = supabase.storage\n          .from('avatars')\n          .getPublicUrl(filePath);\n\n        const publicUrl = data.publicUrl;\n        console.log('🔗 Public URL generated:', publicUrl);\n\n        // Update user profile with new avatar URL\n        console.log('💾 Updating user profile in database...');\n        \n        const { data: updateData, error: updateError } = await supabase\n          .from('user_profiles')\n          .upsert({ \n            id: userId,\n            avatar_url: publicUrl,\n            updated_at: new Date().toISOString()\n          }, {\n            onConflict: 'id'\n          })\n          .select();\n\n        if (updateError) {\n          console.error('❌ Database update error:', updateError);\n          \n          // Provide specific error messages\n          if (updateError.code === '42501') {\n            throw new Error('Permission denied - please contact support');\n          } else if (updateError.code === '23505') {\n            throw new Error('Profile already exists - please try again');\n          } else {\n            throw new Error(`Database update failed: ${updateError.message}`);\n          }\n        }\n\n        console.log('✅ Database updated successfully:', updateData);\n\n        return publicUrl;\n      })();\n\n      const publicUrl = await Promise.race([uploadPromise, timeoutPromise]);\n\n      // Update local state immediately\n      setAvatar(publicUrl);\n      setSuccess('Profile picture updated successfully! 🦋');\n\n      // Update useAuth context immediately\n      console.log('🔄 Updating useAuth context...');\n      updateAvatarUrl(publicUrl);\n\n      // Refresh the auth context to ensure consistency\n      console.log('🔄 Refreshing auth context...');\n      try {\n        await refreshProfile();\n        console.log('✅ Auth context refreshed');\n      } catch (refreshError) {\n        console.warn('⚠️ Failed to refresh auth context:', refreshError);\n      }\n\n      // Refresh avatar URL with cache busting\n      console.log('🔄 Refreshing avatar URL with cache busting...');\n      refreshAvatarUrl();\n\n      // Call callback if provided\n      if (onAvatarUpdate) {\n        console.log('📞 Calling onAvatarUpdate callback...');\n        onAvatarUpdate(publicUrl);\n      }\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccess(''), 3000);\n\n    } catch (error) {\n      console.error('💥 Avatar upload error:', error);\n      setError(error.message || 'Failed to upload image. Please try again.');\n      \n      // Clear error after 5 seconds\n      setTimeout(() => setError(''), 5000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      uploadAvatar(file);\n    }\n    // Reset input value to allow selecting the same file again\n    event.target.value = '';\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  return (\n    <AvatarContainer>\n      <AvatarWrapper style={{ width: size, height: size }}>\n        {avatar ? (\n          <AvatarImage \n            src={avatar} \n            alt=\"User avatar\" \n            onError={() => setAvatar(null)}\n          />\n        ) : (\n          <AvatarPlaceholder size={size}>🦋</AvatarPlaceholder>\n        )}\n        \n        {isLoading && (\n          <LoadingOverlay>\n            ⏳\n          </LoadingOverlay>\n        )}\n      </AvatarWrapper>\n\n      {showButton && (\n        <UploadButton \n          onClick={handleButtonClick}\n          disabled={isLoading}\n        >\n          {isLoading ? 'Uploading...' : 'Change Picture'}\n        </UploadButton>\n      )}\n\n      <HiddenInput\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/jpeg,image/jpg,image/png,image/webp\"\n        onChange={handleFileSelect}\n      />\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      {success && <SuccessMessage>{success}</SuccessMessage>}\n    </AvatarContainer>\n  );\n};\n\nexport default AvatarUpload; ","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from '../hooks/useTheme';\nimport { useAuth } from '../hooks/useAuth';\nimport { supabase } from '../utils/supabaseClient';\n\n// Styled Components for Theme Testing Section\nconst ThemeTestingContainer = styled.div`\n  margin: 20px 0;\n  padding: 20px;\n  background: var(--theme-card-bg, rgba(255, 255, 255, 0.1));\n  border: var(--theme-card-border, 1px solid rgba(255, 255, 255, 0.2));\n  border-radius: 16px;\n  backdrop-filter: var(--theme-card-blur, blur(10px));\n`;\n\nconst ThemeTestingTitle = styled.h3`\n  color: var(--theme-text-primary, #FFFFFF);\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst ThemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 16px;\n  margin-bottom: 20px;\n`;\n\nconst ThemeCard = styled.div`\n  position: relative;\n  background: var(--theme-card-bg, rgba(255, 255, 255, 0.1));\n  border: var(--theme-card-border, 1px solid rgba(255, 255, 255, 0.2));\n  border-radius: 12px;\n  padding: 16px;\n  cursor: ${props => props.owned ? 'pointer' : 'not-allowed'};\n  opacity: ${props => props.owned ? 1 : 0.6};\n  transition: all 0.3s ease;\n  backdrop-filter: var(--theme-card-blur, blur(10px));\n\n  &:hover {\n    transform: ${props => props.owned ? 'translateY(-2px)' : 'none'};\n    box-shadow: ${props => props.owned ? '0 8px 25px rgba(0, 0, 0, 0.3)' : 'none'};\n  }\n\n  ${props => props.isCurrent && `\n    border: 2px solid var(--theme-accent, #FFB000);\n    box-shadow: 0 0 20px rgba(255, 176, 0, 0.3);\n  `}\n\n  ${props => props.isPreview && `\n    border: 2px solid var(--theme-accent, #FFB000);\n    box-shadow: 0 0 20px rgba(255, 176, 0, 0.5);\n    animation: pulse 2s infinite;\n  `}\n\n  @keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.8; }\n  }\n`;\n\nconst ThemePreview = styled.div`\n  width: 100%;\n  height: 120px;\n  border-radius: 8px;\n  margin-bottom: 12px;\n  background: ${props => props.gradient || props.background || '#0A0A0A'};\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    right: 8px;\n    height: 20px;\n    background: ${props => props.cardBg || 'rgba(255, 255, 255, 0.1)'};\n    border: ${props => props.cardBorder || '1px solid rgba(255, 255, 255, 0.2)'};\n    border-radius: 4px;\n    backdrop-filter: ${props => props.cardBlur || 'blur(10px)'};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 8px;\n    left: 8px;\n    right: 8px;\n    height: 32px;\n    background: ${props => props.buttonGradient || 'linear-gradient(135deg, #FFB000 0%, #FFD700 100%)'};\n    border-radius: 6px;\n  }\n`;\n\nconst ThemeName = styled.div`\n  color: var(--theme-text-primary, #FFFFFF);\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 4px;\n`;\n\nconst ThemeDescription = styled.div`\n  color: var(--theme-text-secondary, #CCCCCC);\n  font-size: 0.875rem;\n  margin-bottom: 8px;\n`;\n\nconst ThemeStatus = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 8px;\n`;\n\nconst StatusBadge = styled.span`\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.75rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n\n  ${props => props.owned ? `\n    background: var(--theme-success, #10B981);\n    color: white;\n  ` : `\n    background: var(--theme-text-muted, #999999);\n    color: var(--theme-text-primary, #FFFFFF);\n  `}\n\n  ${props => props.isCurrent && `\n    background: var(--theme-accent, #FFB000);\n    color: var(--theme-text-primary, #FFFFFF);\n  `}\n`;\n\nconst ActionButton = styled.button`\n  background: var(--theme-button-gradient, linear-gradient(135deg, #FFB000 0%, #FFD700 100%));\n  color: var(--theme-text-primary, #FFFFFF);\n  border: none;\n  border-radius: 6px;\n  padding: 6px 12px;\n  font-size: 0.75rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: var(--theme-button-hover, linear-gradient(135deg, #E69A00 0%, #E6C200 100%));\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst UnlockButton = styled.button`\n  background: var(--theme-button-gradient, linear-gradient(135deg, #FFB000 0%, #FFD700 100%));\n  color: var(--theme-text-primary, #FFFFFF);\n  border: none;\n  border-radius: 8px;\n  padding: 12px 24px;\n  font-size: 0.875rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 100%;\n  margin-top: 16px;\n\n  &:hover {\n    background: var(--theme-button-hover, linear-gradient(135deg, #E69A00 0%, #E6C200 100%));\n    transform: translateY(-2px);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background: var(--theme-error, #EF4444);\n  color: white;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  font-size: 0.875rem;\n`;\n\nconst SuccessMessage = styled.div`\n  background: var(--theme-success, #10B981);\n  color: white;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  font-size: 0.875rem;\n`;\n\nconst PreviewIndicator = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: var(--theme-accent, #FFB000);\n  color: var(--theme-text-primary, #FFFFFF);\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst ThemeTestingSection = () => {\n  const { user } = useAuth();\n  const {\n    currentTheme,\n    ownedThemes,\n    loading,\n    error,\n    previewTheme,\n    themes,\n    switchTheme,\n    previewTheme: previewThemeAction,\n    clearPreview,\n    unlockAllThemes,\n    ownsTheme\n  } = useTheme();\n\n  const [isUnlockingThemes, setIsUnlockingThemes] = useState(false);\n  const [localError, setLocalError] = useState(null);\n  const [localSuccess, setLocalSuccess] = useState(null);\n\n  // Clear messages after 3 seconds\n  useEffect(() => {\n    if (localError) {\n      const timer = setTimeout(() => setLocalError(null), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [localError]);\n\n  useEffect(() => {\n    if (localSuccess) {\n      const timer = setTimeout(() => setLocalSuccess(null), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [localSuccess]);\n\n  const handleThemeSelect = async (themeKey) => {\n    if (!ownsTheme(themeKey)) {\n      setLocalError('Theme not unlocked');\n      return;\n    }\n\n    try {\n      const result = await switchTheme(themeKey);\n      if (result.success) {\n        setLocalSuccess(`Applied ${themes.find(t => t.key === themeKey)?.name} theme`);\n      } else {\n        setLocalError(result.error || 'Failed to apply theme');\n      }\n    } catch (err) {\n      setLocalError('Error applying theme');\n    }\n  };\n\n  const handleThemePreview = (themeKey) => {\n    if (!ownsTheme(themeKey)) {\n      setLocalError('Theme not unlocked');\n      return;\n    }\n    previewThemeAction(themeKey);\n  };\n\n  const handleUnlockAllThemes = async () => {\n    setIsUnlockingThemes(true);\n    setLocalError(null);\n    setLocalSuccess(null);\n\n    try {\n      const result = await unlockAllThemes();\n      if (result.success) {\n        setLocalSuccess('All themes unlocked for testing');\n      } else {\n        setLocalError(result.error || 'Failed to unlock themes');\n      }\n    } catch (err) {\n      setLocalError('Error unlocking themes');\n    } finally {\n      setIsUnlockingThemes(false);\n    }\n  };\n\n  const handleClearPreview = () => {\n    clearPreview();\n  };\n\n  if (loading) {\n    return (\n      <ThemeTestingContainer>\n        <ThemeTestingTitle>Loading themes...</ThemeTestingTitle>\n      </ThemeTestingContainer>\n    );\n  }\n\n  return (\n    <ThemeTestingContainer>\n      <ThemeTestingTitle>Theme Testing</ThemeTestingTitle>\n      \n      {localError && <ErrorMessage>{localError}</ErrorMessage>}\n      {localSuccess && <SuccessMessage>{localSuccess}</SuccessMessage>}\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <ThemeGrid>\n        {themes.map((theme) => {\n          const isOwned = ownsTheme(theme.key);\n          const isCurrent = currentTheme === theme.key;\n          const isPreviewing = previewTheme === theme.key;\n\n          return (\n            <ThemeCard\n              key={theme.key}\n              owned={isOwned}\n              isCurrent={isCurrent}\n              isPreview={isPreviewing}\n              onClick={() => isOwned && handleThemeSelect(theme.key)}\n            >\n              {isPreviewing && <PreviewIndicator>Preview</PreviewIndicator>}\n              \n              <ThemePreview\n                gradient={theme.colors.backgroundGradient}\n                background={theme.colors.background}\n                cardBg={theme.colors.cardBackground}\n                cardBorder={theme.colors.cardBorder}\n                cardBlur={theme.colors.cardBackdropFilter}\n                buttonGradient={theme.colors.buttonGradient}\n              />\n              \n              <ThemeName>{theme.name}</ThemeName>\n              <ThemeDescription>{theme.description}</ThemeDescription>\n              \n              <ThemeStatus>\n                <StatusBadge \n                  owned={isOwned} \n                  isCurrent={isCurrent}\n                >\n                  {isCurrent ? 'Current' : isOwned ? 'Owned' : 'Locked'}\n                </StatusBadge>\n                \n                {isOwned && (\n                  <div style={{ display: 'flex', gap: '4px' }}>\n                    {!isCurrent && (\n                      <ActionButton\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleThemeSelect(theme.key);\n                        }}\n                      >\n                        Apply\n                      </ActionButton>\n                    )}\n                    <ActionButton\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (isPreviewing) {\n                          handleClearPreview();\n                        } else {\n                          handleThemePreview(theme.key);\n                        }\n                      }}\n                    >\n                      {isPreviewing ? 'Clear' : 'Preview'}\n                    </ActionButton>\n                  </div>\n                )}\n              </ThemeStatus>\n            </ThemeCard>\n          );\n        })}\n      </ThemeGrid>\n\n      <UnlockButton \n        onClick={handleUnlockAllThemes} \n        disabled={isUnlockingThemes}\n      >\n        {isUnlockingThemes ? 'Unlocking...' : 'Unlock All Themes for Testing'}\n      </UnlockButton>\n    </ThemeTestingContainer>\n  );\n};\n\nexport default ThemeTestingSection; ","import React from 'react';\nimport styled from 'styled-components';\n\nconst ErrorContainer = styled.div`\n  background: var(--theme-card-bg, rgba(255, 255, 255, 0.1));\n  border: var(--theme-card-border, 1px solid rgba(255, 255, 255, 0.2));\n  border-radius: 12px;\n  padding: 20px;\n  margin: 16px 0;\n  backdrop-filter: var(--theme-card-blur, blur(10px));\n  text-align: center;\n`;\n\nconst ErrorTitle = styled.h3`\n  color: var(--theme-error, #EF4444);\n  font-size: 1.125rem;\n  font-weight: 600;\n  margin-bottom: 8px;\n`;\n\nconst ErrorMessage = styled.p`\n  color: var(--theme-text-secondary, #CCCCCC);\n  font-size: 0.875rem;\n  margin-bottom: 16px;\n  line-height: 1.5;\n`;\n\nconst RetryButton = styled.button`\n  background: var(--theme-button-gradient, linear-gradient(135deg, #FFB000 0%, #FFD700 100%));\n  color: var(--theme-text-primary, #FFFFFF);\n  border: none;\n  border-radius: 8px;\n  padding: 8px 16px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: var(--theme-button-hover, linear-gradient(135deg, #E69A00 0%, #E6C200 100%));\n    transform: translateY(-1px);\n  }\n`;\n\nconst ErrorDetails = styled.details`\n  margin-top: 12px;\n  text-align: left;\n`;\n\nconst ErrorSummary = styled.summary`\n  color: var(--theme-text-muted, #999999);\n  font-size: 0.75rem;\n  cursor: pointer;\n  margin-bottom: 8px;\n  \n  &:hover {\n    color: var(--theme-text-secondary, #CCCCCC);\n  }\n`;\n\nconst ErrorCode = styled.pre`\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 4px;\n  padding: 8px;\n  font-size: 0.75rem;\n  color: var(--theme-text-muted, #999999);\n  overflow-x: auto;\n  white-space: pre-wrap;\n  word-break: break-word;\n`;\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      hasError: false, \n      error: null, \n      errorInfo: null,\n      errorCount: 0\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('🦋 Monarch Passport Error Boundary caught an error:', error, errorInfo);\n    \n    this.setState(prevState => ({\n      error: error,\n      errorInfo: errorInfo,\n      errorCount: prevState.errorCount + 1\n    }));\n\n    // Log error to console for debugging\n    console.group('🦋 Monarch Passport Error Details');\n    console.error('Error:', error);\n    console.error('Error Info:', errorInfo);\n    console.error('Component Stack:', errorInfo.componentStack);\n    console.groupEnd();\n\n    // In production, you might want to send this to an error reporting service\n    if (process.env.NODE_ENV === 'production') {\n      // Example: sendErrorToService(error, errorInfo);\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({ \n      hasError: false, \n      error: null, \n      errorInfo: null \n    });\n  };\n\n  handleReset = () => {\n    this.setState({ \n      hasError: false, \n      error: null, \n      errorInfo: null,\n      errorCount: 0\n    });\n    \n    // Force a page reload if there have been multiple errors\n    if (this.state.errorCount > 2) {\n      window.location.reload();\n    }\n  };\n\n  render() {\n    if (this.state.hasError) {\n      const isMultipleErrors = this.state.errorCount > 1;\n      \n      return (\n        <ErrorContainer>\n          <ErrorTitle>\n            {isMultipleErrors ? '🦋 Multiple Errors Detected' : '🦋 Monarch Passport Error'}\n          </ErrorTitle>\n          \n          <ErrorMessage>\n            {isMultipleErrors \n              ? 'Something went wrong multiple times. This might be a persistent issue.'\n              : 'Something went wrong with this component. This might be a temporary issue.'\n            }\n          </ErrorMessage>\n\n          <div style={{ display: 'flex', gap: '8px', justifyContent: 'center' }}>\n            <RetryButton onClick={this.handleRetry}>\n              Try Again\n            </RetryButton>\n            \n            {isMultipleErrors && (\n              <RetryButton onClick={this.handleReset}>\n                Reset & Reload\n              </RetryButton>\n            )}\n          </div>\n\n          {process.env.NODE_ENV === 'development' && this.state.error && (\n            <ErrorDetails>\n              <ErrorSummary>Show Error Details (Development Only)</ErrorSummary>\n              <ErrorCode>\n                {this.state.error.toString()}\n                {this.state.errorInfo && this.state.errorInfo.componentStack}\n              </ErrorCode>\n            </ErrorDetails>\n          )}\n        </ErrorContainer>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary; ","import React, { useState, useRef, useEffect } from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport GlassCard from '../components/GlassCard';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { performAuthCleanup, forcePageReload, emergencyCleanup } from '../utils/authCleanup';\n\nimport { supabase } from '../utils/supabaseClient';\nimport AvatarUpload from '../components/AvatarUpload';\nimport ThemeTestingSection from '../components/ThemeTestingSection';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 20px 16px 120px 16px;\n  position: relative;\n  \n  @media (max-width: 768px) {\n    padding: 16px 12px 100px 12px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 12px 8px 80px 8px;\n  }\n`;\n\nconst BackButton = styled.button`\n  background: linear-gradient(135deg, #FFB000 0%, #FF9F1C 100%);\n  color: #000;\n  border: none;\n  border-radius: 12px;\n  padding: 12px 20px;\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all 0.2s ease;\n  font-size: 1rem;\n  width: 100%;\n  justify-content: center;\n  margin-top: 24px;\n  \n  @media (max-width: 768px) {\n    padding: 10px 16px;\n    font-size: 0.9rem;\n    margin-top: 20px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 12px 18px;\n    font-size: 0.85rem;\n    margin-top: 16px;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(255, 176, 0, 0.3);\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-family: ${({ theme }) => theme.typography.fontFamily.heading};\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 60px 0 32px 0;\n  text-align: center;\n  \n  @media (max-width: 768px) {\n    font-size: 1.75rem;\n    margin: 50px 0 24px 0;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 1.5rem;\n    margin: 40px 0 20px 0;\n  }\n`;\n\nconst Accordion = styled.div`\n  width: 100%;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst AccordionSection = styled(GlassCard)`\n  margin-bottom: 24px;\n  border-radius: 18px;\n  overflow: hidden;\n  border: 3px solid ${({ theme }) => theme.colors?.accent?.gold || '#FFD700'};\n  box-shadow: \n    0 0 20px 0 rgba(255,215,0,0.2),\n    0 0 40px 0 rgba(255,215,0,0.1),\n    inset 0 1px 0 rgba(255,215,0,0.15);\n  \n  @media (max-width: 768px) {\n    margin-bottom: 20px;\n    border-radius: 16px;\n  }\n  \n  @media (max-width: 480px) {\n    margin-bottom: 16px;\n    border-radius: 14px;\n  }\n`;\n\nconst AccordionHeader = styled.button`\n  width: 100%;\n  background: none;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px 28px;\n  font-size: 1.25rem;\n  font-family: ${({ theme }) => theme.typography.fontFamily.heading};\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-weight: 700;\n  cursor: pointer;\n  transition: background 0.2s;\n  \n  @media (max-width: 768px) {\n    padding: 20px 24px;\n    font-size: 1.1rem;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 18px 20px;\n    font-size: 1rem;\n  }\n  \n  &:hover, &:focus {\n    background: ${({ theme }) => theme.colors.glass};\n  }\n`;\n\nconst AccordionContent = styled.div`\n  padding: 0 28px 24px 28px;\n  background: none;\n  animation: fadeIn 0.3s;\n  \n  @media (max-width: 768px) {\n    padding: 0 24px 20px 24px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 0 20px 16px 20px;\n  }\n  \n  @keyframes fadeIn {\n    from { opacity: 0; transform: translateY(-8px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n`;\n\nconst SettingRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 18px;\n  gap: 18px;\n  \n  @media (max-width: 768px) {\n    margin-bottom: 16px;\n    gap: 16px;\n    flex-wrap: wrap;\n  }\n  \n  @media (max-width: 480px) {\n    margin-bottom: 14px;\n    gap: 12px;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 1.08rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-weight: 500;\n  \n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 0.95rem;\n    width: 100%;\n  }\n`;\n\nconst Input = styled.input`\n  font-size: 1.08rem;\n  padding: 8px 12px;\n  border-radius: 8px;\n  border: 2px solid ${({ theme }) => theme.colors.glass};\n  background: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.text.primary};\n  transition: all 0.2s ease;\n  max-width: 200px;\n  \n  @media (max-width: 768px) {\n    font-size: 1rem;\n    padding: 6px 10px;\n    max-width: 180px;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 0.95rem;\n    padding: 8px 12px;\n    max-width: 160px;\n  }\n  \n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.colors.accent.gold};\n    box-shadow: 0 0 8px rgba(255, 215, 0, 0.3);\n  }\n  \n  &:hover {\n    border-color: ${({ theme }) => theme.colors.accent.gold};\n  }\n`;\n\nconst Toggle = styled.input.attrs({ type: 'checkbox' })`\n  width: 40px;\n  height: 22px;\n  accent-color: ${({ theme }) => theme.colors.accent};\n  \n  @media (max-width: 480px) {\n    width: 36px;\n    height: 20px;\n  }\n`;\n\nconst Button = styled.button`\n  background: ${({ theme }) => theme.gradients.primary};\n  color: ${({ theme }) => theme.colors.text.primary};\n  border: none;\n  border-radius: 8px;\n  padding: 8px 18px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  @media (max-width: 768px) {\n    padding: 6px 14px;\n    font-size: 0.9rem;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 8px 16px;\n    font-size: 0.85rem;\n    width: 100%;\n  }\n  \n  &:hover, &:focus {\n    background: ${({ theme }) => theme.gradients.gold};\n    outline: none;\n    transform: translateY(-1px);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\n\n\nconst PencilIconButton = styled.button`\n  background: ${({ theme }) => theme.gradients.primary};\n  color: ${({ theme }) => theme.colors.text.primary};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 36px;\n  height: 36px;\n  \n  @media (max-width: 768px) {\n    padding: 6px;\n    font-size: 0.9rem;\n    min-width: 32px;\n    height: 32px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 8px;\n    font-size: 0.85rem;\n    min-width: 36px;\n    height: 36px;\n  }\n  \n  &:hover, &:focus {\n    background: ${({ theme }) => theme.gradients.gold};\n    outline: none;\n    transform: translateY(-1px);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst SignOutButton = styled(Button)`\n  width: 100%;\n  background: linear-gradient(135deg, rgba(231, 76, 60, 0.8) 0%, rgba(192, 57, 43, 0.8) 100%);\n  border: 2px solid rgba(231, 76, 60, 0.3);\n  color: #fff;\n  font-weight: 700;\n  margin-top: 16px;\n  \n  &:hover {\n    background: linear-gradient(135deg, rgba(231, 76, 60, 1) 0%, rgba(192, 57, 43, 1) 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(231, 76, 60, 0.3);\n  }\n`;\n\nconst UserInfo = styled.div`\n  margin-bottom: 16px;\n  color: #fff;\n  font-size: 0.9rem;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  \n  @media (max-width: 480px) {\n    font-size: 0.85rem;\n    padding: 10px;\n  }\n`;\n\nconst SettingsScreen = ({ \n  themeMode = process.env.REACT_APP_DEFAULT_THEME_MODE || 'dark', \n  onToggleTheme = () => {}, \n  gradientKey = process.env.REACT_APP_DEFAULT_GRADIENT || 'monarch', \n  onGradientChange = () => {} \n}) => {\n  const { user, signOut, profile, refreshProfile, avatarUrl } = useAuth();\n  const [open, setOpen] = useState('account');\n  const [displayName, setDisplayName] = useState('');\n  const [originalDisplayName, setOriginalDisplayName] = useState('');\n  const [isEditingDisplayName, setIsEditingDisplayName] = useState(false);\n  const [emailPref, setEmailPref] = useState(true);\n  const [avatar, setAvatar] = useState(null);\n\n  // Update display name and avatar when user or profile changes\n  useEffect(() => {\n    if (user) {\n      const name = user.user_metadata?.username || user.email?.split('@')[0] || 'User';\n      setDisplayName(name);\n      setOriginalDisplayName(name);\n      \n      // Set avatar from useAuth context (which handles fallback hierarchy)\n      setAvatar(avatarUrl);\n\n      // Ensure profile exists in database\n      ensureProfileExists();\n    }\n  }, [user, profile, avatarUrl]);\n\n  const ensureProfileExists = async () => {\n    if (!user || profile) return; // Skip if user doesn't exist or profile already exists\n    \n    try {\n      console.log('Ensuring profile exists for user:', user.id);\n      \n      const { error } = await supabase\n        .from('user_profiles')\n        .upsert({\n          id: user.id,\n          display_name: user.user_metadata?.username || user.email?.split('@')[0] || 'User',\n          email: user.email,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        });\n\n      if (error) {\n        console.error('Error creating profile:', error);\n      } else {\n        console.log('Profile created successfully');\n        // Refresh the profile to get the updated data\n        await refreshProfile();\n      }\n    } catch (error) {\n      console.error('Error ensuring profile exists:', error);\n    }\n  };\n\n  const navigate = useNavigate();\n\n  const handleLogout = async () => {\n    try {\n      console.log('🔄 Sign out button clicked!');\n      console.log('User before sign out:', user);\n      console.log('Sign out function:', signOut);\n      \n      // Add timeout to prevent hanging\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('Sign out timeout - network issue')), 5000);\n      });\n      \n      // Try the useAuth signOut first with timeout\n      if (signOut) {\n        console.log('Using useAuth signOut with timeout...');\n        const result = await Promise.race([\n          signOut(),\n          timeoutPromise\n        ]);\n        console.log('Sign out result:', result);\n        \n        // Perform comprehensive cleanup\n        await performAuthCleanup();\n        \n        console.log('Sign out successful, navigating to home...');\n        navigate('/');\n      } else {\n        console.log('useAuth signOut not available, trying direct Supabase...');\n        // Fallback to direct Supabase signOut with timeout\n        const { error } = await Promise.race([\n          supabase.auth.signOut(),\n          timeoutPromise\n        ]);\n        if (error) throw error;\n        \n        // Perform comprehensive cleanup\n        await performAuthCleanup();\n        \n        console.log('Sign out successful, navigating to home...');\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('❌ Error signing out:', error);\n      \n      // If it's a timeout, force comprehensive cleanup\n      if (error.message.includes('timeout')) {\n        console.log('Network timeout detected, forcing comprehensive cleanup...');\n        \n        // Use emergency cleanup for timeout scenarios\n        emergencyCleanup();\n        return;\n      }\n      \n      // For any other error, try comprehensive cleanup\n      console.log('Sign out failed, attempting comprehensive cleanup...');\n      try {\n        await performAuthCleanup();\n        forcePageReload();\n      } catch (cleanupError) {\n        console.error('Cleanup failed, using emergency cleanup:', cleanupError);\n        emergencyCleanup();\n      }\n    }\n  };\n\n  const handleLogin = () => {\n    navigate('/login');\n  };\n\n  return (\n    <Container>\n      <PageTitle>Account & Profile</PageTitle>\n      \n      <Accordion>\n        <AccordionSection>\n          <AccordionHeader\n            aria-expanded={open === 'account'}\n            onClick={() => setOpen(open === 'account' ? '' : 'account')}\n          >\n            Account & Profile\n            <span>{open === 'account' ? '▲' : '▼'}</span>\n          </AccordionHeader>\n          {open === 'account' && (\n            <AccordionContent>\n              <SettingRow style={{ flexDirection: 'column', alignItems: 'center', textAlign: 'center' }}>\n                <Label style={{ marginBottom: '12px' }}>Profile Picture</Label>\n                <AvatarUpload\n                  userId={user?.id}\n                  currentAvatarUrl={avatarUrl}\n                  onAvatarUpdate={async (newAvatarUrl) => {\n                    console.log('🔄 Avatar updated, syncing state...', newAvatarUrl);\n                    \n                    // Update local state immediately\n                    setAvatar(newAvatarUrl);\n                    \n                    // Refresh the global profile state\n                    try {\n                      await refreshProfile();\n                      console.log('✅ Profile refreshed successfully');\n                    } catch (error) {\n                      console.error('❌ Failed to refresh profile:', error);\n                    }\n                    \n                    // Force a small delay to ensure state propagation\n                    setTimeout(() => {\n                      console.log('🔄 State sync complete');\n                    }, 500);\n                  }}\n                  size={80}\n                  showButton={true}\n                />\n              </SettingRow>\n              \n              <SettingRow>\n                <Label htmlFor=\"displayName\">Display Name</Label>\n                <div style={{ display: 'flex', gap: '8px', alignItems: 'center', width: '100%' }}>\n                  <Input\n                    id=\"displayName\"\n                    value={displayName}\n                    onChange={e => setDisplayName(e.target.value)}\n                    onKeyDown={e => {\n                      if (e.key === 'Enter' && isEditingDisplayName && displayName !== originalDisplayName) {\n                        e.preventDefault();\n                        // Trigger save\n                        e.target.nextSibling?.click();\n                      } else if (e.key === 'Escape' && isEditingDisplayName) {\n                        e.preventDefault();\n                        // Trigger cancel\n                        setDisplayName(originalDisplayName);\n                        setIsEditingDisplayName(false);\n                      }\n                    }}\n                    placeholder=\"Enter your display name\"\n                    disabled={!isEditingDisplayName}\n                    style={{\n                      borderColor: displayName !== originalDisplayName \n                        ? 'rgba(255, 215, 0, 0.5)' \n                        : undefined,\n                      boxShadow: displayName !== originalDisplayName \n                        ? '0 0 8px rgba(255, 215, 0, 0.2)' \n                        : undefined,\n                      opacity: isEditingDisplayName ? 1 : 0.7,\n                      cursor: isEditingDisplayName ? 'text' : 'default'\n                    }}\n                  />\n                  <PencilIconButton \n                    type=\"button\" \n                    onClick={async () => {\n                      if (!isEditingDisplayName) {\n                        // Enter edit mode\n                        setIsEditingDisplayName(true);\n                      } else if (displayName !== originalDisplayName) {\n                        // Save changes\n                        try {\n                          const { error } = await supabase\n                            .from('user_profiles')\n                            .upsert({ \n                              id: user.id, \n                              display_name: displayName,\n                              updated_at: new Date().toISOString()\n                            });\n                          \n                          if (error) throw error;\n                          \n                          // Update user metadata\n                          const { error: metadataError } = await supabase.auth.updateUser({\n                            data: { username: displayName }\n                          });\n                          \n                          if (metadataError) throw metadataError;\n                          \n                          setOriginalDisplayName(displayName);\n                          setIsEditingDisplayName(false);\n                          alert('Display name updated successfully!');\n                        } catch (error) {\n                          console.error('Error updating display name:', error);\n                          alert('Failed to update display name. Please try again.');\n                        }\n                      } else {\n                        // Cancel editing - reset to original value\n                        setDisplayName(originalDisplayName);\n                        setIsEditingDisplayName(false);\n                      }\n                    }}\n                    style={{ \n                      background: isEditingDisplayName && displayName !== originalDisplayName\n                        ? 'rgba(255, 215, 0, 0.3)' \n                        : 'rgba(255, 215, 0, 0.2)',\n                      border: isEditingDisplayName && displayName !== originalDisplayName\n                        ? '1px solid rgba(255, 215, 0, 0.5)' \n                        : '1px solid rgba(255, 215, 0, 0.3)',\n                      color: isEditingDisplayName && displayName !== originalDisplayName ? '#000' : '#fff',\n                      fontWeight: isEditingDisplayName && displayName !== originalDisplayName ? 'bold' : 'normal'\n                    }}\n                    disabled={isEditingDisplayName && displayName === originalDisplayName}\n                    title={isEditingDisplayName ? (displayName !== originalDisplayName ? 'Save' : 'Cancel') : 'Edit'}\n                  >\n                    {isEditingDisplayName ? (displayName !== originalDisplayName ? '✓' : '✕') : '✏️'}\n                  </PencilIconButton>\n                </div>\n              </SettingRow>\n              \n              <SettingRow>\n                <Label>Email</Label>\n                <span style={{ color: '#FFB000', textDecoration: 'underline' }}>\n                  {user?.email || 'Not logged in'}\n                </span>\n              </SettingRow>\n              \n              <SettingRow>\n                <Label htmlFor=\"emailPref\">Email Preferences</Label>\n                <Toggle\n                  id=\"emailPref\"\n                  checked={emailPref}\n                  onChange={e => setEmailPref(e.target.checked)}\n                />\n              </SettingRow>\n              \n              <SettingRow>\n                <Label>Password/Security</Label>\n                <Button type=\"button\">Change Password</Button>\n              </SettingRow>\n\n              {user ? (\n                <div>\n                  <UserInfo>\n                    <strong>Logged in as:</strong> {user.email}\n                  </UserInfo>\n                  \n                  {/* Theme Testing Section */}\n                  <ErrorBoundary>\n                    <ThemeTestingSection />\n                  </ErrorBoundary>\n                  \n                  <SignOutButton\n                    onClick={handleLogout}\n                  >\n                    Sign Out\n                  </SignOutButton>\n                </div>\n              ) : (\n                <Button\n                  style={{ marginTop: 12, width: '100%' }}\n                  onClick={handleLogin}\n                >\n                  Sign In\n                </Button>\n              )}\n            </AccordionContent>\n          )}\n        </AccordionSection>\n        \n        <AccordionSection>\n          <AccordionHeader\n            aria-expanded={open === 'theme'}\n            onClick={() => setOpen(open === 'theme' ? '' : 'theme')}\n          >\n            App Experience\n            <span>{open === 'theme' ? '▲' : '▼'}</span>\n          </AccordionHeader>\n          {open === 'theme' && (\n            <AccordionContent>\n              <SettingRow>\n                <Label>Dark Mode</Label>\n                <Toggle\n                  type=\"checkbox\"\n                  checked={themeMode === 'dark'}\n                  onChange={onToggleTheme}\n                />\n              </SettingRow>\n            </AccordionContent>\n          )}\n        </AccordionSection>\n        \n        {/* Back Button at the bottom */}\n        <BackButton onClick={() => navigate('/profile')}>\n          ← Back to Profile\n        </BackButton>\n      </Accordion>\n    </Container>\n  );\n};\n\nexport default SettingsScreen; "],"names":["goldGlow","keyframes","_templateObject","_taggedTemplateLiteral","styled","div","_templateObject2","_ref","_theme$colors","_theme$colors$glass","theme","colors","glass","background","_ref2","_theme$colors2","_theme$colors2$accent","accent","gold","_ref3","_theme$colors3","_theme$colors3$accent","supabase","createClient","process","AvatarContainer","AvatarWrapper","AvatarImage","img","_templateObject3","AvatarPlaceholder","_templateObject4","props","Math","max","size","LoadingOverlay","_templateObject5","UploadButton","button","_templateObject6","HiddenInput","input","_templateObject7","ErrorMessage","_templateObject8","SuccessMessage","_templateObject9","userId","currentAvatarUrl","onAvatarUpdate","showButton","refreshProfile","updateAvatarUrl","refreshAvatarUrl","useAuth","avatar","setAvatar","useState","isLoading","setIsLoading","error","setError","success","setSuccess","fileInputRef","useRef","useEffect","uploadAvatar","async","console","log","timeoutPromise","Promise","_","reject","setTimeout","Error","file","includes","type","validateFile","fileExt","name","split","pop","fileName","concat","Date","now","filePath","uploadPromise","uploadError","storage","from","upload","cacheControl","upsert","message","data","getPublicUrl","publicUrl","updateData","updateError","id","avatar_url","updated_at","toISOString","onConflict","select","code","race","refreshError","warn","_jsxs","children","style","width","height","_jsx","src","alt","onError","onClick","handleButtonClick","_fileInputRef$current","current","click","disabled","ref","accept","onChange","event","target","files","value","ThemeTestingContainer","ThemeTestingTitle","h3","ThemeGrid","ThemeCard","owned","isCurrent","isPreview","ThemePreview","gradient","cardBg","cardBorder","cardBlur","buttonGradient","ThemeName","ThemeDescription","ThemeStatus","StatusBadge","span","ActionButton","_templateObject0","UnlockButton","_templateObject1","_templateObject10","_templateObject11","PreviewIndicator","_templateObject12","ThemeTestingSection","user","currentTheme","ownedThemes","loading","previewTheme","themes","switchTheme","previewThemeAction","clearPreview","unlockAllThemes","ownsTheme","useTheme","isUnlockingThemes","setIsUnlockingThemes","localError","setLocalError","localSuccess","setLocalSuccess","timer","clearTimeout","handleThemeSelect","themeKey","result","_themes$find","find","t","key","err","map","isOwned","isPreviewing","backgroundGradient","cardBackground","cardBackdropFilter","description","display","gap","e","stopPropagation","ErrorContainer","ErrorTitle","p","RetryButton","details","summary","pre","ErrorBoundary","React","constructor","super","handleRetry","this","setState","hasError","errorInfo","handleReset","errorCount","state","window","location","reload","getDerivedStateFromError","componentDidCatch","prevState","group","componentStack","groupEnd","render","isMultipleErrors","justifyContent","Container","BackButton","PageTitle","h1","typography","fontFamily","heading","text","primary","Accordion","AccordionSection","GlassCard","_ref4","_theme$colors$accent","AccordionHeader","_ref5","_ref6","_ref7","AccordionContent","SettingRow","Label","label","_ref8","Input","_ref9","_ref0","_ref1","_ref10","_ref11","Toggle","attrs","_ref12","Button","_ref13","gradients","_ref14","_ref15","PencilIconButton","_ref16","_ref17","_ref18","SignOutButton","UserInfo","_templateObject13","_ref19","themeMode","onToggleTheme","gradientKey","onGradientChange","signOut","profile","avatarUrl","open","setOpen","displayName","setDisplayName","originalDisplayName","setOriginalDisplayName","isEditingDisplayName","setIsEditingDisplayName","emailPref","setEmailPref","_user$user_metadata","_user$email","user_metadata","username","email","ensureProfileExists","_user$user_metadata2","_user$email2","display_name","created_at","navigate","useNavigate","flexDirection","alignItems","textAlign","marginBottom","AvatarUpload","newAvatarUrl","htmlFor","onKeyDown","_e$target$nextSibling","preventDefault","nextSibling","placeholder","borderColor","undefined","boxShadow","opacity","cursor","metadataError","auth","updateUser","alert","border","color","fontWeight","title","textDecoration","checked","performAuthCleanup","emergencyCleanup","forcePageReload","cleanupError","marginTop","handleLogin"],"sourceRoot":""}